Grammar

    0 $accept: commands $end

    1 commands: command_wrapper opt_semicolon

    2 command_wrapper: calc_stmt
    3                | select_stmt
    4                | insert_stmt
    5                | update_stmt
    6                | delete_stmt
    7                | create_table_stmt
    8                | drop_table_stmt
    9                | show_tables_stmt
   10                | show_index_stmt
   11                | desc_table_stmt
   12                | create_index_stmt
   13                | drop_index_stmt
   14                | sync_stmt
   15                | begin_stmt
   16                | commit_stmt
   17                | rollback_stmt
   18                | load_data_stmt
   19                | explain_stmt
   20                | set_variable_stmt
   21                | help_stmt
   22                | exit_stmt

   23 exit_stmt: EXIT

   24 help_stmt: HELP

   25 sync_stmt: SYNC

   26 begin_stmt: TRX_BEGIN

   27 commit_stmt: TRX_COMMIT

   28 rollback_stmt: TRX_ROLLBACK

   29 drop_table_stmt: DROP TABLE ID

   30 show_tables_stmt: SHOW TABLES

   31 show_index_stmt: SHOW INDEX FROM ID

   32 desc_table_stmt: DESC ID

   33 unique_marker: ε
   34              | UNIQUE

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID rel_list RBRACE

   36 drop_index_stmt: DROP INDEX ID ON ID

   37 nullable_marker: ε
   38                | UNNULLABLE
   39                | NULL_T

   40 as_marker: ε
   41          | AS

   42 create_table_stmt: CREATE TABLE ID as_marker select_stmt
   43                  | CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE as_marker select_stmt

   44 attr_def_list: ε
   45              | COMMA attr_def attr_def_list

   46 attr_def: ID type LBRACE number RBRACE nullable_marker
   47         | ID type nullable_marker

   48 number: NUMBER

   49 type: INT_T
   50     | STRING_T
   51     | TEXT_T
   52     | FLOAT_T
   53     | DATE_T

   54 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

   55 insert_list: ε
   56            | COMMA LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

   57 value_list_with_MINUS: ε
   58                      | COMMA value_with_MINUS value_list_with_MINUS

   59 value_with_MINUS: NULL_T
   60                 | NUMBER
   61                 | '-' NUMBER
   62                 | FLOAT
   63                 | DATE
   64                 | SSS

   65 value: NULL_T
   66      | NUMBER
   67      | FLOAT
   68      | DATE
   69      | SSS

   70 delete_stmt: DELETE FROM ID where

   71 update_stmt: UPDATE ID SET update_expr where

   72 update_expr: ID EQ LBRACE select_stmt RBRACE update_expr_list
   73            | ID EQ value update_expr_list

   74 update_expr_list: ε
   75                 | COMMA ID EQ LBRACE select_stmt RBRACE update_expr_list
   76                 | COMMA ID EQ value update_expr_list

   77 select_stmt: SELECT select_attr FROM ID rel_list where order group_by having
   78            | SELECT select_attr FROM join where order group_by having

   79 join: ID INNER_JOIN ID join_equal join_list

   80 join_list: INNER_JOIN ID join_equal join_list
   81          | ε

   82 join_equal: ε
   83           | ON a_expr

   84 calc_stmt: CALC expression_list

   85 expression_list: expression
   86                | expression COMMA expression_list

   87 expression: expression '+' expression
   88           | expression '-' expression
   89           | expression '*' expression
   90           | expression '/' expression
   91           | LBRACE expression RBRACE
   92           | value
   93           | '-' expression

   94 a_expr: value
   95       | rel_attr
   96       | select_stmt_with_paren
   97       | c_expr
   98       | '-' a_expr
   99       | '+' a_expr
  100       | a_expr '+' a_expr
  101       | a_expr '-' a_expr
  102       | a_expr '*' a_expr
  103       | a_expr '/' a_expr
  104       | a_expr AND a_expr
  105       | a_expr OR a_expr
  106       | a_expr EQ a_expr
  107       | a_expr LT a_expr
  108       | a_expr GT a_expr
  109       | a_expr LE a_expr
  110       | a_expr GE a_expr
  111       | a_expr NE a_expr
  112       | a_expr LIKE a_expr
  113       | a_expr NOT_LIKE a_expr
  114       | a_expr IS_NOT a_expr
  115       | a_expr IS a_expr
  116       | a_expr NOT_IN a_expr
  117       | a_expr IN a_expr
  118       | EXISTS LBRACE select_stmt RBRACE
  119       | NOT_EXISTS LBRACE select_stmt RBRACE

  120 c_expr: LBRACE a_expr RBRACE
  121       | function
  122       | value_list_LALR

  123 value_list_LALR: LBRACE value_list_LA RBRACE

  124 select_stmt_with_paren: LBRACE select_stmt RBRACE

  125 value_list_LA: value_list_LA COMMA value
  126              | value COMMA value

  127 select_attr: '*' a_expr_list
  128            | a_expr a_expr_list

  129 function: func_LA a_expr RBRACE
  130         | func_LA '*' RBRACE

  131 func_LA: func_name LBRACE

  132 func_name: AGG_MAX
  133          | AGG_MIN
  134          | AGG_COUNT
  135          | AGG_AVG
  136          | AGG_SUM

  137 rel_attr: ID
  138         | ID DOT ID

  139 attr_list: ε
  140          | COMMA rel_attr attr_list

  141 a_expr_list: ε
  142            | COMMA a_expr a_expr_list

  143 rel_list: ε
  144         | COMMA ID rel_list

  145 group_by: ε
  146         | GROUP_BY rel_attr attr_list

  147 having: ε
  148       | HAVING a_expr

  149 order: ε
  150      | ORDER_BY rel_attr asc_or_desc order_list

  151 order_list: ε
  152           | COMMA rel_attr asc_or_desc order_list

  153 asc_or_desc: ε
  154            | ASC
  155            | DESC

  156 where: ε
  157      | WHERE a_expr

  158 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE ID

  159 explain_stmt: EXPLAIN command_wrapper

  160 set_variable_stmt: SET ID EQ value

  161 opt_semicolon: ε
  162              | SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    '*' (42) 89 102 127 130
    '+' (43) 87 99 100
    '-' (45) 61 88 93 98 101
    '/' (47) 90 103
    error (256)
    SEMICOLON (258) 162
    AS (259) 41
    CREATE (260) 35 42 43
    DROP (261) 29 36
    TABLE (262) 29 42 43 158
    TABLES (263) 30
    INDEX (264) 31 35 36
    CALC (265) 84
    SELECT (266) 77 78
    DESC (267) 32 155
    ASC (268) 154
    AGG_MAX (269) 132
    AGG_MIN (270) 133
    AGG_COUNT (271) 134
    AGG_AVG (272) 135
    AGG_SUM (273) 136
    GROUP_BY (274) 146
    UNNULLABLE (275) 38
    SHOW (276) 30 31
    SYNC (277) 25
    INSERT (278) 54
    UNIQUE (279) 34
    DELETE (280) 70
    UPDATE (281) 71
    LBRACE (282) 35 43 46 54 56 72 75 91 118 119 120 123 124 131
    RBRACE (283) 35 43 46 54 56 72 75 91 118 119 120 123 124 129 130
    COMMA (284) 45 56 58 75 76 86 125 126 140 142 144 152
    TRX_BEGIN (285) 26
    TRX_COMMIT (286) 27
    TRX_ROLLBACK (287) 28
    INT_T (288) 49
    STRING_T (289) 50
    FLOAT_T (290) 52
    DATE_T (291) 53
    NULL_T (292) 39 59 65
    TEXT_T (293) 51
    HELP (294) 24
    EXIT (295) 23
    DOT (296) 138
    INTO (297) 54 158
    VALUES (298) 54
    FROM (299) 31 70 77 78
    WHERE (300) 157
    OR (301) 105
    HAVING (302) 148
    AND (303) 104
    SET (304) 71 160
    ON (305) 35 36 83
    LOAD (306) 158
    DATA (307) 158
    INFILE (308) 158
    EXPLAIN (309) 159
    EQ (310) 72 73 75 76 106 160
    LT (311) 107
    GT (312) 108
    LE (313) 109
    GE (314) 110
    NE (315) 111
    LIKE (316) 112
    NOT_LIKE (317) 113
    IS (318) 115
    IS_NOT (319) 114
    INNER_JOIN (320) 79 80
    NOT_IN (321) 116
    IN (322) 117
    NOT_EXISTS (323) 119
    EXISTS (324) 118
    ORDER_BY (325) 150
    NUMBER <number> (326) 48 60 61 66
    FLOAT <floats> (327) 62 67
    DATE <dates> (328) 63 68
    ID <string> (329) 29 31 32 35 36 42 43 46 47 54 70 71 72 73 75 76 77 79 80 137 138 144 158 160
    SSS <string> (330) 64 69 158
    UMINUS (331)


Nonterminals, with rules where they appear

    $accept (81)
        on left: 0
    commands <sql_node> (82)
        on left: 1
        on right: 0
    command_wrapper <sql_node> (83)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
        on right: 1 159
    exit_stmt <sql_node> (84)
        on left: 23
        on right: 22
    help_stmt <sql_node> (85)
        on left: 24
        on right: 21
    sync_stmt <sql_node> (86)
        on left: 25
        on right: 14
    begin_stmt <sql_node> (87)
        on left: 26
        on right: 15
    commit_stmt <sql_node> (88)
        on left: 27
        on right: 16
    rollback_stmt <sql_node> (89)
        on left: 28
        on right: 17
    drop_table_stmt <sql_node> (90)
        on left: 29
        on right: 8
    show_tables_stmt <sql_node> (91)
        on left: 30
        on right: 9
    show_index_stmt <sql_node> (92)
        on left: 31
        on right: 10
    desc_table_stmt <sql_node> (93)
        on left: 32
        on right: 11
    unique_marker <boolean> (94)
        on left: 33 34
        on right: 35
    create_index_stmt <sql_node> (95)
        on left: 35
        on right: 12
    drop_index_stmt <sql_node> (96)
        on left: 36
        on right: 13
    nullable_marker <boolean> (97)
        on left: 37 38 39
        on right: 46 47
    as_marker <boolean> (98)
        on left: 40 41
        on right: 42 43
    create_table_stmt <sql_node> (99)
        on left: 42 43
        on right: 7
    attr_def_list <attr_infos> (100)
        on left: 44 45
        on right: 43 45
    attr_def <attr_info> (101)
        on left: 46 47
        on right: 43 45
    number <number> (102)
        on left: 48
        on right: 46
    type <number> (103)
        on left: 49 50 51 52 53
        on right: 46 47
    insert_stmt <sql_node> (104)
        on left: 54
        on right: 4
    insert_list <insert_list> (105)
        on left: 55 56
        on right: 54 56
    value_list_with_MINUS <value_list> (106)
        on left: 57 58
        on right: 54 56 58
    value_with_MINUS <value> (107)
        on left: 59 60 61 62 63 64
        on right: 54 56 58
    value <value> (108)
        on left: 65 66 67 68 69
        on right: 73 76 92 94 125 126 160
    delete_stmt <sql_node> (109)
        on left: 70
        on right: 6
    update_stmt <sql_node> (110)
        on left: 71
        on right: 5
    update_expr <update_expr> (111)
        on left: 72 73
        on right: 71
    update_expr_list <update_expr> (112)
        on left: 74 75 76
        on right: 72 73 75 76
    select_stmt <sql_node> (113)
        on left: 77 78
        on right: 3 42 43 72 75 118 119 124
    join <join_list> (114)
        on left: 79
        on right: 78
    join_list <join_list> (115)
        on left: 80 81
        on right: 79 80
    join_equal <a_expr> (116)
        on left: 82 83
        on right: 79 80
    calc_stmt <sql_node> (117)
        on left: 84
        on right: 2
    expression_list <expression_list> (118)
        on left: 85 86
        on right: 84 86
    expression <expression> (119)
        on left: 87 88 89 90 91 92 93
        on right: 85 86 87 88 89 90 91 93
    a_expr <a_expr> (120)
        on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
        on right: 83 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 120 128 129 142 148 157
    c_expr <a_expr> (121)
        on left: 120 121 122
        on right: 97
    value_list_LALR <a_expr> (122)
        on left: 123
        on right: 122
    select_stmt_with_paren <a_expr> (123)
        on left: 124
        on right: 96
    value_list_LA <value_list> (124)
        on left: 125 126
        on right: 123 125
    select_attr <a_expr_list> (125)
        on left: 127 128
        on right: 77 78
    function <a_expr> (126)
        on left: 129 130
        on right: 121
    func_LA <func_name> (127)
        on left: 131
        on right: 129 130
    func_name <func_name> (128)
        on left: 132 133 134 135 136
        on right: 131
    rel_attr <rel_attr> (129)
        on left: 137 138
        on right: 95 140 146 150 152
    attr_list <rel_attr_list> (130)
        on left: 139 140
        on right: 140 146
    a_expr_list <a_expr_list> (131)
        on left: 141 142
        on right: 127 128 142
    rel_list <relation_list> (132)
        on left: 143 144
        on right: 35 77 144
    group_by <rel_attr_list> (133)
        on left: 145 146
        on right: 77 78
    having <a_expr> (134)
        on left: 147 148
        on right: 77 78
    order <order_by_list> (135)
        on left: 149 150
        on right: 77 78
    order_list <order_by_list> (136)
        on left: 151 152
        on right: 150 152
    asc_or_desc <boolean> (137)
        on left: 153 154 155
        on right: 150 152
    where <a_expr> (138)
        on left: 156 157
        on right: 70 71 77 78
    load_data_stmt <sql_node> (139)
        on left: 158
        on right: 18
    explain_stmt <sql_node> (140)
        on left: 159
        on right: 19
    set_variable_stmt <sql_node> (141)
        on left: 160
        on right: 20
    opt_semicolon (142)
        on left: 161 162
        on right: 1


State 0

    0 $accept: • commands $end

    CREATE        shift, and go to state 1
    DROP          shift, and go to state 2
    CALC          shift, and go to state 3
    SELECT        shift, and go to state 4
    DESC          shift, and go to state 5
    SHOW          shift, and go to state 6
    SYNC          shift, and go to state 7
    INSERT        shift, and go to state 8
    DELETE        shift, and go to state 9
    UPDATE        shift, and go to state 10
    TRX_BEGIN     shift, and go to state 11
    TRX_COMMIT    shift, and go to state 12
    TRX_ROLLBACK  shift, and go to state 13
    HELP          shift, and go to state 14
    EXIT          shift, and go to state 15
    SET           shift, and go to state 16
    LOAD          shift, and go to state 17
    EXPLAIN       shift, and go to state 18

    commands           go to state 19
    command_wrapper    go to state 20
    exit_stmt          go to state 21
    help_stmt          go to state 22
    sync_stmt          go to state 23
    begin_stmt         go to state 24
    commit_stmt        go to state 25
    rollback_stmt      go to state 26
    drop_table_stmt    go to state 27
    show_tables_stmt   go to state 28
    show_index_stmt    go to state 29
    desc_table_stmt    go to state 30
    create_index_stmt  go to state 31
    drop_index_stmt    go to state 32
    create_table_stmt  go to state 33
    insert_stmt        go to state 34
    delete_stmt        go to state 35
    update_stmt        go to state 36
    select_stmt        go to state 37
    calc_stmt          go to state 38
    load_data_stmt     go to state 39
    explain_stmt       go to state 40
    set_variable_stmt  go to state 41


State 1

   35 create_index_stmt: CREATE • unique_marker INDEX ID ON ID LBRACE ID rel_list RBRACE
   42 create_table_stmt: CREATE • TABLE ID as_marker select_stmt
   43                  | CREATE • TABLE ID LBRACE attr_def attr_def_list RBRACE as_marker select_stmt

    TABLE   shift, and go to state 42
    UNIQUE  shift, and go to state 43

    $default  reduce using rule 33 (unique_marker)

    unique_marker  go to state 44


State 2

   29 drop_table_stmt: DROP • TABLE ID
   36 drop_index_stmt: DROP • INDEX ID ON ID

    TABLE  shift, and go to state 45
    INDEX  shift, and go to state 46


State 3

   84 calc_stmt: CALC • expression_list

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value            go to state 54
    expression_list  go to state 55
    expression       go to state 56


State 4

   77 select_stmt: SELECT • select_attr FROM ID rel_list where order group_by having
   78            | SELECT • select_attr FROM join where order group_by having

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67
    '*'         shift, and go to state 68

    value                   go to state 69
    a_expr                  go to state 70
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    select_attr             go to state 74
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 5

   32 desc_table_stmt: DESC • ID

    ID  shift, and go to state 79


State 6

   30 show_tables_stmt: SHOW • TABLES
   31 show_index_stmt: SHOW • INDEX FROM ID

    TABLES  shift, and go to state 80
    INDEX   shift, and go to state 81


State 7

   25 sync_stmt: SYNC •

    $default  reduce using rule 25 (sync_stmt)


State 8

   54 insert_stmt: INSERT • INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

    INTO  shift, and go to state 82


State 9

   70 delete_stmt: DELETE • FROM ID where

    FROM  shift, and go to state 83


State 10

   71 update_stmt: UPDATE • ID SET update_expr where

    ID  shift, and go to state 84


State 11

   26 begin_stmt: TRX_BEGIN •

    $default  reduce using rule 26 (begin_stmt)


State 12

   27 commit_stmt: TRX_COMMIT •

    $default  reduce using rule 27 (commit_stmt)


State 13

   28 rollback_stmt: TRX_ROLLBACK •

    $default  reduce using rule 28 (rollback_stmt)


State 14

   24 help_stmt: HELP •

    $default  reduce using rule 24 (help_stmt)


State 15

   23 exit_stmt: EXIT •

    $default  reduce using rule 23 (exit_stmt)


State 16

  160 set_variable_stmt: SET • ID EQ value

    ID  shift, and go to state 85


State 17

  158 load_data_stmt: LOAD • DATA INFILE SSS INTO TABLE ID

    DATA  shift, and go to state 86


State 18

  159 explain_stmt: EXPLAIN • command_wrapper

    CREATE        shift, and go to state 1
    DROP          shift, and go to state 2
    CALC          shift, and go to state 3
    SELECT        shift, and go to state 4
    DESC          shift, and go to state 5
    SHOW          shift, and go to state 6
    SYNC          shift, and go to state 7
    INSERT        shift, and go to state 8
    DELETE        shift, and go to state 9
    UPDATE        shift, and go to state 10
    TRX_BEGIN     shift, and go to state 11
    TRX_COMMIT    shift, and go to state 12
    TRX_ROLLBACK  shift, and go to state 13
    HELP          shift, and go to state 14
    EXIT          shift, and go to state 15
    SET           shift, and go to state 16
    LOAD          shift, and go to state 17
    EXPLAIN       shift, and go to state 18

    command_wrapper    go to state 87
    exit_stmt          go to state 21
    help_stmt          go to state 22
    sync_stmt          go to state 23
    begin_stmt         go to state 24
    commit_stmt        go to state 25
    rollback_stmt      go to state 26
    drop_table_stmt    go to state 27
    show_tables_stmt   go to state 28
    show_index_stmt    go to state 29
    desc_table_stmt    go to state 30
    create_index_stmt  go to state 31
    drop_index_stmt    go to state 32
    create_table_stmt  go to state 33
    insert_stmt        go to state 34
    delete_stmt        go to state 35
    update_stmt        go to state 36
    select_stmt        go to state 37
    calc_stmt          go to state 38
    load_data_stmt     go to state 39
    explain_stmt       go to state 40
    set_variable_stmt  go to state 41


State 19

    0 $accept: commands • $end

    $end  shift, and go to state 88


State 20

    1 commands: command_wrapper • opt_semicolon

    SEMICOLON  shift, and go to state 89

    $default  reduce using rule 161 (opt_semicolon)

    opt_semicolon  go to state 90


State 21

   22 command_wrapper: exit_stmt •

    $default  reduce using rule 22 (command_wrapper)


State 22

   21 command_wrapper: help_stmt •

    $default  reduce using rule 21 (command_wrapper)


State 23

   14 command_wrapper: sync_stmt •

    $default  reduce using rule 14 (command_wrapper)


State 24

   15 command_wrapper: begin_stmt •

    $default  reduce using rule 15 (command_wrapper)


State 25

   16 command_wrapper: commit_stmt •

    $default  reduce using rule 16 (command_wrapper)


State 26

   17 command_wrapper: rollback_stmt •

    $default  reduce using rule 17 (command_wrapper)


State 27

    8 command_wrapper: drop_table_stmt •

    $default  reduce using rule 8 (command_wrapper)


State 28

    9 command_wrapper: show_tables_stmt •

    $default  reduce using rule 9 (command_wrapper)


State 29

   10 command_wrapper: show_index_stmt •

    $default  reduce using rule 10 (command_wrapper)


State 30

   11 command_wrapper: desc_table_stmt •

    $default  reduce using rule 11 (command_wrapper)


State 31

   12 command_wrapper: create_index_stmt •

    $default  reduce using rule 12 (command_wrapper)


State 32

   13 command_wrapper: drop_index_stmt •

    $default  reduce using rule 13 (command_wrapper)


State 33

    7 command_wrapper: create_table_stmt •

    $default  reduce using rule 7 (command_wrapper)


State 34

    4 command_wrapper: insert_stmt •

    $default  reduce using rule 4 (command_wrapper)


State 35

    6 command_wrapper: delete_stmt •

    $default  reduce using rule 6 (command_wrapper)


State 36

    5 command_wrapper: update_stmt •

    $default  reduce using rule 5 (command_wrapper)


State 37

    3 command_wrapper: select_stmt •

    $default  reduce using rule 3 (command_wrapper)


State 38

    2 command_wrapper: calc_stmt •

    $default  reduce using rule 2 (command_wrapper)


State 39

   18 command_wrapper: load_data_stmt •

    $default  reduce using rule 18 (command_wrapper)


State 40

   19 command_wrapper: explain_stmt •

    $default  reduce using rule 19 (command_wrapper)


State 41

   20 command_wrapper: set_variable_stmt •

    $default  reduce using rule 20 (command_wrapper)


State 42

   42 create_table_stmt: CREATE TABLE • ID as_marker select_stmt
   43                  | CREATE TABLE • ID LBRACE attr_def attr_def_list RBRACE as_marker select_stmt

    ID  shift, and go to state 91


State 43

   34 unique_marker: UNIQUE •

    $default  reduce using rule 34 (unique_marker)


State 44

   35 create_index_stmt: CREATE unique_marker • INDEX ID ON ID LBRACE ID rel_list RBRACE

    INDEX  shift, and go to state 92


State 45

   29 drop_table_stmt: DROP TABLE • ID

    ID  shift, and go to state 93


State 46

   36 drop_index_stmt: DROP INDEX • ID ON ID

    ID  shift, and go to state 94


State 47

   91 expression: LBRACE • expression RBRACE

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 95


State 48

   65 value: NULL_T •

    $default  reduce using rule 65 (value)


State 49

   66 value: NUMBER •

    $default  reduce using rule 66 (value)


State 50

   67 value: FLOAT •

    $default  reduce using rule 67 (value)


State 51

   68 value: DATE •

    $default  reduce using rule 68 (value)


State 52

   69 value: SSS •

    $default  reduce using rule 69 (value)


State 53

   93 expression: '-' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 96


State 54

   92 expression: value •

    $default  reduce using rule 92 (expression)


State 55

   84 calc_stmt: CALC expression_list •

    $default  reduce using rule 84 (calc_stmt)


State 56

   85 expression_list: expression •  [$end, SEMICOLON]
   86                | expression • COMMA expression_list
   87 expression: expression • '+' expression
   88           | expression • '-' expression
   89           | expression • '*' expression
   90           | expression • '/' expression

    COMMA  shift, and go to state 97
    '+'    shift, and go to state 98
    '-'    shift, and go to state 99
    '*'    shift, and go to state 100
    '/'    shift, and go to state 101

    $default  reduce using rule 85 (expression_list)


State 57

  132 func_name: AGG_MAX •

    $default  reduce using rule 132 (func_name)


State 58

  133 func_name: AGG_MIN •

    $default  reduce using rule 133 (func_name)


State 59

  134 func_name: AGG_COUNT •

    $default  reduce using rule 134 (func_name)


State 60

  135 func_name: AGG_AVG •

    $default  reduce using rule 135 (func_name)


State 61

  136 func_name: AGG_SUM •

    $default  reduce using rule 136 (func_name)


State 62

  120 c_expr: LBRACE • a_expr RBRACE
  123 value_list_LALR: LBRACE • value_list_LA RBRACE
  124 select_stmt_with_paren: LBRACE • select_stmt RBRACE

    SELECT      shift, and go to state 4
    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 102
    select_stmt             go to state 103
    a_expr                  go to state 104
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    value_list_LA           go to state 105
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 63

  119 a_expr: NOT_EXISTS • LBRACE select_stmt RBRACE

    LBRACE  shift, and go to state 106


State 64

  118 a_expr: EXISTS • LBRACE select_stmt RBRACE

    LBRACE  shift, and go to state 107


State 65

  137 rel_attr: ID •  [$end, SEMICOLON, DESC, ASC, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  138         | ID • DOT ID

    DOT  shift, and go to state 108

    $default  reduce using rule 137 (rel_attr)


State 66

   99 a_expr: '+' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 109
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 67

   98 a_expr: '-' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 110
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 68

  127 select_attr: '*' • a_expr_list

    COMMA  shift, and go to state 111

    $default  reduce using rule 141 (a_expr_list)

    a_expr_list  go to state 112


State 69

   94 a_expr: value •

    $default  reduce using rule 94 (a_expr)


State 70

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr
  128 select_attr: a_expr • a_expr_list

    COMMA     shift, and go to state 111
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 141 (a_expr_list)

    a_expr_list  go to state 131


State 71

   97 a_expr: c_expr •

    $default  reduce using rule 97 (a_expr)


State 72

  122 c_expr: value_list_LALR •

    $default  reduce using rule 122 (c_expr)


State 73

   96 a_expr: select_stmt_with_paren •

    $default  reduce using rule 96 (a_expr)


State 74

   77 select_stmt: SELECT select_attr • FROM ID rel_list where order group_by having
   78            | SELECT select_attr • FROM join where order group_by having

    FROM  shift, and go to state 132


State 75

  121 c_expr: function •

    $default  reduce using rule 121 (c_expr)


State 76

  129 function: func_LA • a_expr RBRACE
  130         | func_LA • '*' RBRACE

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67
    '*'         shift, and go to state 133

    value                   go to state 69
    a_expr                  go to state 134
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 77

  131 func_LA: func_name • LBRACE

    LBRACE  shift, and go to state 135


State 78

   95 a_expr: rel_attr •

    $default  reduce using rule 95 (a_expr)


State 79

   32 desc_table_stmt: DESC ID •

    $default  reduce using rule 32 (desc_table_stmt)


State 80

   30 show_tables_stmt: SHOW TABLES •

    $default  reduce using rule 30 (show_tables_stmt)


State 81

   31 show_index_stmt: SHOW INDEX • FROM ID

    FROM  shift, and go to state 136


State 82

   54 insert_stmt: INSERT INTO • ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

    ID  shift, and go to state 137


State 83

   70 delete_stmt: DELETE FROM • ID where

    ID  shift, and go to state 138


State 84

   71 update_stmt: UPDATE ID • SET update_expr where

    SET  shift, and go to state 139


State 85

  160 set_variable_stmt: SET ID • EQ value

    EQ  shift, and go to state 140


State 86

  158 load_data_stmt: LOAD DATA • INFILE SSS INTO TABLE ID

    INFILE  shift, and go to state 141


State 87

  159 explain_stmt: EXPLAIN command_wrapper •

    $default  reduce using rule 159 (explain_stmt)


State 88

    0 $accept: commands $end •

    $default  accept


State 89

  162 opt_semicolon: SEMICOLON •

    $default  reduce using rule 162 (opt_semicolon)


State 90

    1 commands: command_wrapper opt_semicolon •

    $default  reduce using rule 1 (commands)


State 91

   42 create_table_stmt: CREATE TABLE ID • as_marker select_stmt
   43                  | CREATE TABLE ID • LBRACE attr_def attr_def_list RBRACE as_marker select_stmt

    AS      shift, and go to state 142
    LBRACE  shift, and go to state 143

    $default  reduce using rule 40 (as_marker)

    as_marker  go to state 144


State 92

   35 create_index_stmt: CREATE unique_marker INDEX • ID ON ID LBRACE ID rel_list RBRACE

    ID  shift, and go to state 145


State 93

   29 drop_table_stmt: DROP TABLE ID •

    $default  reduce using rule 29 (drop_table_stmt)


State 94

   36 drop_index_stmt: DROP INDEX ID • ON ID

    ON  shift, and go to state 146


State 95

   87 expression: expression • '+' expression
   88           | expression • '-' expression
   89           | expression • '*' expression
   90           | expression • '/' expression
   91           | LBRACE expression • RBRACE

    RBRACE  shift, and go to state 147
    '+'     shift, and go to state 98
    '-'     shift, and go to state 99
    '*'     shift, and go to state 100
    '/'     shift, and go to state 101


State 96

   87 expression: expression • '+' expression
   88           | expression • '-' expression
   89           | expression • '*' expression
   90           | expression • '/' expression
   93           | '-' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']

    $default  reduce using rule 93 (expression)

    Conflict between rule 93 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 93 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 93 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 93 and token '/' resolved as reduce ('/' < UMINUS).


State 97

   86 expression_list: expression COMMA • expression_list

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value            go to state 54
    expression_list  go to state 148
    expression       go to state 56


State 98

   87 expression: expression '+' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 149


State 99

   88 expression: expression '-' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 150


State 100

   89 expression: expression '*' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 151


State 101

   90 expression: expression '/' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 152


State 102

   94 a_expr: value •  [RBRACE, OR, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, NOT_IN, IN, '+', '-', '*', '/']
  126 value_list_LA: value • COMMA value

    COMMA  shift, and go to state 153

    $default  reduce using rule 94 (a_expr)


State 103

  124 select_stmt_with_paren: LBRACE select_stmt • RBRACE

    RBRACE  shift, and go to state 154


State 104

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr
  120 c_expr: LBRACE a_expr • RBRACE

    RBRACE    shift, and go to state 155
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130


State 105

  123 value_list_LALR: LBRACE value_list_LA • RBRACE
  125 value_list_LA: value_list_LA • COMMA value

    RBRACE  shift, and go to state 156
    COMMA   shift, and go to state 157


State 106

  119 a_expr: NOT_EXISTS LBRACE • select_stmt RBRACE

    SELECT  shift, and go to state 4

    select_stmt  go to state 158


State 107

  118 a_expr: EXISTS LBRACE • select_stmt RBRACE

    SELECT  shift, and go to state 4

    select_stmt  go to state 159


State 108

  138 rel_attr: ID DOT • ID

    ID  shift, and go to state 160


State 109

   99 a_expr: '+' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  100       | a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    $default  reduce using rule 99 (a_expr)

    Conflict between rule 99 and token OR resolved as reduce (OR < UMINUS).
    Conflict between rule 99 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 99 and token EQ resolved as reduce (EQ < UMINUS).
    Conflict between rule 99 and token LT resolved as reduce (LT < UMINUS).
    Conflict between rule 99 and token GT resolved as reduce (GT < UMINUS).
    Conflict between rule 99 and token LE resolved as reduce (LE < UMINUS).
    Conflict between rule 99 and token GE resolved as reduce (GE < UMINUS).
    Conflict between rule 99 and token NE resolved as reduce (NE < UMINUS).
    Conflict between rule 99 and token LIKE resolved as reduce (LIKE < UMINUS).
    Conflict between rule 99 and token NOT_LIKE resolved as reduce (NOT_LIKE < UMINUS).
    Conflict between rule 99 and token IS resolved as reduce (IS < UMINUS).
    Conflict between rule 99 and token IS_NOT resolved as reduce (IS_NOT < UMINUS).
    Conflict between rule 99 and token NOT_IN resolved as reduce (NOT_IN < UMINUS).
    Conflict between rule 99 and token IN resolved as reduce (IN < UMINUS).
    Conflict between rule 99 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 99 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 99 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 99 and token '/' resolved as reduce ('/' < UMINUS).


State 110

   98 a_expr: '-' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  100       | a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    $default  reduce using rule 98 (a_expr)

    Conflict between rule 98 and token OR resolved as reduce (OR < UMINUS).
    Conflict between rule 98 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 98 and token EQ resolved as reduce (EQ < UMINUS).
    Conflict between rule 98 and token LT resolved as reduce (LT < UMINUS).
    Conflict between rule 98 and token GT resolved as reduce (GT < UMINUS).
    Conflict between rule 98 and token LE resolved as reduce (LE < UMINUS).
    Conflict between rule 98 and token GE resolved as reduce (GE < UMINUS).
    Conflict between rule 98 and token NE resolved as reduce (NE < UMINUS).
    Conflict between rule 98 and token LIKE resolved as reduce (LIKE < UMINUS).
    Conflict between rule 98 and token NOT_LIKE resolved as reduce (NOT_LIKE < UMINUS).
    Conflict between rule 98 and token IS resolved as reduce (IS < UMINUS).
    Conflict between rule 98 and token IS_NOT resolved as reduce (IS_NOT < UMINUS).
    Conflict between rule 98 and token NOT_IN resolved as reduce (NOT_IN < UMINUS).
    Conflict between rule 98 and token IN resolved as reduce (IN < UMINUS).
    Conflict between rule 98 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 98 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 98 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 98 and token '/' resolved as reduce ('/' < UMINUS).


State 111

  142 a_expr_list: COMMA • a_expr a_expr_list

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 161
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 112

  127 select_attr: '*' a_expr_list •

    $default  reduce using rule 127 (select_attr)


State 113

  105 a_expr: a_expr OR • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 162
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 114

  104 a_expr: a_expr AND • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 163
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 115

  106 a_expr: a_expr EQ • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 164
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 116

  107 a_expr: a_expr LT • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 165
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 117

  108 a_expr: a_expr GT • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 166
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 118

  109 a_expr: a_expr LE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 167
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 119

  110 a_expr: a_expr GE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 168
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 120

  111 a_expr: a_expr NE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 169
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 121

  112 a_expr: a_expr LIKE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 170
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 122

  113 a_expr: a_expr NOT_LIKE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 171
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 123

  115 a_expr: a_expr IS • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 172
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 124

  114 a_expr: a_expr IS_NOT • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 173
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 125

  116 a_expr: a_expr NOT_IN • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 174
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 126

  117 a_expr: a_expr IN • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 175
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 127

  100 a_expr: a_expr '+' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 176
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 128

  101 a_expr: a_expr '-' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 177
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 129

  102 a_expr: a_expr '*' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 178
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 130

  103 a_expr: a_expr '/' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 179
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 131

  128 select_attr: a_expr a_expr_list •

    $default  reduce using rule 128 (select_attr)


State 132

   77 select_stmt: SELECT select_attr FROM • ID rel_list where order group_by having
   78            | SELECT select_attr FROM • join where order group_by having

    ID  shift, and go to state 180

    join  go to state 181


State 133

  130 function: func_LA '*' • RBRACE

    RBRACE  shift, and go to state 182


State 134

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr
  129 function: func_LA a_expr • RBRACE

    RBRACE    shift, and go to state 183
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130


State 135

  131 func_LA: func_name LBRACE •

    $default  reduce using rule 131 (func_LA)


State 136

   31 show_index_stmt: SHOW INDEX FROM • ID

    ID  shift, and go to state 184


State 137

   54 insert_stmt: INSERT INTO ID • VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

    VALUES  shift, and go to state 185


State 138

   70 delete_stmt: DELETE FROM ID • where

    WHERE  shift, and go to state 186

    $default  reduce using rule 156 (where)

    where  go to state 187


State 139

   71 update_stmt: UPDATE ID SET • update_expr where

    ID  shift, and go to state 188

    update_expr  go to state 189


State 140

  160 set_variable_stmt: SET ID EQ • value

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 190


State 141

  158 load_data_stmt: LOAD DATA INFILE • SSS INTO TABLE ID

    SSS  shift, and go to state 191


State 142

   41 as_marker: AS •

    $default  reduce using rule 41 (as_marker)


State 143

   43 create_table_stmt: CREATE TABLE ID LBRACE • attr_def attr_def_list RBRACE as_marker select_stmt

    ID  shift, and go to state 192

    attr_def  go to state 193


State 144

   42 create_table_stmt: CREATE TABLE ID as_marker • select_stmt

    SELECT  shift, and go to state 4

    select_stmt  go to state 194


State 145

   35 create_index_stmt: CREATE unique_marker INDEX ID • ON ID LBRACE ID rel_list RBRACE

    ON  shift, and go to state 195


State 146

   36 drop_index_stmt: DROP INDEX ID ON • ID

    ID  shift, and go to state 196


State 147

   91 expression: LBRACE expression RBRACE •

    $default  reduce using rule 91 (expression)


State 148

   86 expression_list: expression COMMA expression_list •

    $default  reduce using rule 86 (expression_list)


State 149

   87 expression: expression • '+' expression
   87           | expression '+' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-']
   88           | expression • '-' expression
   89           | expression • '*' expression
   90           | expression • '/' expression

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 87 (expression)

    Conflict between rule 87 and token '+' resolved as reduce (%left '+').
    Conflict between rule 87 and token '-' resolved as reduce (%left '-').
    Conflict between rule 87 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 87 and token '/' resolved as shift ('+' < '/').


State 150

   87 expression: expression • '+' expression
   88           | expression • '-' expression
   88           | expression '-' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-']
   89           | expression • '*' expression
   90           | expression • '/' expression

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 88 (expression)

    Conflict between rule 88 and token '+' resolved as reduce (%left '+').
    Conflict between rule 88 and token '-' resolved as reduce (%left '-').
    Conflict between rule 88 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 88 and token '/' resolved as shift ('-' < '/').


State 151

   87 expression: expression • '+' expression
   88           | expression • '-' expression
   89           | expression • '*' expression
   89           | expression '*' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']
   90           | expression • '/' expression

    $default  reduce using rule 89 (expression)

    Conflict between rule 89 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 89 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 89 and token '*' resolved as reduce (%left '*').
    Conflict between rule 89 and token '/' resolved as reduce (%left '/').


State 152

   87 expression: expression • '+' expression
   88           | expression • '-' expression
   89           | expression • '*' expression
   90           | expression • '/' expression
   90           | expression '/' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']

    $default  reduce using rule 90 (expression)

    Conflict between rule 90 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 90 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 90 and token '*' resolved as reduce (%left '*').
    Conflict between rule 90 and token '/' resolved as reduce (%left '/').


State 153

  126 value_list_LA: value COMMA • value

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 197


State 154

  124 select_stmt_with_paren: LBRACE select_stmt RBRACE •

    $default  reduce using rule 124 (select_stmt_with_paren)


State 155

  120 c_expr: LBRACE a_expr RBRACE •

    $default  reduce using rule 120 (c_expr)


State 156

  123 value_list_LALR: LBRACE value_list_LA RBRACE •

    $default  reduce using rule 123 (value_list_LALR)


State 157

  125 value_list_LA: value_list_LA COMMA • value

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 198


State 158

  119 a_expr: NOT_EXISTS LBRACE select_stmt • RBRACE

    RBRACE  shift, and go to state 199


State 159

  118 a_expr: EXISTS LBRACE select_stmt • RBRACE

    RBRACE  shift, and go to state 200


State 160

  138 rel_attr: ID DOT ID •

    $default  reduce using rule 138 (rel_attr)


State 161

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr
  142 a_expr_list: COMMA a_expr • a_expr_list

    COMMA     shift, and go to state 111
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 141 (a_expr_list)

    a_expr_list  go to state 201


State 162

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  105       | a_expr OR a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, INNER_JOIN, ORDER_BY]
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 105 (a_expr)

    Conflict between rule 105 and token OR resolved as reduce (%left OR).
    Conflict between rule 105 and token AND resolved as shift (OR < AND).
    Conflict between rule 105 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 105 and token LT resolved as shift (OR < LT).
    Conflict between rule 105 and token GT resolved as shift (OR < GT).
    Conflict between rule 105 and token LE resolved as shift (OR < LE).
    Conflict between rule 105 and token GE resolved as shift (OR < GE).
    Conflict between rule 105 and token NE resolved as shift (OR < NE).
    Conflict between rule 105 and token LIKE resolved as shift (OR < LIKE).
    Conflict between rule 105 and token NOT_LIKE resolved as shift (OR < NOT_LIKE).
    Conflict between rule 105 and token IS resolved as shift (OR < IS).
    Conflict between rule 105 and token IS_NOT resolved as shift (OR < IS_NOT).
    Conflict between rule 105 and token NOT_IN resolved as shift (OR < NOT_IN).
    Conflict between rule 105 and token IN resolved as shift (OR < IN).
    Conflict between rule 105 and token '+' resolved as shift (OR < '+').
    Conflict between rule 105 and token '-' resolved as shift (OR < '-').
    Conflict between rule 105 and token '*' resolved as shift (OR < '*').
    Conflict between rule 105 and token '/' resolved as shift (OR < '/').


State 163

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  104       | a_expr AND a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, INNER_JOIN, ORDER_BY]
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 104 (a_expr)

    Conflict between rule 104 and token OR resolved as reduce (OR < AND).
    Conflict between rule 104 and token AND resolved as reduce (%left AND).
    Conflict between rule 104 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 104 and token LT resolved as shift (AND < LT).
    Conflict between rule 104 and token GT resolved as shift (AND < GT).
    Conflict between rule 104 and token LE resolved as shift (AND < LE).
    Conflict between rule 104 and token GE resolved as shift (AND < GE).
    Conflict between rule 104 and token NE resolved as shift (AND < NE).
    Conflict between rule 104 and token LIKE resolved as shift (AND < LIKE).
    Conflict between rule 104 and token NOT_LIKE resolved as shift (AND < NOT_LIKE).
    Conflict between rule 104 and token IS resolved as shift (AND < IS).
    Conflict between rule 104 and token IS_NOT resolved as shift (AND < IS_NOT).
    Conflict between rule 104 and token NOT_IN resolved as shift (AND < NOT_IN).
    Conflict between rule 104 and token IN resolved as shift (AND < IN).
    Conflict between rule 104 and token '+' resolved as shift (AND < '+').
    Conflict between rule 104 and token '-' resolved as shift (AND < '-').
    Conflict between rule 104 and token '*' resolved as shift (AND < '*').
    Conflict between rule 104 and token '/' resolved as shift (AND < '/').


State 164

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  106       | a_expr EQ a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 106 (a_expr)

    Conflict between rule 106 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 106 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 106 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 106 and token LT resolved as reduce (%left LT).
    Conflict between rule 106 and token GT resolved as reduce (%left GT).
    Conflict between rule 106 and token LE resolved as reduce (%left LE).
    Conflict between rule 106 and token GE resolved as reduce (%left GE).
    Conflict between rule 106 and token NE resolved as reduce (%left NE).
    Conflict between rule 106 and token LIKE resolved as shift (EQ < LIKE).
    Conflict between rule 106 and token NOT_LIKE resolved as shift (EQ < NOT_LIKE).
    Conflict between rule 106 and token IS resolved as reduce (IS < EQ).
    Conflict between rule 106 and token IS_NOT resolved as reduce (IS_NOT < EQ).
    Conflict between rule 106 and token NOT_IN resolved as shift (EQ < NOT_IN).
    Conflict between rule 106 and token IN resolved as shift (EQ < IN).
    Conflict between rule 106 and token '+' resolved as shift (EQ < '+').
    Conflict between rule 106 and token '-' resolved as shift (EQ < '-').
    Conflict between rule 106 and token '*' resolved as shift (EQ < '*').
    Conflict between rule 106 and token '/' resolved as shift (EQ < '/').


State 165

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  107       | a_expr LT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 107 (a_expr)

    Conflict between rule 107 and token OR resolved as reduce (OR < LT).
    Conflict between rule 107 and token AND resolved as reduce (AND < LT).
    Conflict between rule 107 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 107 and token LT resolved as reduce (%left LT).
    Conflict between rule 107 and token GT resolved as reduce (%left GT).
    Conflict between rule 107 and token LE resolved as reduce (%left LE).
    Conflict between rule 107 and token GE resolved as reduce (%left GE).
    Conflict between rule 107 and token NE resolved as reduce (%left NE).
    Conflict between rule 107 and token LIKE resolved as shift (LT < LIKE).
    Conflict between rule 107 and token NOT_LIKE resolved as shift (LT < NOT_LIKE).
    Conflict between rule 107 and token IS resolved as reduce (IS < LT).
    Conflict between rule 107 and token IS_NOT resolved as reduce (IS_NOT < LT).
    Conflict between rule 107 and token NOT_IN resolved as shift (LT < NOT_IN).
    Conflict between rule 107 and token IN resolved as shift (LT < IN).
    Conflict between rule 107 and token '+' resolved as shift (LT < '+').
    Conflict between rule 107 and token '-' resolved as shift (LT < '-').
    Conflict between rule 107 and token '*' resolved as shift (LT < '*').
    Conflict between rule 107 and token '/' resolved as shift (LT < '/').


State 166

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  108       | a_expr GT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 108 (a_expr)

    Conflict between rule 108 and token OR resolved as reduce (OR < GT).
    Conflict between rule 108 and token AND resolved as reduce (AND < GT).
    Conflict between rule 108 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 108 and token LT resolved as reduce (%left LT).
    Conflict between rule 108 and token GT resolved as reduce (%left GT).
    Conflict between rule 108 and token LE resolved as reduce (%left LE).
    Conflict between rule 108 and token GE resolved as reduce (%left GE).
    Conflict between rule 108 and token NE resolved as reduce (%left NE).
    Conflict between rule 108 and token LIKE resolved as shift (GT < LIKE).
    Conflict between rule 108 and token NOT_LIKE resolved as shift (GT < NOT_LIKE).
    Conflict between rule 108 and token IS resolved as reduce (IS < GT).
    Conflict between rule 108 and token IS_NOT resolved as reduce (IS_NOT < GT).
    Conflict between rule 108 and token NOT_IN resolved as shift (GT < NOT_IN).
    Conflict between rule 108 and token IN resolved as shift (GT < IN).
    Conflict between rule 108 and token '+' resolved as shift (GT < '+').
    Conflict between rule 108 and token '-' resolved as shift (GT < '-').
    Conflict between rule 108 and token '*' resolved as shift (GT < '*').
    Conflict between rule 108 and token '/' resolved as shift (GT < '/').


State 167

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  109       | a_expr LE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 109 (a_expr)

    Conflict between rule 109 and token OR resolved as reduce (OR < LE).
    Conflict between rule 109 and token AND resolved as reduce (AND < LE).
    Conflict between rule 109 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 109 and token LT resolved as reduce (%left LT).
    Conflict between rule 109 and token GT resolved as reduce (%left GT).
    Conflict between rule 109 and token LE resolved as reduce (%left LE).
    Conflict between rule 109 and token GE resolved as reduce (%left GE).
    Conflict between rule 109 and token NE resolved as reduce (%left NE).
    Conflict between rule 109 and token LIKE resolved as shift (LE < LIKE).
    Conflict between rule 109 and token NOT_LIKE resolved as shift (LE < NOT_LIKE).
    Conflict between rule 109 and token IS resolved as reduce (IS < LE).
    Conflict between rule 109 and token IS_NOT resolved as reduce (IS_NOT < LE).
    Conflict between rule 109 and token NOT_IN resolved as shift (LE < NOT_IN).
    Conflict between rule 109 and token IN resolved as shift (LE < IN).
    Conflict between rule 109 and token '+' resolved as shift (LE < '+').
    Conflict between rule 109 and token '-' resolved as shift (LE < '-').
    Conflict between rule 109 and token '*' resolved as shift (LE < '*').
    Conflict between rule 109 and token '/' resolved as shift (LE < '/').


State 168

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  110       | a_expr GE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 110 (a_expr)

    Conflict between rule 110 and token OR resolved as reduce (OR < GE).
    Conflict between rule 110 and token AND resolved as reduce (AND < GE).
    Conflict between rule 110 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 110 and token LT resolved as reduce (%left LT).
    Conflict between rule 110 and token GT resolved as reduce (%left GT).
    Conflict between rule 110 and token LE resolved as reduce (%left LE).
    Conflict between rule 110 and token GE resolved as reduce (%left GE).
    Conflict between rule 110 and token NE resolved as reduce (%left NE).
    Conflict between rule 110 and token LIKE resolved as shift (GE < LIKE).
    Conflict between rule 110 and token NOT_LIKE resolved as shift (GE < NOT_LIKE).
    Conflict between rule 110 and token IS resolved as reduce (IS < GE).
    Conflict between rule 110 and token IS_NOT resolved as reduce (IS_NOT < GE).
    Conflict between rule 110 and token NOT_IN resolved as shift (GE < NOT_IN).
    Conflict between rule 110 and token IN resolved as shift (GE < IN).
    Conflict between rule 110 and token '+' resolved as shift (GE < '+').
    Conflict between rule 110 and token '-' resolved as shift (GE < '-').
    Conflict between rule 110 and token '*' resolved as shift (GE < '*').
    Conflict between rule 110 and token '/' resolved as shift (GE < '/').


State 169

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  111       | a_expr NE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 111 (a_expr)

    Conflict between rule 111 and token OR resolved as reduce (OR < NE).
    Conflict between rule 111 and token AND resolved as reduce (AND < NE).
    Conflict between rule 111 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 111 and token LT resolved as reduce (%left LT).
    Conflict between rule 111 and token GT resolved as reduce (%left GT).
    Conflict between rule 111 and token LE resolved as reduce (%left LE).
    Conflict between rule 111 and token GE resolved as reduce (%left GE).
    Conflict between rule 111 and token NE resolved as reduce (%left NE).
    Conflict between rule 111 and token LIKE resolved as shift (NE < LIKE).
    Conflict between rule 111 and token NOT_LIKE resolved as shift (NE < NOT_LIKE).
    Conflict between rule 111 and token IS resolved as reduce (IS < NE).
    Conflict between rule 111 and token IS_NOT resolved as reduce (IS_NOT < NE).
    Conflict between rule 111 and token NOT_IN resolved as shift (NE < NOT_IN).
    Conflict between rule 111 and token IN resolved as shift (NE < IN).
    Conflict between rule 111 and token '+' resolved as shift (NE < '+').
    Conflict between rule 111 and token '-' resolved as shift (NE < '-').
    Conflict between rule 111 and token '*' resolved as shift (NE < '*').
    Conflict between rule 111 and token '/' resolved as shift (NE < '/').


State 170

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  112       | a_expr LIKE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 112 (a_expr)

    Conflict between rule 112 and token OR resolved as reduce (OR < LIKE).
    Conflict between rule 112 and token AND resolved as reduce (AND < LIKE).
    Conflict between rule 112 and token EQ resolved as reduce (EQ < LIKE).
    Conflict between rule 112 and token LT resolved as reduce (LT < LIKE).
    Conflict between rule 112 and token GT resolved as reduce (GT < LIKE).
    Conflict between rule 112 and token LE resolved as reduce (LE < LIKE).
    Conflict between rule 112 and token GE resolved as reduce (GE < LIKE).
    Conflict between rule 112 and token NE resolved as reduce (NE < LIKE).
    Conflict between rule 112 and token LIKE resolved as reduce (%left LIKE).
    Conflict between rule 112 and token NOT_LIKE resolved as reduce (%left NOT_LIKE).
    Conflict between rule 112 and token IS resolved as reduce (IS < LIKE).
    Conflict between rule 112 and token IS_NOT resolved as reduce (IS_NOT < LIKE).
    Conflict between rule 112 and token NOT_IN resolved as reduce (NOT_IN < LIKE).
    Conflict between rule 112 and token IN resolved as reduce (IN < LIKE).
    Conflict between rule 112 and token '+' resolved as shift (LIKE < '+').
    Conflict between rule 112 and token '-' resolved as shift (LIKE < '-').
    Conflict between rule 112 and token '*' resolved as shift (LIKE < '*').
    Conflict between rule 112 and token '/' resolved as shift (LIKE < '/').


State 171

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  113       | a_expr NOT_LIKE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 113 (a_expr)

    Conflict between rule 113 and token OR resolved as reduce (OR < NOT_LIKE).
    Conflict between rule 113 and token AND resolved as reduce (AND < NOT_LIKE).
    Conflict between rule 113 and token EQ resolved as reduce (EQ < NOT_LIKE).
    Conflict between rule 113 and token LT resolved as reduce (LT < NOT_LIKE).
    Conflict between rule 113 and token GT resolved as reduce (GT < NOT_LIKE).
    Conflict between rule 113 and token LE resolved as reduce (LE < NOT_LIKE).
    Conflict between rule 113 and token GE resolved as reduce (GE < NOT_LIKE).
    Conflict between rule 113 and token NE resolved as reduce (NE < NOT_LIKE).
    Conflict between rule 113 and token LIKE resolved as reduce (%left LIKE).
    Conflict between rule 113 and token NOT_LIKE resolved as reduce (%left NOT_LIKE).
    Conflict between rule 113 and token IS resolved as reduce (IS < NOT_LIKE).
    Conflict between rule 113 and token IS_NOT resolved as reduce (IS_NOT < NOT_LIKE).
    Conflict between rule 113 and token NOT_IN resolved as reduce (NOT_IN < NOT_LIKE).
    Conflict between rule 113 and token IN resolved as reduce (IN < NOT_LIKE).
    Conflict between rule 113 and token '+' resolved as shift (NOT_LIKE < '+').
    Conflict between rule 113 and token '-' resolved as shift (NOT_LIKE < '-').
    Conflict between rule 113 and token '*' resolved as shift (NOT_LIKE < '*').
    Conflict between rule 113 and token '/' resolved as shift (NOT_LIKE < '/').


State 172

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  115       | a_expr IS a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 115 (a_expr)

    Conflict between rule 115 and token OR resolved as reduce (OR < IS).
    Conflict between rule 115 and token AND resolved as reduce (AND < IS).
    Conflict between rule 115 and token EQ resolved as shift (IS < EQ).
    Conflict between rule 115 and token LT resolved as shift (IS < LT).
    Conflict between rule 115 and token GT resolved as shift (IS < GT).
    Conflict between rule 115 and token LE resolved as shift (IS < LE).
    Conflict between rule 115 and token GE resolved as shift (IS < GE).
    Conflict between rule 115 and token NE resolved as shift (IS < NE).
    Conflict between rule 115 and token LIKE resolved as shift (IS < LIKE).
    Conflict between rule 115 and token NOT_LIKE resolved as shift (IS < NOT_LIKE).
    Conflict between rule 115 and token IS resolved as reduce (%left IS).
    Conflict between rule 115 and token IS_NOT resolved as reduce (%left IS_NOT).
    Conflict between rule 115 and token NOT_IN resolved as shift (IS < NOT_IN).
    Conflict between rule 115 and token IN resolved as shift (IS < IN).
    Conflict between rule 115 and token '+' resolved as shift (IS < '+').
    Conflict between rule 115 and token '-' resolved as shift (IS < '-').
    Conflict between rule 115 and token '*' resolved as shift (IS < '*').
    Conflict between rule 115 and token '/' resolved as shift (IS < '/').


State 173

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  114       | a_expr IS_NOT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 114 (a_expr)

    Conflict between rule 114 and token OR resolved as reduce (OR < IS_NOT).
    Conflict between rule 114 and token AND resolved as reduce (AND < IS_NOT).
    Conflict between rule 114 and token EQ resolved as shift (IS_NOT < EQ).
    Conflict between rule 114 and token LT resolved as shift (IS_NOT < LT).
    Conflict between rule 114 and token GT resolved as shift (IS_NOT < GT).
    Conflict between rule 114 and token LE resolved as shift (IS_NOT < LE).
    Conflict between rule 114 and token GE resolved as shift (IS_NOT < GE).
    Conflict between rule 114 and token NE resolved as shift (IS_NOT < NE).
    Conflict between rule 114 and token LIKE resolved as shift (IS_NOT < LIKE).
    Conflict between rule 114 and token NOT_LIKE resolved as shift (IS_NOT < NOT_LIKE).
    Conflict between rule 114 and token IS resolved as reduce (%left IS).
    Conflict between rule 114 and token IS_NOT resolved as reduce (%left IS_NOT).
    Conflict between rule 114 and token NOT_IN resolved as shift (IS_NOT < NOT_IN).
    Conflict between rule 114 and token IN resolved as shift (IS_NOT < IN).
    Conflict between rule 114 and token '+' resolved as shift (IS_NOT < '+').
    Conflict between rule 114 and token '-' resolved as shift (IS_NOT < '-').
    Conflict between rule 114 and token '*' resolved as shift (IS_NOT < '*').
    Conflict between rule 114 and token '/' resolved as shift (IS_NOT < '/').


State 174

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  116       | a_expr NOT_IN a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  117       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 116 (a_expr)

    Conflict between rule 116 and token OR resolved as reduce (OR < NOT_IN).
    Conflict between rule 116 and token AND resolved as reduce (AND < NOT_IN).
    Conflict between rule 116 and token EQ resolved as reduce (EQ < NOT_IN).
    Conflict between rule 116 and token LT resolved as reduce (LT < NOT_IN).
    Conflict between rule 116 and token GT resolved as reduce (GT < NOT_IN).
    Conflict between rule 116 and token LE resolved as reduce (LE < NOT_IN).
    Conflict between rule 116 and token GE resolved as reduce (GE < NOT_IN).
    Conflict between rule 116 and token NE resolved as reduce (NE < NOT_IN).
    Conflict between rule 116 and token LIKE resolved as shift (NOT_IN < LIKE).
    Conflict between rule 116 and token NOT_LIKE resolved as shift (NOT_IN < NOT_LIKE).
    Conflict between rule 116 and token IS resolved as reduce (IS < NOT_IN).
    Conflict between rule 116 and token IS_NOT resolved as reduce (IS_NOT < NOT_IN).
    Conflict between rule 116 and token NOT_IN resolved as reduce (%left NOT_IN).
    Conflict between rule 116 and token IN resolved as reduce (%left IN).
    Conflict between rule 116 and token '+' resolved as shift (NOT_IN < '+').
    Conflict between rule 116 and token '-' resolved as shift (NOT_IN < '-').
    Conflict between rule 116 and token '*' resolved as shift (NOT_IN < '*').
    Conflict between rule 116 and token '/' resolved as shift (NOT_IN < '/').


State 175

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr
  117       | a_expr IN a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 117 (a_expr)

    Conflict between rule 117 and token OR resolved as reduce (OR < IN).
    Conflict between rule 117 and token AND resolved as reduce (AND < IN).
    Conflict between rule 117 and token EQ resolved as reduce (EQ < IN).
    Conflict between rule 117 and token LT resolved as reduce (LT < IN).
    Conflict between rule 117 and token GT resolved as reduce (GT < IN).
    Conflict between rule 117 and token LE resolved as reduce (LE < IN).
    Conflict between rule 117 and token GE resolved as reduce (GE < IN).
    Conflict between rule 117 and token NE resolved as reduce (NE < IN).
    Conflict between rule 117 and token LIKE resolved as shift (IN < LIKE).
    Conflict between rule 117 and token NOT_LIKE resolved as shift (IN < NOT_LIKE).
    Conflict between rule 117 and token IS resolved as reduce (IS < IN).
    Conflict between rule 117 and token IS_NOT resolved as reduce (IS_NOT < IN).
    Conflict between rule 117 and token NOT_IN resolved as reduce (%left NOT_IN).
    Conflict between rule 117 and token IN resolved as reduce (%left IN).
    Conflict between rule 117 and token '+' resolved as shift (IN < '+').
    Conflict between rule 117 and token '-' resolved as shift (IN < '-').
    Conflict between rule 117 and token '*' resolved as shift (IN < '*').
    Conflict between rule 117 and token '/' resolved as shift (IN < '/').


State 176

  100 a_expr: a_expr • '+' a_expr
  100       | a_expr '+' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-']
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 100 (a_expr)

    Conflict between rule 100 and token OR resolved as reduce (OR < '+').
    Conflict between rule 100 and token AND resolved as reduce (AND < '+').
    Conflict between rule 100 and token EQ resolved as reduce (EQ < '+').
    Conflict between rule 100 and token LT resolved as reduce (LT < '+').
    Conflict between rule 100 and token GT resolved as reduce (GT < '+').
    Conflict between rule 100 and token LE resolved as reduce (LE < '+').
    Conflict between rule 100 and token GE resolved as reduce (GE < '+').
    Conflict between rule 100 and token NE resolved as reduce (NE < '+').
    Conflict between rule 100 and token LIKE resolved as reduce (LIKE < '+').
    Conflict between rule 100 and token NOT_LIKE resolved as reduce (NOT_LIKE < '+').
    Conflict between rule 100 and token IS resolved as reduce (IS < '+').
    Conflict between rule 100 and token IS_NOT resolved as reduce (IS_NOT < '+').
    Conflict between rule 100 and token NOT_IN resolved as reduce (NOT_IN < '+').
    Conflict between rule 100 and token IN resolved as reduce (IN < '+').
    Conflict between rule 100 and token '+' resolved as reduce (%left '+').
    Conflict between rule 100 and token '-' resolved as reduce (%left '-').
    Conflict between rule 100 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 100 and token '/' resolved as shift ('+' < '/').


State 177

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  101       | a_expr '-' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-']
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 101 (a_expr)

    Conflict between rule 101 and token OR resolved as reduce (OR < '-').
    Conflict between rule 101 and token AND resolved as reduce (AND < '-').
    Conflict between rule 101 and token EQ resolved as reduce (EQ < '-').
    Conflict between rule 101 and token LT resolved as reduce (LT < '-').
    Conflict between rule 101 and token GT resolved as reduce (GT < '-').
    Conflict between rule 101 and token LE resolved as reduce (LE < '-').
    Conflict between rule 101 and token GE resolved as reduce (GE < '-').
    Conflict between rule 101 and token NE resolved as reduce (NE < '-').
    Conflict between rule 101 and token LIKE resolved as reduce (LIKE < '-').
    Conflict between rule 101 and token NOT_LIKE resolved as reduce (NOT_LIKE < '-').
    Conflict between rule 101 and token IS resolved as reduce (IS < '-').
    Conflict between rule 101 and token IS_NOT resolved as reduce (IS_NOT < '-').
    Conflict between rule 101 and token NOT_IN resolved as reduce (NOT_IN < '-').
    Conflict between rule 101 and token IN resolved as reduce (IN < '-').
    Conflict between rule 101 and token '+' resolved as reduce (%left '+').
    Conflict between rule 101 and token '-' resolved as reduce (%left '-').
    Conflict between rule 101 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 101 and token '/' resolved as shift ('-' < '/').


State 178

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  102       | a_expr '*' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    $default  reduce using rule 102 (a_expr)

    Conflict between rule 102 and token OR resolved as reduce (OR < '*').
    Conflict between rule 102 and token AND resolved as reduce (AND < '*').
    Conflict between rule 102 and token EQ resolved as reduce (EQ < '*').
    Conflict between rule 102 and token LT resolved as reduce (LT < '*').
    Conflict between rule 102 and token GT resolved as reduce (GT < '*').
    Conflict between rule 102 and token LE resolved as reduce (LE < '*').
    Conflict between rule 102 and token GE resolved as reduce (GE < '*').
    Conflict between rule 102 and token NE resolved as reduce (NE < '*').
    Conflict between rule 102 and token LIKE resolved as reduce (LIKE < '*').
    Conflict between rule 102 and token NOT_LIKE resolved as reduce (NOT_LIKE < '*').
    Conflict between rule 102 and token IS resolved as reduce (IS < '*').
    Conflict between rule 102 and token IS_NOT resolved as reduce (IS_NOT < '*').
    Conflict between rule 102 and token NOT_IN resolved as reduce (NOT_IN < '*').
    Conflict between rule 102 and token IN resolved as reduce (IN < '*').
    Conflict between rule 102 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 102 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 102 and token '*' resolved as reduce (%left '*').
    Conflict between rule 102 and token '/' resolved as reduce (%left '/').


State 179

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  103       | a_expr '/' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    $default  reduce using rule 103 (a_expr)

    Conflict between rule 103 and token OR resolved as reduce (OR < '/').
    Conflict between rule 103 and token AND resolved as reduce (AND < '/').
    Conflict between rule 103 and token EQ resolved as reduce (EQ < '/').
    Conflict between rule 103 and token LT resolved as reduce (LT < '/').
    Conflict between rule 103 and token GT resolved as reduce (GT < '/').
    Conflict between rule 103 and token LE resolved as reduce (LE < '/').
    Conflict between rule 103 and token GE resolved as reduce (GE < '/').
    Conflict between rule 103 and token NE resolved as reduce (NE < '/').
    Conflict between rule 103 and token LIKE resolved as reduce (LIKE < '/').
    Conflict between rule 103 and token NOT_LIKE resolved as reduce (NOT_LIKE < '/').
    Conflict between rule 103 and token IS resolved as reduce (IS < '/').
    Conflict between rule 103 and token IS_NOT resolved as reduce (IS_NOT < '/').
    Conflict between rule 103 and token NOT_IN resolved as reduce (NOT_IN < '/').
    Conflict between rule 103 and token IN resolved as reduce (IN < '/').
    Conflict between rule 103 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 103 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 103 and token '*' resolved as reduce (%left '*').
    Conflict between rule 103 and token '/' resolved as reduce (%left '/').


State 180

   77 select_stmt: SELECT select_attr FROM ID • rel_list where order group_by having
   79 join: ID • INNER_JOIN ID join_equal join_list

    COMMA       shift, and go to state 202
    INNER_JOIN  shift, and go to state 203

    $default  reduce using rule 143 (rel_list)

    rel_list  go to state 204


State 181

   78 select_stmt: SELECT select_attr FROM join • where order group_by having

    WHERE  shift, and go to state 186

    $default  reduce using rule 156 (where)

    where  go to state 205


State 182

  130 function: func_LA '*' RBRACE •

    $default  reduce using rule 130 (function)


State 183

  129 function: func_LA a_expr RBRACE •

    $default  reduce using rule 129 (function)


State 184

   31 show_index_stmt: SHOW INDEX FROM ID •

    $default  reduce using rule 31 (show_index_stmt)


State 185

   54 insert_stmt: INSERT INTO ID VALUES • LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

    LBRACE  shift, and go to state 206


State 186

  157 where: WHERE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 207
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 187

   70 delete_stmt: DELETE FROM ID where •

    $default  reduce using rule 70 (delete_stmt)


State 188

   72 update_expr: ID • EQ LBRACE select_stmt RBRACE update_expr_list
   73            | ID • EQ value update_expr_list

    EQ  shift, and go to state 208


State 189

   71 update_stmt: UPDATE ID SET update_expr • where

    WHERE  shift, and go to state 186

    $default  reduce using rule 156 (where)

    where  go to state 209


State 190

  160 set_variable_stmt: SET ID EQ value •

    $default  reduce using rule 160 (set_variable_stmt)


State 191

  158 load_data_stmt: LOAD DATA INFILE SSS • INTO TABLE ID

    INTO  shift, and go to state 210


State 192

   46 attr_def: ID • type LBRACE number RBRACE nullable_marker
   47         | ID • type nullable_marker

    INT_T     shift, and go to state 211
    STRING_T  shift, and go to state 212
    FLOAT_T   shift, and go to state 213
    DATE_T    shift, and go to state 214
    TEXT_T    shift, and go to state 215

    type  go to state 216


State 193

   43 create_table_stmt: CREATE TABLE ID LBRACE attr_def • attr_def_list RBRACE as_marker select_stmt

    COMMA  shift, and go to state 217

    $default  reduce using rule 44 (attr_def_list)

    attr_def_list  go to state 218


State 194

   42 create_table_stmt: CREATE TABLE ID as_marker select_stmt •

    $default  reduce using rule 42 (create_table_stmt)


State 195

   35 create_index_stmt: CREATE unique_marker INDEX ID ON • ID LBRACE ID rel_list RBRACE

    ID  shift, and go to state 219


State 196

   36 drop_index_stmt: DROP INDEX ID ON ID •

    $default  reduce using rule 36 (drop_index_stmt)


State 197

  126 value_list_LA: value COMMA value •

    $default  reduce using rule 126 (value_list_LA)


State 198

  125 value_list_LA: value_list_LA COMMA value •

    $default  reduce using rule 125 (value_list_LA)


State 199

  119 a_expr: NOT_EXISTS LBRACE select_stmt RBRACE •

    $default  reduce using rule 119 (a_expr)


State 200

  118 a_expr: EXISTS LBRACE select_stmt RBRACE •

    $default  reduce using rule 118 (a_expr)


State 201

  142 a_expr_list: COMMA a_expr a_expr_list •

    $default  reduce using rule 142 (a_expr_list)


State 202

  144 rel_list: COMMA • ID rel_list

    ID  shift, and go to state 220


State 203

   79 join: ID INNER_JOIN • ID join_equal join_list

    ID  shift, and go to state 221


State 204

   77 select_stmt: SELECT select_attr FROM ID rel_list • where order group_by having

    WHERE  shift, and go to state 186

    $default  reduce using rule 156 (where)

    where  go to state 222


State 205

   78 select_stmt: SELECT select_attr FROM join where • order group_by having

    ORDER_BY  shift, and go to state 223

    $default  reduce using rule 149 (order)

    order  go to state 224


State 206

   54 insert_stmt: INSERT INTO ID VALUES LBRACE • value_with_MINUS value_list_with_MINUS RBRACE insert_list

    NULL_T  shift, and go to state 225
    NUMBER  shift, and go to state 226
    FLOAT   shift, and go to state 227
    DATE    shift, and go to state 228
    SSS     shift, and go to state 229
    '-'     shift, and go to state 230

    value_with_MINUS  go to state 231


State 207

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr
  157 where: WHERE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, HAVING, ORDER_BY]

    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 157 (where)


State 208

   72 update_expr: ID EQ • LBRACE select_stmt RBRACE update_expr_list
   73            | ID EQ • value update_expr_list

    LBRACE  shift, and go to state 232
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 233


State 209

   71 update_stmt: UPDATE ID SET update_expr where •

    $default  reduce using rule 71 (update_stmt)


State 210

  158 load_data_stmt: LOAD DATA INFILE SSS INTO • TABLE ID

    TABLE  shift, and go to state 234


State 211

   49 type: INT_T •

    $default  reduce using rule 49 (type)


State 212

   50 type: STRING_T •

    $default  reduce using rule 50 (type)


State 213

   52 type: FLOAT_T •

    $default  reduce using rule 52 (type)


State 214

   53 type: DATE_T •

    $default  reduce using rule 53 (type)


State 215

   51 type: TEXT_T •

    $default  reduce using rule 51 (type)


State 216

   46 attr_def: ID type • LBRACE number RBRACE nullable_marker
   47         | ID type • nullable_marker

    UNNULLABLE  shift, and go to state 235
    LBRACE      shift, and go to state 236
    NULL_T      shift, and go to state 237

    $default  reduce using rule 37 (nullable_marker)

    nullable_marker  go to state 238


State 217

   45 attr_def_list: COMMA • attr_def attr_def_list

    ID  shift, and go to state 192

    attr_def  go to state 239


State 218

   43 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list • RBRACE as_marker select_stmt

    RBRACE  shift, and go to state 240


State 219

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID • LBRACE ID rel_list RBRACE

    LBRACE  shift, and go to state 241


State 220

  144 rel_list: COMMA ID • rel_list

    COMMA  shift, and go to state 202

    $default  reduce using rule 143 (rel_list)

    rel_list  go to state 242


State 221

   79 join: ID INNER_JOIN ID • join_equal join_list

    ON  shift, and go to state 243

    $default  reduce using rule 82 (join_equal)

    join_equal  go to state 244


State 222

   77 select_stmt: SELECT select_attr FROM ID rel_list where • order group_by having

    ORDER_BY  shift, and go to state 223

    $default  reduce using rule 149 (order)

    order  go to state 245


State 223

  150 order: ORDER_BY • rel_attr asc_or_desc order_list

    ID  shift, and go to state 65

    rel_attr  go to state 246


State 224

   78 select_stmt: SELECT select_attr FROM join where order • group_by having

    GROUP_BY  shift, and go to state 247

    $default  reduce using rule 145 (group_by)

    group_by  go to state 248


State 225

   59 value_with_MINUS: NULL_T •

    $default  reduce using rule 59 (value_with_MINUS)


State 226

   60 value_with_MINUS: NUMBER •

    $default  reduce using rule 60 (value_with_MINUS)


State 227

   62 value_with_MINUS: FLOAT •

    $default  reduce using rule 62 (value_with_MINUS)


State 228

   63 value_with_MINUS: DATE •

    $default  reduce using rule 63 (value_with_MINUS)


State 229

   64 value_with_MINUS: SSS •

    $default  reduce using rule 64 (value_with_MINUS)


State 230

   61 value_with_MINUS: '-' • NUMBER

    NUMBER  shift, and go to state 249


State 231

   54 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS • value_list_with_MINUS RBRACE insert_list

    COMMA  shift, and go to state 250

    $default  reduce using rule 57 (value_list_with_MINUS)

    value_list_with_MINUS  go to state 251


State 232

   72 update_expr: ID EQ LBRACE • select_stmt RBRACE update_expr_list

    SELECT  shift, and go to state 4

    select_stmt  go to state 252


State 233

   73 update_expr: ID EQ value • update_expr_list

    COMMA  shift, and go to state 253

    $default  reduce using rule 74 (update_expr_list)

    update_expr_list  go to state 254


State 234

  158 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE • ID

    ID  shift, and go to state 255


State 235

   38 nullable_marker: UNNULLABLE •

    $default  reduce using rule 38 (nullable_marker)


State 236

   46 attr_def: ID type LBRACE • number RBRACE nullable_marker

    NUMBER  shift, and go to state 256

    number  go to state 257


State 237

   39 nullable_marker: NULL_T •

    $default  reduce using rule 39 (nullable_marker)


State 238

   47 attr_def: ID type nullable_marker •

    $default  reduce using rule 47 (attr_def)


State 239

   45 attr_def_list: COMMA attr_def • attr_def_list

    COMMA  shift, and go to state 217

    $default  reduce using rule 44 (attr_def_list)

    attr_def_list  go to state 258


State 240

   43 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE • as_marker select_stmt

    AS  shift, and go to state 142

    $default  reduce using rule 40 (as_marker)

    as_marker  go to state 259


State 241

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE • ID rel_list RBRACE

    ID  shift, and go to state 260


State 242

  144 rel_list: COMMA ID rel_list •

    $default  reduce using rule 144 (rel_list)


State 243

   83 join_equal: ON • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 261
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 244

   79 join: ID INNER_JOIN ID join_equal • join_list

    INNER_JOIN  shift, and go to state 262

    $default  reduce using rule 81 (join_list)

    join_list  go to state 263


State 245

   77 select_stmt: SELECT select_attr FROM ID rel_list where order • group_by having

    GROUP_BY  shift, and go to state 247

    $default  reduce using rule 145 (group_by)

    group_by  go to state 264


State 246

  150 order: ORDER_BY rel_attr • asc_or_desc order_list

    DESC  shift, and go to state 265
    ASC   shift, and go to state 266

    $default  reduce using rule 153 (asc_or_desc)

    asc_or_desc  go to state 267


State 247

  146 group_by: GROUP_BY • rel_attr attr_list

    ID  shift, and go to state 65

    rel_attr  go to state 268


State 248

   78 select_stmt: SELECT select_attr FROM join where order group_by • having

    HAVING  shift, and go to state 269

    $default  reduce using rule 147 (having)

    having  go to state 270


State 249

   61 value_with_MINUS: '-' NUMBER •

    $default  reduce using rule 61 (value_with_MINUS)


State 250

   58 value_list_with_MINUS: COMMA • value_with_MINUS value_list_with_MINUS

    NULL_T  shift, and go to state 225
    NUMBER  shift, and go to state 226
    FLOAT   shift, and go to state 227
    DATE    shift, and go to state 228
    SSS     shift, and go to state 229
    '-'     shift, and go to state 230

    value_with_MINUS  go to state 271


State 251

   54 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS • RBRACE insert_list

    RBRACE  shift, and go to state 272


State 252

   72 update_expr: ID EQ LBRACE select_stmt • RBRACE update_expr_list

    RBRACE  shift, and go to state 273


State 253

   75 update_expr_list: COMMA • ID EQ LBRACE select_stmt RBRACE update_expr_list
   76                 | COMMA • ID EQ value update_expr_list

    ID  shift, and go to state 274


State 254

   73 update_expr: ID EQ value update_expr_list •

    $default  reduce using rule 73 (update_expr)


State 255

  158 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE ID •

    $default  reduce using rule 158 (load_data_stmt)


State 256

   48 number: NUMBER •

    $default  reduce using rule 48 (number)


State 257

   46 attr_def: ID type LBRACE number • RBRACE nullable_marker

    RBRACE  shift, and go to state 275


State 258

   45 attr_def_list: COMMA attr_def attr_def_list •

    $default  reduce using rule 45 (attr_def_list)


State 259

   43 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE as_marker • select_stmt

    SELECT  shift, and go to state 4

    select_stmt  go to state 276


State 260

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID • rel_list RBRACE

    COMMA  shift, and go to state 202

    $default  reduce using rule 143 (rel_list)

    rel_list  go to state 277


State 261

   83 join_equal: ON a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, WHERE, HAVING, INNER_JOIN, ORDER_BY]
  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr

    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 83 (join_equal)


State 262

   80 join_list: INNER_JOIN • ID join_equal join_list

    ID  shift, and go to state 278


State 263

   79 join: ID INNER_JOIN ID join_equal join_list •

    $default  reduce using rule 79 (join)


State 264

   77 select_stmt: SELECT select_attr FROM ID rel_list where order group_by • having

    HAVING  shift, and go to state 269

    $default  reduce using rule 147 (having)

    having  go to state 279


State 265

  155 asc_or_desc: DESC •

    $default  reduce using rule 155 (asc_or_desc)


State 266

  154 asc_or_desc: ASC •

    $default  reduce using rule 154 (asc_or_desc)


State 267

  150 order: ORDER_BY rel_attr asc_or_desc • order_list

    COMMA  shift, and go to state 280

    $default  reduce using rule 151 (order_list)

    order_list  go to state 281


State 268

  146 group_by: GROUP_BY rel_attr • attr_list

    COMMA  shift, and go to state 282

    $default  reduce using rule 139 (attr_list)

    attr_list  go to state 283


State 269

  148 having: HAVING • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 284
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 270

   78 select_stmt: SELECT select_attr FROM join where order group_by having •

    $default  reduce using rule 78 (select_stmt)


State 271

   58 value_list_with_MINUS: COMMA value_with_MINUS • value_list_with_MINUS

    COMMA  shift, and go to state 250

    $default  reduce using rule 57 (value_list_with_MINUS)

    value_list_with_MINUS  go to state 285


State 272

   54 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE • insert_list

    COMMA  shift, and go to state 286

    $default  reduce using rule 55 (insert_list)

    insert_list  go to state 287


State 273

   72 update_expr: ID EQ LBRACE select_stmt RBRACE • update_expr_list

    COMMA  shift, and go to state 253

    $default  reduce using rule 74 (update_expr_list)

    update_expr_list  go to state 288


State 274

   75 update_expr_list: COMMA ID • EQ LBRACE select_stmt RBRACE update_expr_list
   76                 | COMMA ID • EQ value update_expr_list

    EQ  shift, and go to state 289


State 275

   46 attr_def: ID type LBRACE number RBRACE • nullable_marker

    UNNULLABLE  shift, and go to state 235
    NULL_T      shift, and go to state 237

    $default  reduce using rule 37 (nullable_marker)

    nullable_marker  go to state 290


State 276

   43 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE as_marker select_stmt •

    $default  reduce using rule 43 (create_table_stmt)


State 277

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID rel_list • RBRACE

    RBRACE  shift, and go to state 291


State 278

   80 join_list: INNER_JOIN ID • join_equal join_list

    ON  shift, and go to state 243

    $default  reduce using rule 82 (join_equal)

    join_equal  go to state 292


State 279

   77 select_stmt: SELECT select_attr FROM ID rel_list where order group_by having •

    $default  reduce using rule 77 (select_stmt)


State 280

  152 order_list: COMMA • rel_attr asc_or_desc order_list

    ID  shift, and go to state 65

    rel_attr  go to state 293


State 281

  150 order: ORDER_BY rel_attr asc_or_desc order_list •

    $default  reduce using rule 150 (order)


State 282

  140 attr_list: COMMA • rel_attr attr_list

    ID  shift, and go to state 65

    rel_attr  go to state 294


State 283

  146 group_by: GROUP_BY rel_attr attr_list •

    $default  reduce using rule 146 (group_by)


State 284

  100 a_expr: a_expr • '+' a_expr
  101       | a_expr • '-' a_expr
  102       | a_expr • '*' a_expr
  103       | a_expr • '/' a_expr
  104       | a_expr • AND a_expr
  105       | a_expr • OR a_expr
  106       | a_expr • EQ a_expr
  107       | a_expr • LT a_expr
  108       | a_expr • GT a_expr
  109       | a_expr • LE a_expr
  110       | a_expr • GE a_expr
  111       | a_expr • NE a_expr
  112       | a_expr • LIKE a_expr
  113       | a_expr • NOT_LIKE a_expr
  114       | a_expr • IS_NOT a_expr
  115       | a_expr • IS a_expr
  116       | a_expr • NOT_IN a_expr
  117       | a_expr • IN a_expr
  148 having: HAVING a_expr •  [$end, SEMICOLON, RBRACE]

    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 148 (having)


State 285

   58 value_list_with_MINUS: COMMA value_with_MINUS value_list_with_MINUS •

    $default  reduce using rule 58 (value_list_with_MINUS)


State 286

   56 insert_list: COMMA • LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

    LBRACE  shift, and go to state 295


State 287

   54 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list •

    $default  reduce using rule 54 (insert_stmt)


State 288

   72 update_expr: ID EQ LBRACE select_stmt RBRACE update_expr_list •

    $default  reduce using rule 72 (update_expr)


State 289

   75 update_expr_list: COMMA ID EQ • LBRACE select_stmt RBRACE update_expr_list
   76                 | COMMA ID EQ • value update_expr_list

    LBRACE  shift, and go to state 296
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 297


State 290

   46 attr_def: ID type LBRACE number RBRACE nullable_marker •

    $default  reduce using rule 46 (attr_def)


State 291

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID rel_list RBRACE •

    $default  reduce using rule 35 (create_index_stmt)


State 292

   80 join_list: INNER_JOIN ID join_equal • join_list

    INNER_JOIN  shift, and go to state 262

    $default  reduce using rule 81 (join_list)

    join_list  go to state 298


State 293

  152 order_list: COMMA rel_attr • asc_or_desc order_list

    DESC  shift, and go to state 265
    ASC   shift, and go to state 266

    $default  reduce using rule 153 (asc_or_desc)

    asc_or_desc  go to state 299


State 294

  140 attr_list: COMMA rel_attr • attr_list

    COMMA  shift, and go to state 282

    $default  reduce using rule 139 (attr_list)

    attr_list  go to state 300


State 295

   56 insert_list: COMMA LBRACE • value_with_MINUS value_list_with_MINUS RBRACE insert_list

    NULL_T  shift, and go to state 225
    NUMBER  shift, and go to state 226
    FLOAT   shift, and go to state 227
    DATE    shift, and go to state 228
    SSS     shift, and go to state 229
    '-'     shift, and go to state 230

    value_with_MINUS  go to state 301


State 296

   75 update_expr_list: COMMA ID EQ LBRACE • select_stmt RBRACE update_expr_list

    SELECT  shift, and go to state 4

    select_stmt  go to state 302


State 297

   76 update_expr_list: COMMA ID EQ value • update_expr_list

    COMMA  shift, and go to state 253

    $default  reduce using rule 74 (update_expr_list)

    update_expr_list  go to state 303


State 298

   80 join_list: INNER_JOIN ID join_equal join_list •

    $default  reduce using rule 80 (join_list)


State 299

  152 order_list: COMMA rel_attr asc_or_desc • order_list

    COMMA  shift, and go to state 280

    $default  reduce using rule 151 (order_list)

    order_list  go to state 304


State 300

  140 attr_list: COMMA rel_attr attr_list •

    $default  reduce using rule 140 (attr_list)


State 301

   56 insert_list: COMMA LBRACE value_with_MINUS • value_list_with_MINUS RBRACE insert_list

    COMMA  shift, and go to state 250

    $default  reduce using rule 57 (value_list_with_MINUS)

    value_list_with_MINUS  go to state 305


State 302

   75 update_expr_list: COMMA ID EQ LBRACE select_stmt • RBRACE update_expr_list

    RBRACE  shift, and go to state 306


State 303

   76 update_expr_list: COMMA ID EQ value update_expr_list •

    $default  reduce using rule 76 (update_expr_list)


State 304

  152 order_list: COMMA rel_attr asc_or_desc order_list •

    $default  reduce using rule 152 (order_list)


State 305

   56 insert_list: COMMA LBRACE value_with_MINUS value_list_with_MINUS • RBRACE insert_list

    RBRACE  shift, and go to state 307


State 306

   75 update_expr_list: COMMA ID EQ LBRACE select_stmt RBRACE • update_expr_list

    COMMA  shift, and go to state 253

    $default  reduce using rule 74 (update_expr_list)

    update_expr_list  go to state 308


State 307

   56 insert_list: COMMA LBRACE value_with_MINUS value_list_with_MINUS RBRACE • insert_list

    COMMA  shift, and go to state 286

    $default  reduce using rule 55 (insert_list)

    insert_list  go to state 309


State 308

   75 update_expr_list: COMMA ID EQ LBRACE select_stmt RBRACE update_expr_list •

    $default  reduce using rule 75 (update_expr_list)


State 309

   56 insert_list: COMMA LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list •

    $default  reduce using rule 56 (insert_list)
