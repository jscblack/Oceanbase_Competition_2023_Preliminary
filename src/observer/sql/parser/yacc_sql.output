Grammar

    0 $accept: commands $end

    1 commands: command_wrapper opt_semicolon

    2 command_wrapper: calc_stmt
    3                | select_stmt
    4                | insert_stmt
    5                | update_stmt
    6                | delete_stmt
    7                | create_table_stmt
    8                | drop_table_stmt
    9                | show_tables_stmt
   10                | show_index_stmt
   11                | desc_table_stmt
   12                | create_index_stmt
   13                | drop_index_stmt
   14                | sync_stmt
   15                | begin_stmt
   16                | commit_stmt
   17                | rollback_stmt
   18                | load_data_stmt
   19                | explain_stmt
   20                | set_variable_stmt
   21                | help_stmt
   22                | exit_stmt

   23 exit_stmt: EXIT

   24 help_stmt: HELP

   25 sync_stmt: SYNC

   26 begin_stmt: TRX_BEGIN

   27 commit_stmt: TRX_COMMIT

   28 rollback_stmt: TRX_ROLLBACK

   29 drop_table_stmt: DROP TABLE ID

   30 show_tables_stmt: SHOW TABLES

   31 show_index_stmt: SHOW INDEX FROM ID

   32 desc_table_stmt: DESC ID

   33 unique_marker: ε
   34              | UNIQUE

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID rel_list RBRACE

   36 drop_index_stmt: DROP INDEX ID ON ID

   37 nullable_marker: ε
   38                | UNNULLABLE
   39                | NULLABLE

   40 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE

   41 attr_def_list: ε
   42              | COMMA attr_def attr_def_list

   43 attr_def: ID type nullable_marker LBRACE number RBRACE
   44         | ID type nullable_marker

   45 number: NUMBER

   46 type: INT_T
   47     | STRING_T
   48     | TEXT_T
   49     | FLOAT_T
   50     | DATE_T

   51 insert_stmt: INSERT INTO ID VALUES LBRACE value value_list RBRACE insert_list

   52 insert_list: ε
   53            | COMMA LBRACE value value_list RBRACE insert_list

   54 value_list: ε
   55           | COMMA value value_list

   56 value: NULL_T
   57      | NUMBER
   58      | FLOAT
   59      | DATE
   60      | SSS

   61 delete_stmt: DELETE FROM ID where

   62 update_stmt: UPDATE ID SET update_expr where

   63 update_expr: ID EQ LBRACE select_stmt RBRACE update_expr_list
   64            | ID EQ value update_expr_list

   65 update_expr_list: ε
   66                 | COMMA ID EQ LBRACE select_stmt RBRACE update_expr_list
   67                 | COMMA ID EQ value update_expr_list

   68 select_stmt: SELECT select_attr FROM ID rel_list where order group_by having
   69            | SELECT select_attr FROM join where order group_by having

   70 join: ID INNER_JOIN ID join_equal join_list

   71 join_list: INNER_JOIN ID join_equal join_list
   72          | ε

   73 join_equal: ε
   74           | ON a_expr

   75 calc_stmt: CALC expression_list

   76 expression_list: expression
   77                | expression COMMA expression_list

   78 expression: expression '+' expression
   79           | expression '-' expression
   80           | expression '*' expression
   81           | expression '/' expression
   82           | LBRACE expression RBRACE
   83           | value
   84           | '-' expression

   85 a_expr: value
   86       | rel_attr
   87       | select_stmt_with_paren
   88       | c_expr
   89       | '-' a_expr
   90       | '+' a_expr
   91       | a_expr '+' a_expr
   92       | a_expr '-' a_expr
   93       | a_expr '*' a_expr
   94       | a_expr '/' a_expr
   95       | a_expr AND a_expr
   96       | a_expr OR a_expr
   97       | a_expr EQ a_expr
   98       | a_expr LT a_expr
   99       | a_expr GT a_expr
  100       | a_expr LE a_expr
  101       | a_expr GE a_expr
  102       | a_expr NE a_expr
  103       | a_expr LIKE a_expr
  104       | a_expr NOT_LIKE a_expr
  105       | a_expr IS_NOT a_expr
  106       | a_expr IS a_expr
  107       | a_expr NOT_IN a_expr
  108       | a_expr IN a_expr

  109 c_expr: LBRACE a_expr RBRACE
  110       | function
  111       | EXISTS LBRACE a_expr RBRACE
  112       | NOT_EXISTS LBRACE a_expr RBRACE
  113       | value_list_LALR

  114 value_list_LALR: LBRACE value_list_LA RBRACE

  115 select_stmt_with_paren: LBRACE select_stmt RBRACE

  116 value_list_LA: value_list_LA COMMA value
  117              | value COMMA value

  118 select_attr: '*' a_expr_list
  119            | a_expr a_expr_list

  120 function: func_LA a_expr RBRACE
  121         | func_LA '*' RBRACE

  122 func_LA: func_name LBRACE

  123 func_name: AGG_MAX
  124          | AGG_MIN
  125          | AGG_COUNT
  126          | AGG_AVG
  127          | AGG_SUM

  128 rel_attr: ID
  129         | ID DOT ID

  130 attr_list: ε
  131          | COMMA rel_attr attr_list

  132 a_expr_list: ε
  133            | COMMA a_expr a_expr_list

  134 rel_list: ε
  135         | COMMA ID rel_list

  136 group_by: ε
  137         | GROUP_BY rel_attr attr_list

  138 having: ε
  139       | HAVING a_expr

  140 order: ε
  141      | ORDER_BY rel_attr asc_or_desc order_list

  142 order_list: ε
  143           | COMMA rel_attr asc_or_desc order_list

  144 asc_or_desc: ε
  145            | ASC
  146            | DESC

  147 where: ε
  148      | WHERE a_expr

  149 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE ID

  150 explain_stmt: EXPLAIN command_wrapper

  151 set_variable_stmt: SET ID EQ value

  152 opt_semicolon: ε
  153              | SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    '*' (42) 80 93 118 121
    '+' (43) 78 90 91
    '-' (45) 79 84 89 92
    '/' (47) 81 94
    error (256)
    SEMICOLON (258) 153
    CREATE (259) 35 40
    DROP (260) 29 36
    TABLE (261) 29 40 149
    TABLES (262) 30
    INDEX (263) 31 35 36
    CALC (264) 75
    SELECT (265) 68 69
    DESC (266) 32 146
    ASC (267) 145
    AGG_MAX (268) 123
    AGG_MIN (269) 124
    AGG_COUNT (270) 125
    AGG_AVG (271) 126
    AGG_SUM (272) 127
    GROUP_BY (273) 137
    NULLABLE (274) 39
    UNNULLABLE (275) 38
    SHOW (276) 30 31
    SYNC (277) 25
    INSERT (278) 51
    UNIQUE (279) 34
    DELETE (280) 61
    UPDATE (281) 62
    LBRACE (282) 35 40 43 51 53 63 66 82 109 111 112 114 115 122
    RBRACE (283) 35 40 43 51 53 63 66 82 109 111 112 114 115 120 121
    COMMA (284) 42 53 55 66 67 77 116 117 131 133 135 143
    TRX_BEGIN (285) 26
    TRX_COMMIT (286) 27
    TRX_ROLLBACK (287) 28
    INT_T (288) 46
    STRING_T (289) 47
    FLOAT_T (290) 49
    DATE_T (291) 50
    NULL_T (292) 56
    TEXT_T (293) 48
    HELP (294) 24
    EXIT (295) 23
    DOT (296) 129
    INTO (297) 51 149
    VALUES (298) 51
    FROM (299) 31 61 68 69
    WHERE (300) 148
    OR (301) 96
    HAVING (302) 139
    AND (303) 95
    SET (304) 62 151
    ON (305) 35 36 74
    LOAD (306) 149
    DATA (307) 149
    INFILE (308) 149
    EXPLAIN (309) 150
    EQ (310) 63 64 66 67 97 151
    LT (311) 98
    GT (312) 99
    LE (313) 100
    GE (314) 101
    NE (315) 102
    LIKE (316) 103
    NOT_LIKE (317) 104
    IS (318) 106
    IS_NOT (319) 105
    INNER_JOIN (320) 70 71
    NOT_IN (321) 107
    IN (322) 108
    NOT_EXISTS (323) 112
    EXISTS (324) 111
    ORDER_BY (325) 141
    NUMBER <number> (326) 45 57
    FLOAT <floats> (327) 58
    DATE <dates> (328) 59
    ID <string> (329) 29 31 32 35 36 40 43 44 51 61 62 63 64 66 67 68 70 71 128 129 135 149 151
    SSS <string> (330) 60 149
    UMINUS (331)


Nonterminals, with rules where they appear

    $accept (81)
        on left: 0
    commands <sql_node> (82)
        on left: 1
        on right: 0
    command_wrapper <sql_node> (83)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
        on right: 1 150
    exit_stmt <sql_node> (84)
        on left: 23
        on right: 22
    help_stmt <sql_node> (85)
        on left: 24
        on right: 21
    sync_stmt <sql_node> (86)
        on left: 25
        on right: 14
    begin_stmt <sql_node> (87)
        on left: 26
        on right: 15
    commit_stmt <sql_node> (88)
        on left: 27
        on right: 16
    rollback_stmt <sql_node> (89)
        on left: 28
        on right: 17
    drop_table_stmt <sql_node> (90)
        on left: 29
        on right: 8
    show_tables_stmt <sql_node> (91)
        on left: 30
        on right: 9
    show_index_stmt <sql_node> (92)
        on left: 31
        on right: 10
    desc_table_stmt <sql_node> (93)
        on left: 32
        on right: 11
    unique_marker <boolean> (94)
        on left: 33 34
        on right: 35
    create_index_stmt <sql_node> (95)
        on left: 35
        on right: 12
    drop_index_stmt <sql_node> (96)
        on left: 36
        on right: 13
    nullable_marker <boolean> (97)
        on left: 37 38 39
        on right: 43 44
    create_table_stmt <sql_node> (98)
        on left: 40
        on right: 7
    attr_def_list <attr_infos> (99)
        on left: 41 42
        on right: 40 42
    attr_def <attr_info> (100)
        on left: 43 44
        on right: 40 42
    number <number> (101)
        on left: 45
        on right: 43
    type <number> (102)
        on left: 46 47 48 49 50
        on right: 43 44
    insert_stmt <sql_node> (103)
        on left: 51
        on right: 4
    insert_list <insert_list> (104)
        on left: 52 53
        on right: 51 53
    value_list <value_list> (105)
        on left: 54 55
        on right: 51 53 55
    value <value> (106)
        on left: 56 57 58 59 60
        on right: 51 53 55 64 67 83 85 116 117 151
    delete_stmt <sql_node> (107)
        on left: 61
        on right: 6
    update_stmt <sql_node> (108)
        on left: 62
        on right: 5
    update_expr <update_expr> (109)
        on left: 63 64
        on right: 62
    update_expr_list <update_expr> (110)
        on left: 65 66 67
        on right: 63 64 66 67
    select_stmt <sql_node> (111)
        on left: 68 69
        on right: 3 63 66 115
    join <join_list> (112)
        on left: 70
        on right: 69
    join_list <join_list> (113)
        on left: 71 72
        on right: 70 71
    join_equal <a_expr> (114)
        on left: 73 74
        on right: 70 71
    calc_stmt <sql_node> (115)
        on left: 75
        on right: 2
    expression_list <expression_list> (116)
        on left: 76 77
        on right: 75 77
    expression <expression> (117)
        on left: 78 79 80 81 82 83 84
        on right: 76 77 78 79 80 81 82 84
    a_expr <a_expr> (118)
        on left: 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
        on right: 74 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 111 112 119 120 133 139 148
    c_expr <a_expr> (119)
        on left: 109 110 111 112 113
        on right: 88
    value_list_LALR <a_expr> (120)
        on left: 114
        on right: 113
    select_stmt_with_paren <a_expr> (121)
        on left: 115
        on right: 87
    value_list_LA <value_list> (122)
        on left: 116 117
        on right: 114 116
    select_attr <a_expr_list> (123)
        on left: 118 119
        on right: 68 69
    function <a_expr> (124)
        on left: 120 121
        on right: 110
    func_LA <func_name> (125)
        on left: 122
        on right: 120 121
    func_name <func_name> (126)
        on left: 123 124 125 126 127
        on right: 122
    rel_attr <rel_attr> (127)
        on left: 128 129
        on right: 86 131 137 141 143
    attr_list <rel_attr_list> (128)
        on left: 130 131
        on right: 131 137
    a_expr_list <a_expr_list> (129)
        on left: 132 133
        on right: 118 119 133
    rel_list <relation_list> (130)
        on left: 134 135
        on right: 35 68 135
    group_by <rel_attr_list> (131)
        on left: 136 137
        on right: 68 69
    having <a_expr> (132)
        on left: 138 139
        on right: 68 69
    order <order_by_list> (133)
        on left: 140 141
        on right: 68 69
    order_list <order_by_list> (134)
        on left: 142 143
        on right: 141 143
    asc_or_desc <boolean> (135)
        on left: 144 145 146
        on right: 141 143
    where <a_expr> (136)
        on left: 147 148
        on right: 61 62 68 69
    load_data_stmt <sql_node> (137)
        on left: 149
        on right: 18
    explain_stmt <sql_node> (138)
        on left: 150
        on right: 19
    set_variable_stmt <sql_node> (139)
        on left: 151
        on right: 20
    opt_semicolon (140)
        on left: 152 153
        on right: 1


State 0

    0 $accept: • commands $end

    CREATE        shift, and go to state 1
    DROP          shift, and go to state 2
    CALC          shift, and go to state 3
    SELECT        shift, and go to state 4
    DESC          shift, and go to state 5
    SHOW          shift, and go to state 6
    SYNC          shift, and go to state 7
    INSERT        shift, and go to state 8
    DELETE        shift, and go to state 9
    UPDATE        shift, and go to state 10
    TRX_BEGIN     shift, and go to state 11
    TRX_COMMIT    shift, and go to state 12
    TRX_ROLLBACK  shift, and go to state 13
    HELP          shift, and go to state 14
    EXIT          shift, and go to state 15
    SET           shift, and go to state 16
    LOAD          shift, and go to state 17
    EXPLAIN       shift, and go to state 18

    commands           go to state 19
    command_wrapper    go to state 20
    exit_stmt          go to state 21
    help_stmt          go to state 22
    sync_stmt          go to state 23
    begin_stmt         go to state 24
    commit_stmt        go to state 25
    rollback_stmt      go to state 26
    drop_table_stmt    go to state 27
    show_tables_stmt   go to state 28
    show_index_stmt    go to state 29
    desc_table_stmt    go to state 30
    create_index_stmt  go to state 31
    drop_index_stmt    go to state 32
    create_table_stmt  go to state 33
    insert_stmt        go to state 34
    delete_stmt        go to state 35
    update_stmt        go to state 36
    select_stmt        go to state 37
    calc_stmt          go to state 38
    load_data_stmt     go to state 39
    explain_stmt       go to state 40
    set_variable_stmt  go to state 41


State 1

   35 create_index_stmt: CREATE • unique_marker INDEX ID ON ID LBRACE ID rel_list RBRACE
   40 create_table_stmt: CREATE • TABLE ID LBRACE attr_def attr_def_list RBRACE

    TABLE   shift, and go to state 42
    UNIQUE  shift, and go to state 43

    $default  reduce using rule 33 (unique_marker)

    unique_marker  go to state 44


State 2

   29 drop_table_stmt: DROP • TABLE ID
   36 drop_index_stmt: DROP • INDEX ID ON ID

    TABLE  shift, and go to state 45
    INDEX  shift, and go to state 46


State 3

   75 calc_stmt: CALC • expression_list

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value            go to state 54
    expression_list  go to state 55
    expression       go to state 56


State 4

   68 select_stmt: SELECT • select_attr FROM ID rel_list where order group_by having
   69            | SELECT • select_attr FROM join where order group_by having

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67
    '*'         shift, and go to state 68

    value                   go to state 69
    a_expr                  go to state 70
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    select_attr             go to state 74
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 5

   32 desc_table_stmt: DESC • ID

    ID  shift, and go to state 79


State 6

   30 show_tables_stmt: SHOW • TABLES
   31 show_index_stmt: SHOW • INDEX FROM ID

    TABLES  shift, and go to state 80
    INDEX   shift, and go to state 81


State 7

   25 sync_stmt: SYNC •

    $default  reduce using rule 25 (sync_stmt)


State 8

   51 insert_stmt: INSERT • INTO ID VALUES LBRACE value value_list RBRACE insert_list

    INTO  shift, and go to state 82


State 9

   61 delete_stmt: DELETE • FROM ID where

    FROM  shift, and go to state 83


State 10

   62 update_stmt: UPDATE • ID SET update_expr where

    ID  shift, and go to state 84


State 11

   26 begin_stmt: TRX_BEGIN •

    $default  reduce using rule 26 (begin_stmt)


State 12

   27 commit_stmt: TRX_COMMIT •

    $default  reduce using rule 27 (commit_stmt)


State 13

   28 rollback_stmt: TRX_ROLLBACK •

    $default  reduce using rule 28 (rollback_stmt)


State 14

   24 help_stmt: HELP •

    $default  reduce using rule 24 (help_stmt)


State 15

   23 exit_stmt: EXIT •

    $default  reduce using rule 23 (exit_stmt)


State 16

  151 set_variable_stmt: SET • ID EQ value

    ID  shift, and go to state 85


State 17

  149 load_data_stmt: LOAD • DATA INFILE SSS INTO TABLE ID

    DATA  shift, and go to state 86


State 18

  150 explain_stmt: EXPLAIN • command_wrapper

    CREATE        shift, and go to state 1
    DROP          shift, and go to state 2
    CALC          shift, and go to state 3
    SELECT        shift, and go to state 4
    DESC          shift, and go to state 5
    SHOW          shift, and go to state 6
    SYNC          shift, and go to state 7
    INSERT        shift, and go to state 8
    DELETE        shift, and go to state 9
    UPDATE        shift, and go to state 10
    TRX_BEGIN     shift, and go to state 11
    TRX_COMMIT    shift, and go to state 12
    TRX_ROLLBACK  shift, and go to state 13
    HELP          shift, and go to state 14
    EXIT          shift, and go to state 15
    SET           shift, and go to state 16
    LOAD          shift, and go to state 17
    EXPLAIN       shift, and go to state 18

    command_wrapper    go to state 87
    exit_stmt          go to state 21
    help_stmt          go to state 22
    sync_stmt          go to state 23
    begin_stmt         go to state 24
    commit_stmt        go to state 25
    rollback_stmt      go to state 26
    drop_table_stmt    go to state 27
    show_tables_stmt   go to state 28
    show_index_stmt    go to state 29
    desc_table_stmt    go to state 30
    create_index_stmt  go to state 31
    drop_index_stmt    go to state 32
    create_table_stmt  go to state 33
    insert_stmt        go to state 34
    delete_stmt        go to state 35
    update_stmt        go to state 36
    select_stmt        go to state 37
    calc_stmt          go to state 38
    load_data_stmt     go to state 39
    explain_stmt       go to state 40
    set_variable_stmt  go to state 41


State 19

    0 $accept: commands • $end

    $end  shift, and go to state 88


State 20

    1 commands: command_wrapper • opt_semicolon

    SEMICOLON  shift, and go to state 89

    $default  reduce using rule 152 (opt_semicolon)

    opt_semicolon  go to state 90


State 21

   22 command_wrapper: exit_stmt •

    $default  reduce using rule 22 (command_wrapper)


State 22

   21 command_wrapper: help_stmt •

    $default  reduce using rule 21 (command_wrapper)


State 23

   14 command_wrapper: sync_stmt •

    $default  reduce using rule 14 (command_wrapper)


State 24

   15 command_wrapper: begin_stmt •

    $default  reduce using rule 15 (command_wrapper)


State 25

   16 command_wrapper: commit_stmt •

    $default  reduce using rule 16 (command_wrapper)


State 26

   17 command_wrapper: rollback_stmt •

    $default  reduce using rule 17 (command_wrapper)


State 27

    8 command_wrapper: drop_table_stmt •

    $default  reduce using rule 8 (command_wrapper)


State 28

    9 command_wrapper: show_tables_stmt •

    $default  reduce using rule 9 (command_wrapper)


State 29

   10 command_wrapper: show_index_stmt •

    $default  reduce using rule 10 (command_wrapper)


State 30

   11 command_wrapper: desc_table_stmt •

    $default  reduce using rule 11 (command_wrapper)


State 31

   12 command_wrapper: create_index_stmt •

    $default  reduce using rule 12 (command_wrapper)


State 32

   13 command_wrapper: drop_index_stmt •

    $default  reduce using rule 13 (command_wrapper)


State 33

    7 command_wrapper: create_table_stmt •

    $default  reduce using rule 7 (command_wrapper)


State 34

    4 command_wrapper: insert_stmt •

    $default  reduce using rule 4 (command_wrapper)


State 35

    6 command_wrapper: delete_stmt •

    $default  reduce using rule 6 (command_wrapper)


State 36

    5 command_wrapper: update_stmt •

    $default  reduce using rule 5 (command_wrapper)


State 37

    3 command_wrapper: select_stmt •

    $default  reduce using rule 3 (command_wrapper)


State 38

    2 command_wrapper: calc_stmt •

    $default  reduce using rule 2 (command_wrapper)


State 39

   18 command_wrapper: load_data_stmt •

    $default  reduce using rule 18 (command_wrapper)


State 40

   19 command_wrapper: explain_stmt •

    $default  reduce using rule 19 (command_wrapper)


State 41

   20 command_wrapper: set_variable_stmt •

    $default  reduce using rule 20 (command_wrapper)


State 42

   40 create_table_stmt: CREATE TABLE • ID LBRACE attr_def attr_def_list RBRACE

    ID  shift, and go to state 91


State 43

   34 unique_marker: UNIQUE •

    $default  reduce using rule 34 (unique_marker)


State 44

   35 create_index_stmt: CREATE unique_marker • INDEX ID ON ID LBRACE ID rel_list RBRACE

    INDEX  shift, and go to state 92


State 45

   29 drop_table_stmt: DROP TABLE • ID

    ID  shift, and go to state 93


State 46

   36 drop_index_stmt: DROP INDEX • ID ON ID

    ID  shift, and go to state 94


State 47

   82 expression: LBRACE • expression RBRACE

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 95


State 48

   56 value: NULL_T •

    $default  reduce using rule 56 (value)


State 49

   57 value: NUMBER •

    $default  reduce using rule 57 (value)


State 50

   58 value: FLOAT •

    $default  reduce using rule 58 (value)


State 51

   59 value: DATE •

    $default  reduce using rule 59 (value)


State 52

   60 value: SSS •

    $default  reduce using rule 60 (value)


State 53

   84 expression: '-' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 96


State 54

   83 expression: value •

    $default  reduce using rule 83 (expression)


State 55

   75 calc_stmt: CALC expression_list •

    $default  reduce using rule 75 (calc_stmt)


State 56

   76 expression_list: expression •  [$end, SEMICOLON]
   77                | expression • COMMA expression_list
   78 expression: expression • '+' expression
   79           | expression • '-' expression
   80           | expression • '*' expression
   81           | expression • '/' expression

    COMMA  shift, and go to state 97
    '+'    shift, and go to state 98
    '-'    shift, and go to state 99
    '*'    shift, and go to state 100
    '/'    shift, and go to state 101

    $default  reduce using rule 76 (expression_list)


State 57

  123 func_name: AGG_MAX •

    $default  reduce using rule 123 (func_name)


State 58

  124 func_name: AGG_MIN •

    $default  reduce using rule 124 (func_name)


State 59

  125 func_name: AGG_COUNT •

    $default  reduce using rule 125 (func_name)


State 60

  126 func_name: AGG_AVG •

    $default  reduce using rule 126 (func_name)


State 61

  127 func_name: AGG_SUM •

    $default  reduce using rule 127 (func_name)


State 62

  109 c_expr: LBRACE • a_expr RBRACE
  114 value_list_LALR: LBRACE • value_list_LA RBRACE
  115 select_stmt_with_paren: LBRACE • select_stmt RBRACE

    SELECT      shift, and go to state 4
    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 102
    select_stmt             go to state 103
    a_expr                  go to state 104
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    value_list_LA           go to state 105
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 63

  112 c_expr: NOT_EXISTS • LBRACE a_expr RBRACE

    LBRACE  shift, and go to state 106


State 64

  111 c_expr: EXISTS • LBRACE a_expr RBRACE

    LBRACE  shift, and go to state 107


State 65

  128 rel_attr: ID •  [$end, SEMICOLON, DESC, ASC, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  129         | ID • DOT ID

    DOT  shift, and go to state 108

    $default  reduce using rule 128 (rel_attr)


State 66

   90 a_expr: '+' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 109
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 67

   89 a_expr: '-' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 110
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 68

  118 select_attr: '*' • a_expr_list

    COMMA  shift, and go to state 111

    $default  reduce using rule 132 (a_expr_list)

    a_expr_list  go to state 112


State 69

   85 a_expr: value •

    $default  reduce using rule 85 (a_expr)


State 70

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr
  119 select_attr: a_expr • a_expr_list

    COMMA     shift, and go to state 111
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 132 (a_expr_list)

    a_expr_list  go to state 131


State 71

   88 a_expr: c_expr •

    $default  reduce using rule 88 (a_expr)


State 72

  113 c_expr: value_list_LALR •

    $default  reduce using rule 113 (c_expr)


State 73

   87 a_expr: select_stmt_with_paren •

    $default  reduce using rule 87 (a_expr)


State 74

   68 select_stmt: SELECT select_attr • FROM ID rel_list where order group_by having
   69            | SELECT select_attr • FROM join where order group_by having

    FROM  shift, and go to state 132


State 75

  110 c_expr: function •

    $default  reduce using rule 110 (c_expr)


State 76

  120 function: func_LA • a_expr RBRACE
  121         | func_LA • '*' RBRACE

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67
    '*'         shift, and go to state 133

    value                   go to state 69
    a_expr                  go to state 134
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 77

  122 func_LA: func_name • LBRACE

    LBRACE  shift, and go to state 135


State 78

   86 a_expr: rel_attr •

    $default  reduce using rule 86 (a_expr)


State 79

   32 desc_table_stmt: DESC ID •

    $default  reduce using rule 32 (desc_table_stmt)


State 80

   30 show_tables_stmt: SHOW TABLES •

    $default  reduce using rule 30 (show_tables_stmt)


State 81

   31 show_index_stmt: SHOW INDEX • FROM ID

    FROM  shift, and go to state 136


State 82

   51 insert_stmt: INSERT INTO • ID VALUES LBRACE value value_list RBRACE insert_list

    ID  shift, and go to state 137


State 83

   61 delete_stmt: DELETE FROM • ID where

    ID  shift, and go to state 138


State 84

   62 update_stmt: UPDATE ID • SET update_expr where

    SET  shift, and go to state 139


State 85

  151 set_variable_stmt: SET ID • EQ value

    EQ  shift, and go to state 140


State 86

  149 load_data_stmt: LOAD DATA • INFILE SSS INTO TABLE ID

    INFILE  shift, and go to state 141


State 87

  150 explain_stmt: EXPLAIN command_wrapper •

    $default  reduce using rule 150 (explain_stmt)


State 88

    0 $accept: commands $end •

    $default  accept


State 89

  153 opt_semicolon: SEMICOLON •

    $default  reduce using rule 153 (opt_semicolon)


State 90

    1 commands: command_wrapper opt_semicolon •

    $default  reduce using rule 1 (commands)


State 91

   40 create_table_stmt: CREATE TABLE ID • LBRACE attr_def attr_def_list RBRACE

    LBRACE  shift, and go to state 142


State 92

   35 create_index_stmt: CREATE unique_marker INDEX • ID ON ID LBRACE ID rel_list RBRACE

    ID  shift, and go to state 143


State 93

   29 drop_table_stmt: DROP TABLE ID •

    $default  reduce using rule 29 (drop_table_stmt)


State 94

   36 drop_index_stmt: DROP INDEX ID • ON ID

    ON  shift, and go to state 144


State 95

   78 expression: expression • '+' expression
   79           | expression • '-' expression
   80           | expression • '*' expression
   81           | expression • '/' expression
   82           | LBRACE expression • RBRACE

    RBRACE  shift, and go to state 145
    '+'     shift, and go to state 98
    '-'     shift, and go to state 99
    '*'     shift, and go to state 100
    '/'     shift, and go to state 101


State 96

   78 expression: expression • '+' expression
   79           | expression • '-' expression
   80           | expression • '*' expression
   81           | expression • '/' expression
   84           | '-' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']

    $default  reduce using rule 84 (expression)

    Conflict between rule 84 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 84 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 84 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 84 and token '/' resolved as reduce ('/' < UMINUS).


State 97

   77 expression_list: expression COMMA • expression_list

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value            go to state 54
    expression_list  go to state 146
    expression       go to state 56


State 98

   78 expression: expression '+' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 147


State 99

   79 expression: expression '-' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 148


State 100

   80 expression: expression '*' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 149


State 101

   81 expression: expression '/' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 150


State 102

   85 a_expr: value •  [RBRACE, OR, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, NOT_IN, IN, '+', '-', '*', '/']
  117 value_list_LA: value • COMMA value

    COMMA  shift, and go to state 151

    $default  reduce using rule 85 (a_expr)


State 103

  115 select_stmt_with_paren: LBRACE select_stmt • RBRACE

    RBRACE  shift, and go to state 152


State 104

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr
  109 c_expr: LBRACE a_expr • RBRACE

    RBRACE    shift, and go to state 153
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130


State 105

  114 value_list_LALR: LBRACE value_list_LA • RBRACE
  116 value_list_LA: value_list_LA • COMMA value

    RBRACE  shift, and go to state 154
    COMMA   shift, and go to state 155


State 106

  112 c_expr: NOT_EXISTS LBRACE • a_expr RBRACE

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 156
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 107

  111 c_expr: EXISTS LBRACE • a_expr RBRACE

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 157
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 108

  129 rel_attr: ID DOT • ID

    ID  shift, and go to state 158


State 109

   90 a_expr: '+' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
   91       | a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    $default  reduce using rule 90 (a_expr)

    Conflict between rule 90 and token OR resolved as reduce (OR < UMINUS).
    Conflict between rule 90 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 90 and token EQ resolved as reduce (EQ < UMINUS).
    Conflict between rule 90 and token LT resolved as reduce (LT < UMINUS).
    Conflict between rule 90 and token GT resolved as reduce (GT < UMINUS).
    Conflict between rule 90 and token LE resolved as reduce (LE < UMINUS).
    Conflict between rule 90 and token GE resolved as reduce (GE < UMINUS).
    Conflict between rule 90 and token NE resolved as reduce (NE < UMINUS).
    Conflict between rule 90 and token LIKE resolved as reduce (LIKE < UMINUS).
    Conflict between rule 90 and token NOT_LIKE resolved as reduce (NOT_LIKE < UMINUS).
    Conflict between rule 90 and token IS resolved as reduce (IS < UMINUS).
    Conflict between rule 90 and token IS_NOT resolved as reduce (IS_NOT < UMINUS).
    Conflict between rule 90 and token NOT_IN resolved as reduce (NOT_IN < UMINUS).
    Conflict between rule 90 and token IN resolved as reduce (IN < UMINUS).
    Conflict between rule 90 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 90 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 90 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 90 and token '/' resolved as reduce ('/' < UMINUS).


State 110

   89 a_expr: '-' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
   91       | a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    $default  reduce using rule 89 (a_expr)

    Conflict between rule 89 and token OR resolved as reduce (OR < UMINUS).
    Conflict between rule 89 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 89 and token EQ resolved as reduce (EQ < UMINUS).
    Conflict between rule 89 and token LT resolved as reduce (LT < UMINUS).
    Conflict between rule 89 and token GT resolved as reduce (GT < UMINUS).
    Conflict between rule 89 and token LE resolved as reduce (LE < UMINUS).
    Conflict between rule 89 and token GE resolved as reduce (GE < UMINUS).
    Conflict between rule 89 and token NE resolved as reduce (NE < UMINUS).
    Conflict between rule 89 and token LIKE resolved as reduce (LIKE < UMINUS).
    Conflict between rule 89 and token NOT_LIKE resolved as reduce (NOT_LIKE < UMINUS).
    Conflict between rule 89 and token IS resolved as reduce (IS < UMINUS).
    Conflict between rule 89 and token IS_NOT resolved as reduce (IS_NOT < UMINUS).
    Conflict between rule 89 and token NOT_IN resolved as reduce (NOT_IN < UMINUS).
    Conflict between rule 89 and token IN resolved as reduce (IN < UMINUS).
    Conflict between rule 89 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 89 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 89 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 89 and token '/' resolved as reduce ('/' < UMINUS).


State 111

  133 a_expr_list: COMMA • a_expr a_expr_list

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 159
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 112

  118 select_attr: '*' a_expr_list •

    $default  reduce using rule 118 (select_attr)


State 113

   96 a_expr: a_expr OR • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 160
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 114

   95 a_expr: a_expr AND • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 161
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 115

   97 a_expr: a_expr EQ • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 162
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 116

   98 a_expr: a_expr LT • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 163
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 117

   99 a_expr: a_expr GT • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 164
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 118

  100 a_expr: a_expr LE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 165
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 119

  101 a_expr: a_expr GE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 166
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 120

  102 a_expr: a_expr NE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 167
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 121

  103 a_expr: a_expr LIKE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 168
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 122

  104 a_expr: a_expr NOT_LIKE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 169
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 123

  106 a_expr: a_expr IS • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 170
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 124

  105 a_expr: a_expr IS_NOT • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 171
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 125

  107 a_expr: a_expr NOT_IN • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 172
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 126

  108 a_expr: a_expr IN • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 173
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 127

   91 a_expr: a_expr '+' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 174
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 128

   92 a_expr: a_expr '-' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 175
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 129

   93 a_expr: a_expr '*' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 176
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 130

   94 a_expr: a_expr '/' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 177
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 131

  119 select_attr: a_expr a_expr_list •

    $default  reduce using rule 119 (select_attr)


State 132

   68 select_stmt: SELECT select_attr FROM • ID rel_list where order group_by having
   69            | SELECT select_attr FROM • join where order group_by having

    ID  shift, and go to state 178

    join  go to state 179


State 133

  121 function: func_LA '*' • RBRACE

    RBRACE  shift, and go to state 180


State 134

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr
  120 function: func_LA a_expr • RBRACE

    RBRACE    shift, and go to state 181
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130


State 135

  122 func_LA: func_name LBRACE •

    $default  reduce using rule 122 (func_LA)


State 136

   31 show_index_stmt: SHOW INDEX FROM • ID

    ID  shift, and go to state 182


State 137

   51 insert_stmt: INSERT INTO ID • VALUES LBRACE value value_list RBRACE insert_list

    VALUES  shift, and go to state 183


State 138

   61 delete_stmt: DELETE FROM ID • where

    WHERE  shift, and go to state 184

    $default  reduce using rule 147 (where)

    where  go to state 185


State 139

   62 update_stmt: UPDATE ID SET • update_expr where

    ID  shift, and go to state 186

    update_expr  go to state 187


State 140

  151 set_variable_stmt: SET ID EQ • value

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 188


State 141

  149 load_data_stmt: LOAD DATA INFILE • SSS INTO TABLE ID

    SSS  shift, and go to state 189


State 142

   40 create_table_stmt: CREATE TABLE ID LBRACE • attr_def attr_def_list RBRACE

    ID  shift, and go to state 190

    attr_def  go to state 191


State 143

   35 create_index_stmt: CREATE unique_marker INDEX ID • ON ID LBRACE ID rel_list RBRACE

    ON  shift, and go to state 192


State 144

   36 drop_index_stmt: DROP INDEX ID ON • ID

    ID  shift, and go to state 193


State 145

   82 expression: LBRACE expression RBRACE •

    $default  reduce using rule 82 (expression)


State 146

   77 expression_list: expression COMMA expression_list •

    $default  reduce using rule 77 (expression_list)


State 147

   78 expression: expression • '+' expression
   78           | expression '+' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-']
   79           | expression • '-' expression
   80           | expression • '*' expression
   81           | expression • '/' expression

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token '+' resolved as reduce (%left '+').
    Conflict between rule 78 and token '-' resolved as reduce (%left '-').
    Conflict between rule 78 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 78 and token '/' resolved as shift ('+' < '/').


State 148

   78 expression: expression • '+' expression
   79           | expression • '-' expression
   79           | expression '-' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-']
   80           | expression • '*' expression
   81           | expression • '/' expression

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token '+' resolved as reduce (%left '+').
    Conflict between rule 79 and token '-' resolved as reduce (%left '-').
    Conflict between rule 79 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 79 and token '/' resolved as shift ('-' < '/').


State 149

   78 expression: expression • '+' expression
   79           | expression • '-' expression
   80           | expression • '*' expression
   80           | expression '*' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']
   81           | expression • '/' expression

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 80 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 80 and token '*' resolved as reduce (%left '*').
    Conflict between rule 80 and token '/' resolved as reduce (%left '/').


State 150

   78 expression: expression • '+' expression
   79           | expression • '-' expression
   80           | expression • '*' expression
   81           | expression • '/' expression
   81           | expression '/' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 81 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 81 and token '*' resolved as reduce (%left '*').
    Conflict between rule 81 and token '/' resolved as reduce (%left '/').


State 151

  117 value_list_LA: value COMMA • value

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 194


State 152

  115 select_stmt_with_paren: LBRACE select_stmt RBRACE •

    $default  reduce using rule 115 (select_stmt_with_paren)


State 153

  109 c_expr: LBRACE a_expr RBRACE •

    $default  reduce using rule 109 (c_expr)


State 154

  114 value_list_LALR: LBRACE value_list_LA RBRACE •

    $default  reduce using rule 114 (value_list_LALR)


State 155

  116 value_list_LA: value_list_LA COMMA • value

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 195


State 156

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr
  112 c_expr: NOT_EXISTS LBRACE a_expr • RBRACE

    RBRACE    shift, and go to state 196
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130


State 157

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr
  111 c_expr: EXISTS LBRACE a_expr • RBRACE

    RBRACE    shift, and go to state 197
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130


State 158

  129 rel_attr: ID DOT ID •

    $default  reduce using rule 129 (rel_attr)


State 159

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr
  133 a_expr_list: COMMA a_expr • a_expr_list

    COMMA     shift, and go to state 111
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 132 (a_expr_list)

    a_expr_list  go to state 198


State 160

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   96       | a_expr OR a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, INNER_JOIN, ORDER_BY]
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 96 (a_expr)

    Conflict between rule 96 and token OR resolved as reduce (%left OR).
    Conflict between rule 96 and token AND resolved as shift (OR < AND).
    Conflict between rule 96 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 96 and token LT resolved as shift (OR < LT).
    Conflict between rule 96 and token GT resolved as shift (OR < GT).
    Conflict between rule 96 and token LE resolved as shift (OR < LE).
    Conflict between rule 96 and token GE resolved as shift (OR < GE).
    Conflict between rule 96 and token NE resolved as shift (OR < NE).
    Conflict between rule 96 and token LIKE resolved as shift (OR < LIKE).
    Conflict between rule 96 and token NOT_LIKE resolved as shift (OR < NOT_LIKE).
    Conflict between rule 96 and token IS resolved as shift (OR < IS).
    Conflict between rule 96 and token IS_NOT resolved as shift (OR < IS_NOT).
    Conflict between rule 96 and token NOT_IN resolved as shift (OR < NOT_IN).
    Conflict between rule 96 and token IN resolved as shift (OR < IN).
    Conflict between rule 96 and token '+' resolved as shift (OR < '+').
    Conflict between rule 96 and token '-' resolved as shift (OR < '-').
    Conflict between rule 96 and token '*' resolved as shift (OR < '*').
    Conflict between rule 96 and token '/' resolved as shift (OR < '/').


State 161

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   95       | a_expr AND a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, INNER_JOIN, ORDER_BY]
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 95 (a_expr)

    Conflict between rule 95 and token OR resolved as reduce (OR < AND).
    Conflict between rule 95 and token AND resolved as reduce (%left AND).
    Conflict between rule 95 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 95 and token LT resolved as shift (AND < LT).
    Conflict between rule 95 and token GT resolved as shift (AND < GT).
    Conflict between rule 95 and token LE resolved as shift (AND < LE).
    Conflict between rule 95 and token GE resolved as shift (AND < GE).
    Conflict between rule 95 and token NE resolved as shift (AND < NE).
    Conflict between rule 95 and token LIKE resolved as shift (AND < LIKE).
    Conflict between rule 95 and token NOT_LIKE resolved as shift (AND < NOT_LIKE).
    Conflict between rule 95 and token IS resolved as shift (AND < IS).
    Conflict between rule 95 and token IS_NOT resolved as shift (AND < IS_NOT).
    Conflict between rule 95 and token NOT_IN resolved as shift (AND < NOT_IN).
    Conflict between rule 95 and token IN resolved as shift (AND < IN).
    Conflict between rule 95 and token '+' resolved as shift (AND < '+').
    Conflict between rule 95 and token '-' resolved as shift (AND < '-').
    Conflict between rule 95 and token '*' resolved as shift (AND < '*').
    Conflict between rule 95 and token '/' resolved as shift (AND < '/').


State 162

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   97       | a_expr EQ a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 97 (a_expr)

    Conflict between rule 97 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 97 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 97 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 97 and token LT resolved as reduce (%left LT).
    Conflict between rule 97 and token GT resolved as reduce (%left GT).
    Conflict between rule 97 and token LE resolved as reduce (%left LE).
    Conflict between rule 97 and token GE resolved as reduce (%left GE).
    Conflict between rule 97 and token NE resolved as reduce (%left NE).
    Conflict between rule 97 and token LIKE resolved as shift (EQ < LIKE).
    Conflict between rule 97 and token NOT_LIKE resolved as shift (EQ < NOT_LIKE).
    Conflict between rule 97 and token IS resolved as reduce (IS < EQ).
    Conflict between rule 97 and token IS_NOT resolved as reduce (IS_NOT < EQ).
    Conflict between rule 97 and token NOT_IN resolved as shift (EQ < NOT_IN).
    Conflict between rule 97 and token IN resolved as shift (EQ < IN).
    Conflict between rule 97 and token '+' resolved as shift (EQ < '+').
    Conflict between rule 97 and token '-' resolved as shift (EQ < '-').
    Conflict between rule 97 and token '*' resolved as shift (EQ < '*').
    Conflict between rule 97 and token '/' resolved as shift (EQ < '/').


State 163

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   98       | a_expr LT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 98 (a_expr)

    Conflict between rule 98 and token OR resolved as reduce (OR < LT).
    Conflict between rule 98 and token AND resolved as reduce (AND < LT).
    Conflict between rule 98 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 98 and token LT resolved as reduce (%left LT).
    Conflict between rule 98 and token GT resolved as reduce (%left GT).
    Conflict between rule 98 and token LE resolved as reduce (%left LE).
    Conflict between rule 98 and token GE resolved as reduce (%left GE).
    Conflict between rule 98 and token NE resolved as reduce (%left NE).
    Conflict between rule 98 and token LIKE resolved as shift (LT < LIKE).
    Conflict between rule 98 and token NOT_LIKE resolved as shift (LT < NOT_LIKE).
    Conflict between rule 98 and token IS resolved as reduce (IS < LT).
    Conflict between rule 98 and token IS_NOT resolved as reduce (IS_NOT < LT).
    Conflict between rule 98 and token NOT_IN resolved as shift (LT < NOT_IN).
    Conflict between rule 98 and token IN resolved as shift (LT < IN).
    Conflict between rule 98 and token '+' resolved as shift (LT < '+').
    Conflict between rule 98 and token '-' resolved as shift (LT < '-').
    Conflict between rule 98 and token '*' resolved as shift (LT < '*').
    Conflict between rule 98 and token '/' resolved as shift (LT < '/').


State 164

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
   99       | a_expr GT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 99 (a_expr)

    Conflict between rule 99 and token OR resolved as reduce (OR < GT).
    Conflict between rule 99 and token AND resolved as reduce (AND < GT).
    Conflict between rule 99 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 99 and token LT resolved as reduce (%left LT).
    Conflict between rule 99 and token GT resolved as reduce (%left GT).
    Conflict between rule 99 and token LE resolved as reduce (%left LE).
    Conflict between rule 99 and token GE resolved as reduce (%left GE).
    Conflict between rule 99 and token NE resolved as reduce (%left NE).
    Conflict between rule 99 and token LIKE resolved as shift (GT < LIKE).
    Conflict between rule 99 and token NOT_LIKE resolved as shift (GT < NOT_LIKE).
    Conflict between rule 99 and token IS resolved as reduce (IS < GT).
    Conflict between rule 99 and token IS_NOT resolved as reduce (IS_NOT < GT).
    Conflict between rule 99 and token NOT_IN resolved as shift (GT < NOT_IN).
    Conflict between rule 99 and token IN resolved as shift (GT < IN).
    Conflict between rule 99 and token '+' resolved as shift (GT < '+').
    Conflict between rule 99 and token '-' resolved as shift (GT < '-').
    Conflict between rule 99 and token '*' resolved as shift (GT < '*').
    Conflict between rule 99 and token '/' resolved as shift (GT < '/').


State 165

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  100       | a_expr LE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 100 (a_expr)

    Conflict between rule 100 and token OR resolved as reduce (OR < LE).
    Conflict between rule 100 and token AND resolved as reduce (AND < LE).
    Conflict between rule 100 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 100 and token LT resolved as reduce (%left LT).
    Conflict between rule 100 and token GT resolved as reduce (%left GT).
    Conflict between rule 100 and token LE resolved as reduce (%left LE).
    Conflict between rule 100 and token GE resolved as reduce (%left GE).
    Conflict between rule 100 and token NE resolved as reduce (%left NE).
    Conflict between rule 100 and token LIKE resolved as shift (LE < LIKE).
    Conflict between rule 100 and token NOT_LIKE resolved as shift (LE < NOT_LIKE).
    Conflict between rule 100 and token IS resolved as reduce (IS < LE).
    Conflict between rule 100 and token IS_NOT resolved as reduce (IS_NOT < LE).
    Conflict between rule 100 and token NOT_IN resolved as shift (LE < NOT_IN).
    Conflict between rule 100 and token IN resolved as shift (LE < IN).
    Conflict between rule 100 and token '+' resolved as shift (LE < '+').
    Conflict between rule 100 and token '-' resolved as shift (LE < '-').
    Conflict between rule 100 and token '*' resolved as shift (LE < '*').
    Conflict between rule 100 and token '/' resolved as shift (LE < '/').


State 166

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  101       | a_expr GE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 101 (a_expr)

    Conflict between rule 101 and token OR resolved as reduce (OR < GE).
    Conflict between rule 101 and token AND resolved as reduce (AND < GE).
    Conflict between rule 101 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 101 and token LT resolved as reduce (%left LT).
    Conflict between rule 101 and token GT resolved as reduce (%left GT).
    Conflict between rule 101 and token LE resolved as reduce (%left LE).
    Conflict between rule 101 and token GE resolved as reduce (%left GE).
    Conflict between rule 101 and token NE resolved as reduce (%left NE).
    Conflict between rule 101 and token LIKE resolved as shift (GE < LIKE).
    Conflict between rule 101 and token NOT_LIKE resolved as shift (GE < NOT_LIKE).
    Conflict between rule 101 and token IS resolved as reduce (IS < GE).
    Conflict between rule 101 and token IS_NOT resolved as reduce (IS_NOT < GE).
    Conflict between rule 101 and token NOT_IN resolved as shift (GE < NOT_IN).
    Conflict between rule 101 and token IN resolved as shift (GE < IN).
    Conflict between rule 101 and token '+' resolved as shift (GE < '+').
    Conflict between rule 101 and token '-' resolved as shift (GE < '-').
    Conflict between rule 101 and token '*' resolved as shift (GE < '*').
    Conflict between rule 101 and token '/' resolved as shift (GE < '/').


State 167

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  102       | a_expr NE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 102 (a_expr)

    Conflict between rule 102 and token OR resolved as reduce (OR < NE).
    Conflict between rule 102 and token AND resolved as reduce (AND < NE).
    Conflict between rule 102 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 102 and token LT resolved as reduce (%left LT).
    Conflict between rule 102 and token GT resolved as reduce (%left GT).
    Conflict between rule 102 and token LE resolved as reduce (%left LE).
    Conflict between rule 102 and token GE resolved as reduce (%left GE).
    Conflict between rule 102 and token NE resolved as reduce (%left NE).
    Conflict between rule 102 and token LIKE resolved as shift (NE < LIKE).
    Conflict between rule 102 and token NOT_LIKE resolved as shift (NE < NOT_LIKE).
    Conflict between rule 102 and token IS resolved as reduce (IS < NE).
    Conflict between rule 102 and token IS_NOT resolved as reduce (IS_NOT < NE).
    Conflict between rule 102 and token NOT_IN resolved as shift (NE < NOT_IN).
    Conflict between rule 102 and token IN resolved as shift (NE < IN).
    Conflict between rule 102 and token '+' resolved as shift (NE < '+').
    Conflict between rule 102 and token '-' resolved as shift (NE < '-').
    Conflict between rule 102 and token '*' resolved as shift (NE < '*').
    Conflict between rule 102 and token '/' resolved as shift (NE < '/').


State 168

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  103       | a_expr LIKE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 103 (a_expr)

    Conflict between rule 103 and token OR resolved as reduce (OR < LIKE).
    Conflict between rule 103 and token AND resolved as reduce (AND < LIKE).
    Conflict between rule 103 and token EQ resolved as reduce (EQ < LIKE).
    Conflict between rule 103 and token LT resolved as reduce (LT < LIKE).
    Conflict between rule 103 and token GT resolved as reduce (GT < LIKE).
    Conflict between rule 103 and token LE resolved as reduce (LE < LIKE).
    Conflict between rule 103 and token GE resolved as reduce (GE < LIKE).
    Conflict between rule 103 and token NE resolved as reduce (NE < LIKE).
    Conflict between rule 103 and token LIKE resolved as reduce (%left LIKE).
    Conflict between rule 103 and token NOT_LIKE resolved as reduce (%left NOT_LIKE).
    Conflict between rule 103 and token IS resolved as reduce (IS < LIKE).
    Conflict between rule 103 and token IS_NOT resolved as reduce (IS_NOT < LIKE).
    Conflict between rule 103 and token NOT_IN resolved as reduce (NOT_IN < LIKE).
    Conflict between rule 103 and token IN resolved as reduce (IN < LIKE).
    Conflict between rule 103 and token '+' resolved as shift (LIKE < '+').
    Conflict between rule 103 and token '-' resolved as shift (LIKE < '-').
    Conflict between rule 103 and token '*' resolved as shift (LIKE < '*').
    Conflict between rule 103 and token '/' resolved as shift (LIKE < '/').


State 169

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  104       | a_expr NOT_LIKE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 104 (a_expr)

    Conflict between rule 104 and token OR resolved as reduce (OR < NOT_LIKE).
    Conflict between rule 104 and token AND resolved as reduce (AND < NOT_LIKE).
    Conflict between rule 104 and token EQ resolved as reduce (EQ < NOT_LIKE).
    Conflict between rule 104 and token LT resolved as reduce (LT < NOT_LIKE).
    Conflict between rule 104 and token GT resolved as reduce (GT < NOT_LIKE).
    Conflict between rule 104 and token LE resolved as reduce (LE < NOT_LIKE).
    Conflict between rule 104 and token GE resolved as reduce (GE < NOT_LIKE).
    Conflict between rule 104 and token NE resolved as reduce (NE < NOT_LIKE).
    Conflict between rule 104 and token LIKE resolved as reduce (%left LIKE).
    Conflict between rule 104 and token NOT_LIKE resolved as reduce (%left NOT_LIKE).
    Conflict between rule 104 and token IS resolved as reduce (IS < NOT_LIKE).
    Conflict between rule 104 and token IS_NOT resolved as reduce (IS_NOT < NOT_LIKE).
    Conflict between rule 104 and token NOT_IN resolved as reduce (NOT_IN < NOT_LIKE).
    Conflict between rule 104 and token IN resolved as reduce (IN < NOT_LIKE).
    Conflict between rule 104 and token '+' resolved as shift (NOT_LIKE < '+').
    Conflict between rule 104 and token '-' resolved as shift (NOT_LIKE < '-').
    Conflict between rule 104 and token '*' resolved as shift (NOT_LIKE < '*').
    Conflict between rule 104 and token '/' resolved as shift (NOT_LIKE < '/').


State 170

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  106       | a_expr IS a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 106 (a_expr)

    Conflict between rule 106 and token OR resolved as reduce (OR < IS).
    Conflict between rule 106 and token AND resolved as reduce (AND < IS).
    Conflict between rule 106 and token EQ resolved as shift (IS < EQ).
    Conflict between rule 106 and token LT resolved as shift (IS < LT).
    Conflict between rule 106 and token GT resolved as shift (IS < GT).
    Conflict between rule 106 and token LE resolved as shift (IS < LE).
    Conflict between rule 106 and token GE resolved as shift (IS < GE).
    Conflict between rule 106 and token NE resolved as shift (IS < NE).
    Conflict between rule 106 and token LIKE resolved as shift (IS < LIKE).
    Conflict between rule 106 and token NOT_LIKE resolved as shift (IS < NOT_LIKE).
    Conflict between rule 106 and token IS resolved as reduce (%left IS).
    Conflict between rule 106 and token IS_NOT resolved as reduce (%left IS_NOT).
    Conflict between rule 106 and token NOT_IN resolved as shift (IS < NOT_IN).
    Conflict between rule 106 and token IN resolved as shift (IS < IN).
    Conflict between rule 106 and token '+' resolved as shift (IS < '+').
    Conflict between rule 106 and token '-' resolved as shift (IS < '-').
    Conflict between rule 106 and token '*' resolved as shift (IS < '*').
    Conflict between rule 106 and token '/' resolved as shift (IS < '/').


State 171

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  105       | a_expr IS_NOT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 105 (a_expr)

    Conflict between rule 105 and token OR resolved as reduce (OR < IS_NOT).
    Conflict between rule 105 and token AND resolved as reduce (AND < IS_NOT).
    Conflict between rule 105 and token EQ resolved as shift (IS_NOT < EQ).
    Conflict between rule 105 and token LT resolved as shift (IS_NOT < LT).
    Conflict between rule 105 and token GT resolved as shift (IS_NOT < GT).
    Conflict between rule 105 and token LE resolved as shift (IS_NOT < LE).
    Conflict between rule 105 and token GE resolved as shift (IS_NOT < GE).
    Conflict between rule 105 and token NE resolved as shift (IS_NOT < NE).
    Conflict between rule 105 and token LIKE resolved as shift (IS_NOT < LIKE).
    Conflict between rule 105 and token NOT_LIKE resolved as shift (IS_NOT < NOT_LIKE).
    Conflict between rule 105 and token IS resolved as reduce (%left IS).
    Conflict between rule 105 and token IS_NOT resolved as reduce (%left IS_NOT).
    Conflict between rule 105 and token NOT_IN resolved as shift (IS_NOT < NOT_IN).
    Conflict between rule 105 and token IN resolved as shift (IS_NOT < IN).
    Conflict between rule 105 and token '+' resolved as shift (IS_NOT < '+').
    Conflict between rule 105 and token '-' resolved as shift (IS_NOT < '-').
    Conflict between rule 105 and token '*' resolved as shift (IS_NOT < '*').
    Conflict between rule 105 and token '/' resolved as shift (IS_NOT < '/').


State 172

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  107       | a_expr NOT_IN a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  108       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 107 (a_expr)

    Conflict between rule 107 and token OR resolved as reduce (OR < NOT_IN).
    Conflict between rule 107 and token AND resolved as reduce (AND < NOT_IN).
    Conflict between rule 107 and token EQ resolved as reduce (EQ < NOT_IN).
    Conflict between rule 107 and token LT resolved as reduce (LT < NOT_IN).
    Conflict between rule 107 and token GT resolved as reduce (GT < NOT_IN).
    Conflict between rule 107 and token LE resolved as reduce (LE < NOT_IN).
    Conflict between rule 107 and token GE resolved as reduce (GE < NOT_IN).
    Conflict between rule 107 and token NE resolved as reduce (NE < NOT_IN).
    Conflict between rule 107 and token LIKE resolved as shift (NOT_IN < LIKE).
    Conflict between rule 107 and token NOT_LIKE resolved as shift (NOT_IN < NOT_LIKE).
    Conflict between rule 107 and token IS resolved as reduce (IS < NOT_IN).
    Conflict between rule 107 and token IS_NOT resolved as reduce (IS_NOT < NOT_IN).
    Conflict between rule 107 and token NOT_IN resolved as reduce (%left NOT_IN).
    Conflict between rule 107 and token IN resolved as reduce (%left IN).
    Conflict between rule 107 and token '+' resolved as shift (NOT_IN < '+').
    Conflict between rule 107 and token '-' resolved as shift (NOT_IN < '-').
    Conflict between rule 107 and token '*' resolved as shift (NOT_IN < '*').
    Conflict between rule 107 and token '/' resolved as shift (NOT_IN < '/').


State 173

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr
  108       | a_expr IN a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 108 (a_expr)

    Conflict between rule 108 and token OR resolved as reduce (OR < IN).
    Conflict between rule 108 and token AND resolved as reduce (AND < IN).
    Conflict between rule 108 and token EQ resolved as reduce (EQ < IN).
    Conflict between rule 108 and token LT resolved as reduce (LT < IN).
    Conflict between rule 108 and token GT resolved as reduce (GT < IN).
    Conflict between rule 108 and token LE resolved as reduce (LE < IN).
    Conflict between rule 108 and token GE resolved as reduce (GE < IN).
    Conflict between rule 108 and token NE resolved as reduce (NE < IN).
    Conflict between rule 108 and token LIKE resolved as shift (IN < LIKE).
    Conflict between rule 108 and token NOT_LIKE resolved as shift (IN < NOT_LIKE).
    Conflict between rule 108 and token IS resolved as reduce (IS < IN).
    Conflict between rule 108 and token IS_NOT resolved as reduce (IS_NOT < IN).
    Conflict between rule 108 and token NOT_IN resolved as reduce (%left NOT_IN).
    Conflict between rule 108 and token IN resolved as reduce (%left IN).
    Conflict between rule 108 and token '+' resolved as shift (IN < '+').
    Conflict between rule 108 and token '-' resolved as shift (IN < '-').
    Conflict between rule 108 and token '*' resolved as shift (IN < '*').
    Conflict between rule 108 and token '/' resolved as shift (IN < '/').


State 174

   91 a_expr: a_expr • '+' a_expr
   91       | a_expr '+' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-']
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 91 (a_expr)

    Conflict between rule 91 and token OR resolved as reduce (OR < '+').
    Conflict between rule 91 and token AND resolved as reduce (AND < '+').
    Conflict between rule 91 and token EQ resolved as reduce (EQ < '+').
    Conflict between rule 91 and token LT resolved as reduce (LT < '+').
    Conflict between rule 91 and token GT resolved as reduce (GT < '+').
    Conflict between rule 91 and token LE resolved as reduce (LE < '+').
    Conflict between rule 91 and token GE resolved as reduce (GE < '+').
    Conflict between rule 91 and token NE resolved as reduce (NE < '+').
    Conflict between rule 91 and token LIKE resolved as reduce (LIKE < '+').
    Conflict between rule 91 and token NOT_LIKE resolved as reduce (NOT_LIKE < '+').
    Conflict between rule 91 and token IS resolved as reduce (IS < '+').
    Conflict between rule 91 and token IS_NOT resolved as reduce (IS_NOT < '+').
    Conflict between rule 91 and token NOT_IN resolved as reduce (NOT_IN < '+').
    Conflict between rule 91 and token IN resolved as reduce (IN < '+').
    Conflict between rule 91 and token '+' resolved as reduce (%left '+').
    Conflict between rule 91 and token '-' resolved as reduce (%left '-').
    Conflict between rule 91 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 91 and token '/' resolved as shift ('+' < '/').


State 175

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   92       | a_expr '-' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-']
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 92 (a_expr)

    Conflict between rule 92 and token OR resolved as reduce (OR < '-').
    Conflict between rule 92 and token AND resolved as reduce (AND < '-').
    Conflict between rule 92 and token EQ resolved as reduce (EQ < '-').
    Conflict between rule 92 and token LT resolved as reduce (LT < '-').
    Conflict between rule 92 and token GT resolved as reduce (GT < '-').
    Conflict between rule 92 and token LE resolved as reduce (LE < '-').
    Conflict between rule 92 and token GE resolved as reduce (GE < '-').
    Conflict between rule 92 and token NE resolved as reduce (NE < '-').
    Conflict between rule 92 and token LIKE resolved as reduce (LIKE < '-').
    Conflict between rule 92 and token NOT_LIKE resolved as reduce (NOT_LIKE < '-').
    Conflict between rule 92 and token IS resolved as reduce (IS < '-').
    Conflict between rule 92 and token IS_NOT resolved as reduce (IS_NOT < '-').
    Conflict between rule 92 and token NOT_IN resolved as reduce (NOT_IN < '-').
    Conflict between rule 92 and token IN resolved as reduce (IN < '-').
    Conflict between rule 92 and token '+' resolved as reduce (%left '+').
    Conflict between rule 92 and token '-' resolved as reduce (%left '-').
    Conflict between rule 92 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 92 and token '/' resolved as shift ('-' < '/').


State 176

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   93       | a_expr '*' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    $default  reduce using rule 93 (a_expr)

    Conflict between rule 93 and token OR resolved as reduce (OR < '*').
    Conflict between rule 93 and token AND resolved as reduce (AND < '*').
    Conflict between rule 93 and token EQ resolved as reduce (EQ < '*').
    Conflict between rule 93 and token LT resolved as reduce (LT < '*').
    Conflict between rule 93 and token GT resolved as reduce (GT < '*').
    Conflict between rule 93 and token LE resolved as reduce (LE < '*').
    Conflict between rule 93 and token GE resolved as reduce (GE < '*').
    Conflict between rule 93 and token NE resolved as reduce (NE < '*').
    Conflict between rule 93 and token LIKE resolved as reduce (LIKE < '*').
    Conflict between rule 93 and token NOT_LIKE resolved as reduce (NOT_LIKE < '*').
    Conflict between rule 93 and token IS resolved as reduce (IS < '*').
    Conflict between rule 93 and token IS_NOT resolved as reduce (IS_NOT < '*').
    Conflict between rule 93 and token NOT_IN resolved as reduce (NOT_IN < '*').
    Conflict between rule 93 and token IN resolved as reduce (IN < '*').
    Conflict between rule 93 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 93 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 93 and token '*' resolved as reduce (%left '*').
    Conflict between rule 93 and token '/' resolved as reduce (%left '/').


State 177

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   94       | a_expr '/' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    $default  reduce using rule 94 (a_expr)

    Conflict between rule 94 and token OR resolved as reduce (OR < '/').
    Conflict between rule 94 and token AND resolved as reduce (AND < '/').
    Conflict between rule 94 and token EQ resolved as reduce (EQ < '/').
    Conflict between rule 94 and token LT resolved as reduce (LT < '/').
    Conflict between rule 94 and token GT resolved as reduce (GT < '/').
    Conflict between rule 94 and token LE resolved as reduce (LE < '/').
    Conflict between rule 94 and token GE resolved as reduce (GE < '/').
    Conflict between rule 94 and token NE resolved as reduce (NE < '/').
    Conflict between rule 94 and token LIKE resolved as reduce (LIKE < '/').
    Conflict between rule 94 and token NOT_LIKE resolved as reduce (NOT_LIKE < '/').
    Conflict between rule 94 and token IS resolved as reduce (IS < '/').
    Conflict between rule 94 and token IS_NOT resolved as reduce (IS_NOT < '/').
    Conflict between rule 94 and token NOT_IN resolved as reduce (NOT_IN < '/').
    Conflict between rule 94 and token IN resolved as reduce (IN < '/').
    Conflict between rule 94 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 94 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 94 and token '*' resolved as reduce (%left '*').
    Conflict between rule 94 and token '/' resolved as reduce (%left '/').


State 178

   68 select_stmt: SELECT select_attr FROM ID • rel_list where order group_by having
   70 join: ID • INNER_JOIN ID join_equal join_list

    COMMA       shift, and go to state 199
    INNER_JOIN  shift, and go to state 200

    $default  reduce using rule 134 (rel_list)

    rel_list  go to state 201


State 179

   69 select_stmt: SELECT select_attr FROM join • where order group_by having

    WHERE  shift, and go to state 184

    $default  reduce using rule 147 (where)

    where  go to state 202


State 180

  121 function: func_LA '*' RBRACE •

    $default  reduce using rule 121 (function)


State 181

  120 function: func_LA a_expr RBRACE •

    $default  reduce using rule 120 (function)


State 182

   31 show_index_stmt: SHOW INDEX FROM ID •

    $default  reduce using rule 31 (show_index_stmt)


State 183

   51 insert_stmt: INSERT INTO ID VALUES • LBRACE value value_list RBRACE insert_list

    LBRACE  shift, and go to state 203


State 184

  148 where: WHERE • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 204
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 185

   61 delete_stmt: DELETE FROM ID where •

    $default  reduce using rule 61 (delete_stmt)


State 186

   63 update_expr: ID • EQ LBRACE select_stmt RBRACE update_expr_list
   64            | ID • EQ value update_expr_list

    EQ  shift, and go to state 205


State 187

   62 update_stmt: UPDATE ID SET update_expr • where

    WHERE  shift, and go to state 184

    $default  reduce using rule 147 (where)

    where  go to state 206


State 188

  151 set_variable_stmt: SET ID EQ value •

    $default  reduce using rule 151 (set_variable_stmt)


State 189

  149 load_data_stmt: LOAD DATA INFILE SSS • INTO TABLE ID

    INTO  shift, and go to state 207


State 190

   43 attr_def: ID • type nullable_marker LBRACE number RBRACE
   44         | ID • type nullable_marker

    INT_T     shift, and go to state 208
    STRING_T  shift, and go to state 209
    FLOAT_T   shift, and go to state 210
    DATE_T    shift, and go to state 211
    TEXT_T    shift, and go to state 212

    type  go to state 213


State 191

   40 create_table_stmt: CREATE TABLE ID LBRACE attr_def • attr_def_list RBRACE

    COMMA  shift, and go to state 214

    $default  reduce using rule 41 (attr_def_list)

    attr_def_list  go to state 215


State 192

   35 create_index_stmt: CREATE unique_marker INDEX ID ON • ID LBRACE ID rel_list RBRACE

    ID  shift, and go to state 216


State 193

   36 drop_index_stmt: DROP INDEX ID ON ID •

    $default  reduce using rule 36 (drop_index_stmt)


State 194

  117 value_list_LA: value COMMA value •

    $default  reduce using rule 117 (value_list_LA)


State 195

  116 value_list_LA: value_list_LA COMMA value •

    $default  reduce using rule 116 (value_list_LA)


State 196

  112 c_expr: NOT_EXISTS LBRACE a_expr RBRACE •

    $default  reduce using rule 112 (c_expr)


State 197

  111 c_expr: EXISTS LBRACE a_expr RBRACE •

    $default  reduce using rule 111 (c_expr)


State 198

  133 a_expr_list: COMMA a_expr a_expr_list •

    $default  reduce using rule 133 (a_expr_list)


State 199

  135 rel_list: COMMA • ID rel_list

    ID  shift, and go to state 217


State 200

   70 join: ID INNER_JOIN • ID join_equal join_list

    ID  shift, and go to state 218


State 201

   68 select_stmt: SELECT select_attr FROM ID rel_list • where order group_by having

    WHERE  shift, and go to state 184

    $default  reduce using rule 147 (where)

    where  go to state 219


State 202

   69 select_stmt: SELECT select_attr FROM join where • order group_by having

    ORDER_BY  shift, and go to state 220

    $default  reduce using rule 140 (order)

    order  go to state 221


State 203

   51 insert_stmt: INSERT INTO ID VALUES LBRACE • value value_list RBRACE insert_list

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 222


State 204

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr
  148 where: WHERE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, HAVING, ORDER_BY]

    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 148 (where)


State 205

   63 update_expr: ID EQ • LBRACE select_stmt RBRACE update_expr_list
   64            | ID EQ • value update_expr_list

    LBRACE  shift, and go to state 223
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 224


State 206

   62 update_stmt: UPDATE ID SET update_expr where •

    $default  reduce using rule 62 (update_stmt)


State 207

  149 load_data_stmt: LOAD DATA INFILE SSS INTO • TABLE ID

    TABLE  shift, and go to state 225


State 208

   46 type: INT_T •

    $default  reduce using rule 46 (type)


State 209

   47 type: STRING_T •

    $default  reduce using rule 47 (type)


State 210

   49 type: FLOAT_T •

    $default  reduce using rule 49 (type)


State 211

   50 type: DATE_T •

    $default  reduce using rule 50 (type)


State 212

   48 type: TEXT_T •

    $default  reduce using rule 48 (type)


State 213

   43 attr_def: ID type • nullable_marker LBRACE number RBRACE
   44         | ID type • nullable_marker

    NULLABLE    shift, and go to state 226
    UNNULLABLE  shift, and go to state 227

    $default  reduce using rule 37 (nullable_marker)

    nullable_marker  go to state 228


State 214

   42 attr_def_list: COMMA • attr_def attr_def_list

    ID  shift, and go to state 190

    attr_def  go to state 229


State 215

   40 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list • RBRACE

    RBRACE  shift, and go to state 230


State 216

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID • LBRACE ID rel_list RBRACE

    LBRACE  shift, and go to state 231


State 217

  135 rel_list: COMMA ID • rel_list

    COMMA  shift, and go to state 199

    $default  reduce using rule 134 (rel_list)

    rel_list  go to state 232


State 218

   70 join: ID INNER_JOIN ID • join_equal join_list

    ON  shift, and go to state 233

    $default  reduce using rule 73 (join_equal)

    join_equal  go to state 234


State 219

   68 select_stmt: SELECT select_attr FROM ID rel_list where • order group_by having

    ORDER_BY  shift, and go to state 220

    $default  reduce using rule 140 (order)

    order  go to state 235


State 220

  141 order: ORDER_BY • rel_attr asc_or_desc order_list

    ID  shift, and go to state 65

    rel_attr  go to state 236


State 221

   69 select_stmt: SELECT select_attr FROM join where order • group_by having

    GROUP_BY  shift, and go to state 237

    $default  reduce using rule 136 (group_by)

    group_by  go to state 238


State 222

   51 insert_stmt: INSERT INTO ID VALUES LBRACE value • value_list RBRACE insert_list

    COMMA  shift, and go to state 239

    $default  reduce using rule 54 (value_list)

    value_list  go to state 240


State 223

   63 update_expr: ID EQ LBRACE • select_stmt RBRACE update_expr_list

    SELECT  shift, and go to state 4

    select_stmt  go to state 241


State 224

   64 update_expr: ID EQ value • update_expr_list

    COMMA  shift, and go to state 242

    $default  reduce using rule 65 (update_expr_list)

    update_expr_list  go to state 243


State 225

  149 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE • ID

    ID  shift, and go to state 244


State 226

   39 nullable_marker: NULLABLE •

    $default  reduce using rule 39 (nullable_marker)


State 227

   38 nullable_marker: UNNULLABLE •

    $default  reduce using rule 38 (nullable_marker)


State 228

   43 attr_def: ID type nullable_marker • LBRACE number RBRACE
   44         | ID type nullable_marker •  [RBRACE, COMMA]

    LBRACE  shift, and go to state 245

    $default  reduce using rule 44 (attr_def)


State 229

   42 attr_def_list: COMMA attr_def • attr_def_list

    COMMA  shift, and go to state 214

    $default  reduce using rule 41 (attr_def_list)

    attr_def_list  go to state 246


State 230

   40 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE •

    $default  reduce using rule 40 (create_table_stmt)


State 231

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE • ID rel_list RBRACE

    ID  shift, and go to state 247


State 232

  135 rel_list: COMMA ID rel_list •

    $default  reduce using rule 135 (rel_list)


State 233

   74 join_equal: ON • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 248
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 234

   70 join: ID INNER_JOIN ID join_equal • join_list

    INNER_JOIN  shift, and go to state 249

    $default  reduce using rule 72 (join_list)

    join_list  go to state 250


State 235

   68 select_stmt: SELECT select_attr FROM ID rel_list where order • group_by having

    GROUP_BY  shift, and go to state 237

    $default  reduce using rule 136 (group_by)

    group_by  go to state 251


State 236

  141 order: ORDER_BY rel_attr • asc_or_desc order_list

    DESC  shift, and go to state 252
    ASC   shift, and go to state 253

    $default  reduce using rule 144 (asc_or_desc)

    asc_or_desc  go to state 254


State 237

  137 group_by: GROUP_BY • rel_attr attr_list

    ID  shift, and go to state 65

    rel_attr  go to state 255


State 238

   69 select_stmt: SELECT select_attr FROM join where order group_by • having

    HAVING  shift, and go to state 256

    $default  reduce using rule 138 (having)

    having  go to state 257


State 239

   55 value_list: COMMA • value value_list

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 258


State 240

   51 insert_stmt: INSERT INTO ID VALUES LBRACE value value_list • RBRACE insert_list

    RBRACE  shift, and go to state 259


State 241

   63 update_expr: ID EQ LBRACE select_stmt • RBRACE update_expr_list

    RBRACE  shift, and go to state 260


State 242

   66 update_expr_list: COMMA • ID EQ LBRACE select_stmt RBRACE update_expr_list
   67                 | COMMA • ID EQ value update_expr_list

    ID  shift, and go to state 261


State 243

   64 update_expr: ID EQ value update_expr_list •

    $default  reduce using rule 64 (update_expr)


State 244

  149 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE ID •

    $default  reduce using rule 149 (load_data_stmt)


State 245

   43 attr_def: ID type nullable_marker LBRACE • number RBRACE

    NUMBER  shift, and go to state 262

    number  go to state 263


State 246

   42 attr_def_list: COMMA attr_def attr_def_list •

    $default  reduce using rule 42 (attr_def_list)


State 247

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID • rel_list RBRACE

    COMMA  shift, and go to state 199

    $default  reduce using rule 134 (rel_list)

    rel_list  go to state 264


State 248

   74 join_equal: ON a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, WHERE, HAVING, INNER_JOIN, ORDER_BY]
   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr

    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 74 (join_equal)


State 249

   71 join_list: INNER_JOIN • ID join_equal join_list

    ID  shift, and go to state 265


State 250

   70 join: ID INNER_JOIN ID join_equal join_list •

    $default  reduce using rule 70 (join)


State 251

   68 select_stmt: SELECT select_attr FROM ID rel_list where order group_by • having

    HAVING  shift, and go to state 256

    $default  reduce using rule 138 (having)

    having  go to state 266


State 252

  146 asc_or_desc: DESC •

    $default  reduce using rule 146 (asc_or_desc)


State 253

  145 asc_or_desc: ASC •

    $default  reduce using rule 145 (asc_or_desc)


State 254

  141 order: ORDER_BY rel_attr asc_or_desc • order_list

    COMMA  shift, and go to state 267

    $default  reduce using rule 142 (order_list)

    order_list  go to state 268


State 255

  137 group_by: GROUP_BY rel_attr • attr_list

    COMMA  shift, and go to state 269

    $default  reduce using rule 130 (attr_list)

    attr_list  go to state 270


State 256

  139 having: HAVING • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 271
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 257

   69 select_stmt: SELECT select_attr FROM join where order group_by having •

    $default  reduce using rule 69 (select_stmt)


State 258

   55 value_list: COMMA value • value_list

    COMMA  shift, and go to state 239

    $default  reduce using rule 54 (value_list)

    value_list  go to state 272


State 259

   51 insert_stmt: INSERT INTO ID VALUES LBRACE value value_list RBRACE • insert_list

    COMMA  shift, and go to state 273

    $default  reduce using rule 52 (insert_list)

    insert_list  go to state 274


State 260

   63 update_expr: ID EQ LBRACE select_stmt RBRACE • update_expr_list

    COMMA  shift, and go to state 242

    $default  reduce using rule 65 (update_expr_list)

    update_expr_list  go to state 275


State 261

   66 update_expr_list: COMMA ID • EQ LBRACE select_stmt RBRACE update_expr_list
   67                 | COMMA ID • EQ value update_expr_list

    EQ  shift, and go to state 276


State 262

   45 number: NUMBER •

    $default  reduce using rule 45 (number)


State 263

   43 attr_def: ID type nullable_marker LBRACE number • RBRACE

    RBRACE  shift, and go to state 277


State 264

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID rel_list • RBRACE

    RBRACE  shift, and go to state 278


State 265

   71 join_list: INNER_JOIN ID • join_equal join_list

    ON  shift, and go to state 233

    $default  reduce using rule 73 (join_equal)

    join_equal  go to state 279


State 266

   68 select_stmt: SELECT select_attr FROM ID rel_list where order group_by having •

    $default  reduce using rule 68 (select_stmt)


State 267

  143 order_list: COMMA • rel_attr asc_or_desc order_list

    ID  shift, and go to state 65

    rel_attr  go to state 280


State 268

  141 order: ORDER_BY rel_attr asc_or_desc order_list •

    $default  reduce using rule 141 (order)


State 269

  131 attr_list: COMMA • rel_attr attr_list

    ID  shift, and go to state 65

    rel_attr  go to state 281


State 270

  137 group_by: GROUP_BY rel_attr attr_list •

    $default  reduce using rule 137 (group_by)


State 271

   91 a_expr: a_expr • '+' a_expr
   92       | a_expr • '-' a_expr
   93       | a_expr • '*' a_expr
   94       | a_expr • '/' a_expr
   95       | a_expr • AND a_expr
   96       | a_expr • OR a_expr
   97       | a_expr • EQ a_expr
   98       | a_expr • LT a_expr
   99       | a_expr • GT a_expr
  100       | a_expr • LE a_expr
  101       | a_expr • GE a_expr
  102       | a_expr • NE a_expr
  103       | a_expr • LIKE a_expr
  104       | a_expr • NOT_LIKE a_expr
  105       | a_expr • IS_NOT a_expr
  106       | a_expr • IS a_expr
  107       | a_expr • NOT_IN a_expr
  108       | a_expr • IN a_expr
  139 having: HAVING a_expr •  [$end, SEMICOLON, RBRACE]

    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 139 (having)


State 272

   55 value_list: COMMA value value_list •

    $default  reduce using rule 55 (value_list)


State 273

   53 insert_list: COMMA • LBRACE value value_list RBRACE insert_list

    LBRACE  shift, and go to state 282


State 274

   51 insert_stmt: INSERT INTO ID VALUES LBRACE value value_list RBRACE insert_list •

    $default  reduce using rule 51 (insert_stmt)


State 275

   63 update_expr: ID EQ LBRACE select_stmt RBRACE update_expr_list •

    $default  reduce using rule 63 (update_expr)


State 276

   66 update_expr_list: COMMA ID EQ • LBRACE select_stmt RBRACE update_expr_list
   67                 | COMMA ID EQ • value update_expr_list

    LBRACE  shift, and go to state 283
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 284


State 277

   43 attr_def: ID type nullable_marker LBRACE number RBRACE •

    $default  reduce using rule 43 (attr_def)


State 278

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID rel_list RBRACE •

    $default  reduce using rule 35 (create_index_stmt)


State 279

   71 join_list: INNER_JOIN ID join_equal • join_list

    INNER_JOIN  shift, and go to state 249

    $default  reduce using rule 72 (join_list)

    join_list  go to state 285


State 280

  143 order_list: COMMA rel_attr • asc_or_desc order_list

    DESC  shift, and go to state 252
    ASC   shift, and go to state 253

    $default  reduce using rule 144 (asc_or_desc)

    asc_or_desc  go to state 286


State 281

  131 attr_list: COMMA rel_attr • attr_list

    COMMA  shift, and go to state 269

    $default  reduce using rule 130 (attr_list)

    attr_list  go to state 287


State 282

   53 insert_list: COMMA LBRACE • value value_list RBRACE insert_list

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 288


State 283

   66 update_expr_list: COMMA ID EQ LBRACE • select_stmt RBRACE update_expr_list

    SELECT  shift, and go to state 4

    select_stmt  go to state 289


State 284

   67 update_expr_list: COMMA ID EQ value • update_expr_list

    COMMA  shift, and go to state 242

    $default  reduce using rule 65 (update_expr_list)

    update_expr_list  go to state 290


State 285

   71 join_list: INNER_JOIN ID join_equal join_list •

    $default  reduce using rule 71 (join_list)


State 286

  143 order_list: COMMA rel_attr asc_or_desc • order_list

    COMMA  shift, and go to state 267

    $default  reduce using rule 142 (order_list)

    order_list  go to state 291


State 287

  131 attr_list: COMMA rel_attr attr_list •

    $default  reduce using rule 131 (attr_list)


State 288

   53 insert_list: COMMA LBRACE value • value_list RBRACE insert_list

    COMMA  shift, and go to state 239

    $default  reduce using rule 54 (value_list)

    value_list  go to state 292


State 289

   66 update_expr_list: COMMA ID EQ LBRACE select_stmt • RBRACE update_expr_list

    RBRACE  shift, and go to state 293


State 290

   67 update_expr_list: COMMA ID EQ value update_expr_list •

    $default  reduce using rule 67 (update_expr_list)


State 291

  143 order_list: COMMA rel_attr asc_or_desc order_list •

    $default  reduce using rule 143 (order_list)


State 292

   53 insert_list: COMMA LBRACE value value_list • RBRACE insert_list

    RBRACE  shift, and go to state 294


State 293

   66 update_expr_list: COMMA ID EQ LBRACE select_stmt RBRACE • update_expr_list

    COMMA  shift, and go to state 242

    $default  reduce using rule 65 (update_expr_list)

    update_expr_list  go to state 295


State 294

   53 insert_list: COMMA LBRACE value value_list RBRACE • insert_list

    COMMA  shift, and go to state 273

    $default  reduce using rule 52 (insert_list)

    insert_list  go to state 296


State 295

   66 update_expr_list: COMMA ID EQ LBRACE select_stmt RBRACE update_expr_list •

    $default  reduce using rule 66 (update_expr_list)


State 296

   53 insert_list: COMMA LBRACE value value_list RBRACE insert_list •

    $default  reduce using rule 53 (insert_list)
