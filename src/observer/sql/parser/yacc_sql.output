Grammar

    0 $accept: commands $end

    1 commands: command_wrapper opt_semicolon

    2 command_wrapper: calc_stmt
    3                | select_stmt
    4                | insert_stmt
    5                | update_stmt
    6                | delete_stmt
    7                | create_table_stmt
    8                | drop_table_stmt
    9                | show_tables_stmt
   10                | show_index_stmt
   11                | desc_table_stmt
   12                | create_index_stmt
   13                | drop_index_stmt
   14                | sync_stmt
   15                | begin_stmt
   16                | commit_stmt
   17                | rollback_stmt
   18                | load_data_stmt
   19                | explain_stmt
   20                | set_variable_stmt
   21                | help_stmt
   22                | exit_stmt

   23 exit_stmt: EXIT

   24 help_stmt: HELP

   25 sync_stmt: SYNC

   26 begin_stmt: TRX_BEGIN

   27 commit_stmt: TRX_COMMIT

   28 rollback_stmt: TRX_ROLLBACK

   29 drop_table_stmt: DROP TABLE ID

   30 show_tables_stmt: SHOW TABLES

   31 show_index_stmt: SHOW INDEX FROM ID

   32 desc_table_stmt: DESC ID

   33 unique_marker: ε
   34              | UNIQUE

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID rel_list RBRACE

   36 drop_index_stmt: DROP INDEX ID ON ID

   37 nullable_marker: ε
   38                | UNNULLABLE
   39                | NULL_T

   40 as_marker: ε
   41          | AS

   42 create_table_stmt: CREATE TABLE ID as_marker select_stmt
   43                  | CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE as_marker select_stmt
   44                  | CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE

   45 attr_def_list: ε
   46              | COMMA attr_def attr_def_list

   47 attr_def: ID type LBRACE number RBRACE nullable_marker
   48         | ID type nullable_marker

   49 number: NUMBER

   50 type: INT_T
   51     | STRING_T
   52     | TEXT_T
   53     | FLOAT_T
   54     | DATE_T

   55 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

   56 insert_list: ε
   57            | COMMA LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

   58 value_list_with_MINUS: ε
   59                      | COMMA value_with_MINUS value_list_with_MINUS

   60 value_with_MINUS: NULL_T
   61                 | NUMBER
   62                 | '-' NUMBER
   63                 | FLOAT
   64                 | DATE
   65                 | SSS

   66 value: NULL_T
   67      | NUMBER
   68      | FLOAT
   69      | DATE
   70      | SSS

   71 delete_stmt: DELETE FROM ID where

   72 update_stmt: UPDATE ID SET update_expr where

   73 update_expr: ID EQ LBRACE select_stmt RBRACE update_expr_list
   74            | ID EQ value update_expr_list

<<<<<<< HEAD
   75 update_expr_list: ε
   76                 | COMMA ID EQ LBRACE select_stmt RBRACE update_expr_list
   77                 | COMMA ID EQ value update_expr_list

   78 select_stmt: SELECT select_attr FROM ID rel_list where order group_by having
   79            | SELECT select_attr FROM join where order group_by having

   80 join: ID INNER_JOIN ID join_equal join_list

   81 join_list: INNER_JOIN ID join_equal join_list
   82          | ε

   83 join_equal: ε
   84           | ON a_expr

   85 calc_stmt: CALC expression_list

   86 expression_list: expression
   87                | expression COMMA expression_list

   88 expression: expression '+' expression
   89           | expression '-' expression
   90           | expression '*' expression
   91           | expression '/' expression
   92           | LBRACE expression RBRACE
   93           | value
   94           | '-' expression

   95 a_expr: value
   96       | rel_attr
   97       | select_stmt_with_paren
   98       | c_expr
   99       | '-' a_expr
  100       | '+' a_expr
  101       | a_expr '+' a_expr
  102       | a_expr '-' a_expr
  103       | a_expr '*' a_expr
  104       | a_expr '/' a_expr
  105       | a_expr AND a_expr
  106       | a_expr OR a_expr
  107       | a_expr EQ a_expr
  108       | a_expr LT a_expr
  109       | a_expr GT a_expr
  110       | a_expr LE a_expr
  111       | a_expr GE a_expr
  112       | a_expr NE a_expr
  113       | a_expr LIKE a_expr
  114       | a_expr NOT_LIKE a_expr
  115       | a_expr IS_NOT a_expr
  116       | a_expr IS a_expr
  117       | a_expr NOT_IN a_expr
  118       | a_expr IN a_expr
  119       | EXISTS LBRACE select_stmt RBRACE
  120       | NOT_EXISTS LBRACE select_stmt RBRACE

  121 c_expr: LBRACE a_expr RBRACE
  122       | function
  123       | value_list_LALR

  124 value_list_LALR: LBRACE value_list_LA RBRACE

  125 select_stmt_with_paren: LBRACE select_stmt RBRACE

  126 value_list_LA: value_list_LA COMMA value
  127              | value COMMA value

  128 select_attr: '*' a_expr_list
  129            | a_expr a_expr_list

  130 function: func_LA a_expr RBRACE
  131         | func_LA '*' RBRACE

  132 func_LA: func_name LBRACE

  133 func_name: AGG_MAX
  134          | AGG_MIN
  135          | AGG_COUNT
  136          | AGG_AVG
  137          | AGG_SUM

  138 rel_attr: ID
  139         | ID DOT ID

  140 attr_list: ε
  141          | COMMA rel_attr attr_list

  142 a_expr_list: ε
  143            | COMMA a_expr a_expr_list

  144 rel_list: ε
  145         | COMMA ID rel_list

  146 group_by: ε
  147         | GROUP_BY rel_attr attr_list

  148 having: ε
  149       | HAVING a_expr

  150 order: ε
  151      | ORDER_BY rel_attr asc_or_desc order_list

  152 order_list: ε
  153           | COMMA rel_attr asc_or_desc order_list

  154 asc_or_desc: ε
  155            | ASC
  156            | DESC

  157 where: ε
  158      | WHERE a_expr

  159 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE ID

  160 explain_stmt: EXPLAIN command_wrapper

  161 set_variable_stmt: SET ID EQ value

  162 opt_semicolon: ε
  163              | SEMICOLON
=======
   74 alias: ε
   75      | AS ID

   76 select_stmt: SELECT select_attr FROM ID alias rel_list_with_alias where order group_by having
   77            | SELECT select_attr FROM join where order group_by having

   78 join: ID alias INNER_JOIN ID alias join_equal join_list

   79 join_list: INNER_JOIN ID alias join_equal join_list
   80          | ε

   81 join_equal: ε
   82           | ON a_expr

   83 calc_stmt: CALC expression_list

   84 expression_list: expression
   85                | expression COMMA expression_list

   86 expression: expression '+' expression
   87           | expression '-' expression
   88           | expression '*' expression
   89           | expression '/' expression
   90           | LBRACE expression RBRACE
   91           | value
   92           | '-' expression

   93 a_expr: value
   94       | rel_attr
   95       | select_stmt_with_paren
   96       | c_expr
   97       | '-' a_expr
   98       | '+' a_expr
   99       | a_expr '+' a_expr
  100       | a_expr '-' a_expr
  101       | a_expr '*' a_expr
  102       | a_expr '/' a_expr
  103       | a_expr AND a_expr
  104       | a_expr OR a_expr
  105       | a_expr EQ a_expr
  106       | a_expr LT a_expr
  107       | a_expr GT a_expr
  108       | a_expr LE a_expr
  109       | a_expr GE a_expr
  110       | a_expr NE a_expr
  111       | a_expr LIKE a_expr
  112       | a_expr NOT_LIKE a_expr
  113       | a_expr IS_NOT a_expr
  114       | a_expr IS a_expr
  115       | a_expr NOT_IN a_expr
  116       | a_expr IN a_expr
  117       | EXISTS LBRACE select_stmt RBRACE
  118       | NOT_EXISTS LBRACE select_stmt RBRACE

  119 c_expr: LBRACE a_expr RBRACE alias
  120       | function
  121       | value_list_LALR

  122 value_list_LALR: LBRACE value_list_LA RBRACE

  123 select_stmt_with_paren: LBRACE select_stmt RBRACE

  124 value_list_LA: value_list_LA COMMA value
  125              | value COMMA value

  126 select_attr: '*' a_expr_list
  127            | a_expr a_expr_list

  128 function: func_LA a_expr RBRACE
  129         | func_LA '*' RBRACE
  130         | func_LA rel_attr COMMA value_with_MINUS RBRACE

  131 func_LA: func_name LBRACE

  132 func_name: AGG_MAX
  133          | AGG_MIN
  134          | AGG_COUNT
  135          | AGG_AVG
  136          | AGG_SUM
  137          | FUNC_LENGTH
  138          | FUNC_ROUND
  139          | FUNC_DATE

  140 rel_attr: ID
  141         | ID DOT ID

  142 attr_list: ε
  143          | COMMA rel_attr attr_list

  144 a_expr_list: ε
  145            | COMMA a_expr a_expr_list

  146 rel_list_with_alias: ε
  147                    | COMMA ID alias rel_list_with_alias

  148 rel_list: ε
  149         | COMMA ID rel_list

  150 group_by: ε
  151         | GROUP_BY rel_attr attr_list

  152 having: ε
  153       | HAVING a_expr

  154 order: ε
  155      | ORDER_BY rel_attr asc_or_desc order_list

  156 order_list: ε
  157           | COMMA rel_attr asc_or_desc order_list

  158 asc_or_desc: ε
  159            | ASC
  160            | DESC

  161 where: ε
  162      | WHERE a_expr

  163 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE ID

  164 explain_stmt: EXPLAIN command_wrapper

  165 set_variable_stmt: SET ID EQ value

  166 opt_semicolon: ε
  167              | SEMICOLON
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


Terminals, with rules where they appear

    $end (0) 0
<<<<<<< HEAD
    '*' (42) 90 103 128 131
    '+' (43) 88 100 101
    '-' (45) 62 89 94 99 102
    '/' (47) 91 104
    error (256)
    SEMICOLON (258) 163
    AS (259) 41
    CREATE (260) 35 42 43 44
    DROP (261) 29 36
    TABLE (262) 29 42 43 44 159
    TABLES (263) 30
    INDEX (264) 31 35 36
    CALC (265) 85
    SELECT (266) 78 79
    DESC (267) 32 156
    ASC (268) 155
    AGG_MAX (269) 133
    AGG_MIN (270) 134
    AGG_COUNT (271) 135
    AGG_AVG (272) 136
    AGG_SUM (273) 137
    GROUP_BY (274) 147
    UNNULLABLE (275) 38
    SHOW (276) 30 31
    SYNC (277) 25
    INSERT (278) 55
    UNIQUE (279) 34
    DELETE (280) 71
    UPDATE (281) 72
    LBRACE (282) 35 43 44 47 55 57 73 76 92 119 120 121 124 125 132
    RBRACE (283) 35 43 44 47 55 57 73 76 92 119 120 121 124 125 130 131
    COMMA (284) 46 57 59 76 77 87 126 127 141 143 145 153
    TRX_BEGIN (285) 26
    TRX_COMMIT (286) 27
    TRX_ROLLBACK (287) 28
    INT_T (288) 50
    STRING_T (289) 51
    FLOAT_T (290) 53
    DATE_T (291) 54
    NULL_T (292) 39 60 66
    TEXT_T (293) 52
    HELP (294) 24
    EXIT (295) 23
    DOT (296) 139
    INTO (297) 55 159
    VALUES (298) 55
    FROM (299) 31 71 78 79
    WHERE (300) 158
    OR (301) 106
    HAVING (302) 149
    AND (303) 105
    SET (304) 72 161
    ON (305) 35 36 84
    LOAD (306) 159
    DATA (307) 159
    INFILE (308) 159
    EXPLAIN (309) 160
    EQ (310) 73 74 76 77 107 161
    LT (311) 108
    GT (312) 109
    LE (313) 110
    GE (314) 111
    NE (315) 112
    LIKE (316) 113
    NOT_LIKE (317) 114
    IS (318) 116
    IS_NOT (319) 115
    INNER_JOIN (320) 80 81
    NOT_IN (321) 117
    IN (322) 118
    NOT_EXISTS (323) 120
    EXISTS (324) 119
    ORDER_BY (325) 151
    NUMBER <number> (326) 49 61 62 67
    FLOAT <floats> (327) 63 68
    DATE <dates> (328) 64 69
    ID <string> (329) 29 31 32 35 36 42 43 44 47 48 55 71 72 73 74 76 77 78 80 81 138 139 145 159 161
    SSS <string> (330) 65 70 159
    UMINUS (331)
=======
    '*' (42) 88 101 126 129
    '+' (43) 86 98 99
    '-' (45) 58 87 92 97 100
    '/' (47) 89 102
    error (256)
    SEMICOLON (258) 167
    AS (259) 75
    CREATE (260) 35 40
    DROP (261) 29 36
    TABLE (262) 29 40 163
    TABLES (263) 30
    INDEX (264) 31 35 36
    CALC (265) 83
    SELECT (266) 76 77
    DESC (267) 32 160
    ASC (268) 159
    AGG_MAX (269) 132
    AGG_MIN (270) 133
    AGG_COUNT (271) 134
    AGG_AVG (272) 135
    AGG_SUM (273) 136
    FUNC_LENGTH (274) 137
    FUNC_DATE (275) 139
    FUNC_ROUND (276) 138
    GROUP_BY (277) 151
    NULLABLE (278)
    UNNULLABLE (279) 38
    SHOW (280) 30 31
    SYNC (281) 25
    INSERT (282) 51
    UNIQUE (283) 34
    DELETE (284) 67
    UPDATE (285) 68
    LBRACE (286) 35 40 43 51 53 69 72 90 117 118 119 122 123 131
    RBRACE (287) 35 40 43 51 53 69 72 90 117 118 119 122 123 128 129 130
    COMMA (288) 42 53 55 72 73 85 124 125 130 143 145 147 149 157
    TRX_BEGIN (289) 26
    TRX_COMMIT (290) 27
    TRX_ROLLBACK (291) 28
    INT_T (292) 46
    STRING_T (293) 47
    FLOAT_T (294) 49
    DATE_T (295) 50
    NULL_T (296) 39 56 62
    TEXT_T (297) 48
    HELP (298) 24
    EXIT (299) 23
    DOT (300) 141
    INTO (301) 51 163
    VALUES (302) 51
    FROM (303) 31 67 76 77
    WHERE (304) 162
    OR (305) 104
    HAVING (306) 153
    AND (307) 103
    SET (308) 68 165
    ON (309) 35 36 82
    LOAD (310) 163
    DATA (311) 163
    INFILE (312) 163
    EXPLAIN (313) 164
    EQ (314) 69 70 72 73 105 165
    LT (315) 106
    GT (316) 107
    LE (317) 108
    GE (318) 109
    NE (319) 110
    LIKE (320) 111
    NOT_LIKE (321) 112
    IS (322) 114
    IS_NOT (323) 113
    INNER_JOIN (324) 78 79
    NOT_IN (325) 115
    IN (326) 116
    NOT_EXISTS (327) 118
    EXISTS (328) 117
    ORDER_BY (329) 155
    NUMBER <number> (330) 45 57 58 63
    FLOAT <floats> (331) 59 64
    DATE <dates> (332) 60 65
    ID <string> (333) 29 31 32 35 36 40 43 44 51 67 68 69 70 72 73 75 76 78 79 140 141 147 149 163 165
    SSS <string> (334) 61 66 163
    UMINUS (335)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


Nonterminals, with rules where they appear

    $accept (85)
        on left: 0
    commands <sql_node> (86)
        on left: 1
        on right: 0
    command_wrapper <sql_node> (87)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
<<<<<<< HEAD
        on right: 1 160
    exit_stmt <sql_node> (84)
=======
        on right: 1 164
    exit_stmt <sql_node> (88)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273
        on left: 23
        on right: 22
    help_stmt <sql_node> (89)
        on left: 24
        on right: 21
    sync_stmt <sql_node> (90)
        on left: 25
        on right: 14
    begin_stmt <sql_node> (91)
        on left: 26
        on right: 15
    commit_stmt <sql_node> (92)
        on left: 27
        on right: 16
    rollback_stmt <sql_node> (93)
        on left: 28
        on right: 17
    drop_table_stmt <sql_node> (94)
        on left: 29
        on right: 8
    show_tables_stmt <sql_node> (95)
        on left: 30
        on right: 9
    show_index_stmt <sql_node> (96)
        on left: 31
        on right: 10
    desc_table_stmt <sql_node> (97)
        on left: 32
        on right: 11
    unique_marker <boolean> (98)
        on left: 33 34
        on right: 35
    create_index_stmt <sql_node> (99)
        on left: 35
        on right: 12
    drop_index_stmt <sql_node> (100)
        on left: 36
        on right: 13
    nullable_marker <boolean> (101)
        on left: 37 38 39
<<<<<<< HEAD
        on right: 47 48
    as_marker <boolean> (98)
        on left: 40 41
        on right: 42 43
    create_table_stmt <sql_node> (99)
        on left: 42 43 44
        on right: 7
    attr_def_list <attr_infos> (100)
        on left: 45 46
        on right: 43 44 46
    attr_def <attr_info> (101)
        on left: 47 48
        on right: 43 44 46
    number <number> (102)
        on left: 49
        on right: 47
    type <number> (103)
        on left: 50 51 52 53 54
        on right: 47 48
    insert_stmt <sql_node> (104)
        on left: 55
        on right: 4
    insert_list <insert_list> (105)
        on left: 56 57
        on right: 55 57
    value_list_with_MINUS <value_list> (106)
        on left: 58 59
        on right: 55 57 59
    value_with_MINUS <value> (107)
        on left: 60 61 62 63 64 65
        on right: 55 57 59
    value <value> (108)
        on left: 66 67 68 69 70
        on right: 74 77 93 95 126 127 161
    delete_stmt <sql_node> (109)
        on left: 71
        on right: 6
    update_stmt <sql_node> (110)
        on left: 72
        on right: 5
    update_expr <update_expr> (111)
        on left: 73 74
        on right: 72
    update_expr_list <update_expr> (112)
        on left: 75 76 77
        on right: 73 74 76 77
    select_stmt <sql_node> (113)
        on left: 78 79
        on right: 3 42 43 73 76 119 120 125
    join <join_list> (114)
        on left: 80
        on right: 79
    join_list <join_list> (115)
        on left: 81 82
        on right: 80 81
    join_equal <a_expr> (116)
        on left: 83 84
        on right: 80 81
    calc_stmt <sql_node> (117)
        on left: 85
        on right: 2
    expression_list <expression_list> (118)
        on left: 86 87
        on right: 85 87
    expression <expression> (119)
        on left: 88 89 90 91 92 93 94
        on right: 86 87 88 89 90 91 92 94
    a_expr <a_expr> (120)
        on left: 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
        on right: 84 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 121 129 130 143 149 158
    c_expr <a_expr> (121)
        on left: 121 122 123
        on right: 98
    value_list_LALR <a_expr> (122)
        on left: 124
        on right: 123
    select_stmt_with_paren <a_expr> (123)
        on left: 125
        on right: 97
    value_list_LA <value_list> (124)
        on left: 126 127
        on right: 124 126
    select_attr <a_expr_list> (125)
        on left: 128 129
        on right: 78 79
    function <a_expr> (126)
        on left: 130 131
        on right: 122
    func_LA <func_name> (127)
        on left: 132
        on right: 130 131
    func_name <func_name> (128)
        on left: 133 134 135 136 137
        on right: 132
    rel_attr <rel_attr> (129)
        on left: 138 139
        on right: 96 141 147 151 153
    attr_list <rel_attr_list> (130)
        on left: 140 141
        on right: 141 147
    a_expr_list <a_expr_list> (131)
        on left: 142 143
        on right: 128 129 143
    rel_list <relation_list> (132)
        on left: 144 145
        on right: 35 78 145
    group_by <rel_attr_list> (133)
        on left: 146 147
        on right: 78 79
    having <a_expr> (134)
        on left: 148 149
        on right: 78 79
    order <order_by_list> (135)
        on left: 150 151
        on right: 78 79
    order_list <order_by_list> (136)
        on left: 152 153
        on right: 151 153
    asc_or_desc <boolean> (137)
        on left: 154 155 156
        on right: 151 153
    where <a_expr> (138)
        on left: 157 158
        on right: 71 72 78 79
    load_data_stmt <sql_node> (139)
        on left: 159
        on right: 18
    explain_stmt <sql_node> (140)
        on left: 160
        on right: 19
    set_variable_stmt <sql_node> (141)
        on left: 161
        on right: 20
    opt_semicolon (142)
        on left: 162 163
=======
        on right: 43 44
    create_table_stmt <sql_node> (102)
        on left: 40
        on right: 7
    attr_def_list <attr_infos> (103)
        on left: 41 42
        on right: 40 42
    attr_def <attr_info> (104)
        on left: 43 44
        on right: 40 42
    number <number> (105)
        on left: 45
        on right: 43
    type <number> (106)
        on left: 46 47 48 49 50
        on right: 43 44
    insert_stmt <sql_node> (107)
        on left: 51
        on right: 4
    insert_list <insert_list> (108)
        on left: 52 53
        on right: 51 53
    value_list_with_MINUS <value_list> (109)
        on left: 54 55
        on right: 51 53 55
    value_with_MINUS <value> (110)
        on left: 56 57 58 59 60 61
        on right: 51 53 55 130
    value <value> (111)
        on left: 62 63 64 65 66
        on right: 70 73 91 93 124 125 165
    delete_stmt <sql_node> (112)
        on left: 67
        on right: 6
    update_stmt <sql_node> (113)
        on left: 68
        on right: 5
    update_expr <update_expr> (114)
        on left: 69 70
        on right: 68
    update_expr_list <update_expr> (115)
        on left: 71 72 73
        on right: 69 70 72 73
    alias <string> (116)
        on left: 74 75
        on right: 76 78 79 119 147
    select_stmt <sql_node> (117)
        on left: 76 77
        on right: 3 69 72 117 118 123
    join <join_list> (118)
        on left: 78
        on right: 77
    join_list <join_list> (119)
        on left: 79 80
        on right: 78 79
    join_equal <a_expr> (120)
        on left: 81 82
        on right: 78 79
    calc_stmt <sql_node> (121)
        on left: 83
        on right: 2
    expression_list <expression_list> (122)
        on left: 84 85
        on right: 83 85
    expression <expression> (123)
        on left: 86 87 88 89 90 91 92
        on right: 84 85 86 87 88 89 90 92
    a_expr <a_expr> (124)
        on left: 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118
        on right: 82 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 119 127 128 145 153 162
    c_expr <a_expr> (125)
        on left: 119 120 121
        on right: 96
    value_list_LALR <a_expr> (126)
        on left: 122
        on right: 121
    select_stmt_with_paren <a_expr> (127)
        on left: 123
        on right: 95
    value_list_LA <value_list> (128)
        on left: 124 125
        on right: 122 124
    select_attr <a_expr_list> (129)
        on left: 126 127
        on right: 76 77
    function <a_expr> (130)
        on left: 128 129 130
        on right: 120
    func_LA <func_name> (131)
        on left: 131
        on right: 128 129 130
    func_name <func_name> (132)
        on left: 132 133 134 135 136 137 138 139
        on right: 131
    rel_attr <rel_attr> (133)
        on left: 140 141
        on right: 94 130 143 151 155 157
    attr_list <rel_attr_list> (134)
        on left: 142 143
        on right: 143 151
    a_expr_list <a_expr_list> (135)
        on left: 144 145
        on right: 126 127 145
    rel_list_with_alias <relation_to_alias> (136)
        on left: 146 147
        on right: 76 147
    rel_list <relation_list> (137)
        on left: 148 149
        on right: 35 149
    group_by <rel_attr_list> (138)
        on left: 150 151
        on right: 76 77
    having <a_expr> (139)
        on left: 152 153
        on right: 76 77
    order <order_by_list> (140)
        on left: 154 155
        on right: 76 77
    order_list <order_by_list> (141)
        on left: 156 157
        on right: 155 157
    asc_or_desc <boolean> (142)
        on left: 158 159 160
        on right: 155 157
    where <a_expr> (143)
        on left: 161 162
        on right: 67 68 76 77
    load_data_stmt <sql_node> (144)
        on left: 163
        on right: 18
    explain_stmt <sql_node> (145)
        on left: 164
        on right: 19
    set_variable_stmt <sql_node> (146)
        on left: 165
        on right: 20
    opt_semicolon (147)
        on left: 166 167
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273
        on right: 1


State 0

    0 $accept: • commands $end

    CREATE        shift, and go to state 1
    DROP          shift, and go to state 2
    CALC          shift, and go to state 3
    SELECT        shift, and go to state 4
    DESC          shift, and go to state 5
    SHOW          shift, and go to state 6
    SYNC          shift, and go to state 7
    INSERT        shift, and go to state 8
    DELETE        shift, and go to state 9
    UPDATE        shift, and go to state 10
    TRX_BEGIN     shift, and go to state 11
    TRX_COMMIT    shift, and go to state 12
    TRX_ROLLBACK  shift, and go to state 13
    HELP          shift, and go to state 14
    EXIT          shift, and go to state 15
    SET           shift, and go to state 16
    LOAD          shift, and go to state 17
    EXPLAIN       shift, and go to state 18

    commands           go to state 19
    command_wrapper    go to state 20
    exit_stmt          go to state 21
    help_stmt          go to state 22
    sync_stmt          go to state 23
    begin_stmt         go to state 24
    commit_stmt        go to state 25
    rollback_stmt      go to state 26
    drop_table_stmt    go to state 27
    show_tables_stmt   go to state 28
    show_index_stmt    go to state 29
    desc_table_stmt    go to state 30
    create_index_stmt  go to state 31
    drop_index_stmt    go to state 32
    create_table_stmt  go to state 33
    insert_stmt        go to state 34
    delete_stmt        go to state 35
    update_stmt        go to state 36
    select_stmt        go to state 37
    calc_stmt          go to state 38
    load_data_stmt     go to state 39
    explain_stmt       go to state 40
    set_variable_stmt  go to state 41


State 1

   35 create_index_stmt: CREATE • unique_marker INDEX ID ON ID LBRACE ID rel_list RBRACE
   42 create_table_stmt: CREATE • TABLE ID as_marker select_stmt
   43                  | CREATE • TABLE ID LBRACE attr_def attr_def_list RBRACE as_marker select_stmt
   44                  | CREATE • TABLE ID LBRACE attr_def attr_def_list RBRACE

    TABLE   shift, and go to state 42
    UNIQUE  shift, and go to state 43

    $default  reduce using rule 33 (unique_marker)

    unique_marker  go to state 44


State 2

   29 drop_table_stmt: DROP • TABLE ID
   36 drop_index_stmt: DROP • INDEX ID ON ID

    TABLE  shift, and go to state 45
    INDEX  shift, and go to state 46


State 3

<<<<<<< HEAD
   85 calc_stmt: CALC • expression_list
=======
   83 calc_stmt: CALC • expression_list
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value            go to state 54
    expression_list  go to state 55
    expression       go to state 56


State 4

<<<<<<< HEAD
   78 select_stmt: SELECT • select_attr FROM ID rel_list where order group_by having
   79            | SELECT • select_attr FROM join where order group_by having
=======
   76 select_stmt: SELECT • select_attr FROM ID alias rel_list_with_alias where order group_by having
   77            | SELECT • select_attr FROM join where order group_by having
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70
    '*'          shift, and go to state 71

    value                   go to state 72
    a_expr                  go to state 73
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    select_attr             go to state 77
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 5

   32 desc_table_stmt: DESC • ID

    ID  shift, and go to state 82


State 6

   30 show_tables_stmt: SHOW • TABLES
   31 show_index_stmt: SHOW • INDEX FROM ID

    TABLES  shift, and go to state 83
    INDEX   shift, and go to state 84


State 7

   25 sync_stmt: SYNC •

    $default  reduce using rule 25 (sync_stmt)


State 8

   55 insert_stmt: INSERT • INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

    INTO  shift, and go to state 85


State 9

   71 delete_stmt: DELETE • FROM ID where

    FROM  shift, and go to state 86


State 10

   72 update_stmt: UPDATE • ID SET update_expr where

    ID  shift, and go to state 87


State 11

   26 begin_stmt: TRX_BEGIN •

    $default  reduce using rule 26 (begin_stmt)


State 12

   27 commit_stmt: TRX_COMMIT •

    $default  reduce using rule 27 (commit_stmt)


State 13

   28 rollback_stmt: TRX_ROLLBACK •

    $default  reduce using rule 28 (rollback_stmt)


State 14

   24 help_stmt: HELP •

    $default  reduce using rule 24 (help_stmt)


State 15

   23 exit_stmt: EXIT •

    $default  reduce using rule 23 (exit_stmt)


State 16

<<<<<<< HEAD
  161 set_variable_stmt: SET • ID EQ value
=======
  165 set_variable_stmt: SET • ID EQ value
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    ID  shift, and go to state 88


State 17

<<<<<<< HEAD
  159 load_data_stmt: LOAD • DATA INFILE SSS INTO TABLE ID
=======
  163 load_data_stmt: LOAD • DATA INFILE SSS INTO TABLE ID
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    DATA  shift, and go to state 89


State 18

<<<<<<< HEAD
  160 explain_stmt: EXPLAIN • command_wrapper
=======
  164 explain_stmt: EXPLAIN • command_wrapper
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    CREATE        shift, and go to state 1
    DROP          shift, and go to state 2
    CALC          shift, and go to state 3
    SELECT        shift, and go to state 4
    DESC          shift, and go to state 5
    SHOW          shift, and go to state 6
    SYNC          shift, and go to state 7
    INSERT        shift, and go to state 8
    DELETE        shift, and go to state 9
    UPDATE        shift, and go to state 10
    TRX_BEGIN     shift, and go to state 11
    TRX_COMMIT    shift, and go to state 12
    TRX_ROLLBACK  shift, and go to state 13
    HELP          shift, and go to state 14
    EXIT          shift, and go to state 15
    SET           shift, and go to state 16
    LOAD          shift, and go to state 17
    EXPLAIN       shift, and go to state 18

    command_wrapper    go to state 90
    exit_stmt          go to state 21
    help_stmt          go to state 22
    sync_stmt          go to state 23
    begin_stmt         go to state 24
    commit_stmt        go to state 25
    rollback_stmt      go to state 26
    drop_table_stmt    go to state 27
    show_tables_stmt   go to state 28
    show_index_stmt    go to state 29
    desc_table_stmt    go to state 30
    create_index_stmt  go to state 31
    drop_index_stmt    go to state 32
    create_table_stmt  go to state 33
    insert_stmt        go to state 34
    delete_stmt        go to state 35
    update_stmt        go to state 36
    select_stmt        go to state 37
    calc_stmt          go to state 38
    load_data_stmt     go to state 39
    explain_stmt       go to state 40
    set_variable_stmt  go to state 41


State 19

    0 $accept: commands • $end

    $end  shift, and go to state 91


State 20

    1 commands: command_wrapper • opt_semicolon

    SEMICOLON  shift, and go to state 92

<<<<<<< HEAD
    $default  reduce using rule 162 (opt_semicolon)
=======
    $default  reduce using rule 166 (opt_semicolon)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    opt_semicolon  go to state 93


State 21

   22 command_wrapper: exit_stmt •

    $default  reduce using rule 22 (command_wrapper)


State 22

   21 command_wrapper: help_stmt •

    $default  reduce using rule 21 (command_wrapper)


State 23

   14 command_wrapper: sync_stmt •

    $default  reduce using rule 14 (command_wrapper)


State 24

   15 command_wrapper: begin_stmt •

    $default  reduce using rule 15 (command_wrapper)


State 25

   16 command_wrapper: commit_stmt •

    $default  reduce using rule 16 (command_wrapper)


State 26

   17 command_wrapper: rollback_stmt •

    $default  reduce using rule 17 (command_wrapper)


State 27

    8 command_wrapper: drop_table_stmt •

    $default  reduce using rule 8 (command_wrapper)


State 28

    9 command_wrapper: show_tables_stmt •

    $default  reduce using rule 9 (command_wrapper)


State 29

   10 command_wrapper: show_index_stmt •

    $default  reduce using rule 10 (command_wrapper)


State 30

   11 command_wrapper: desc_table_stmt •

    $default  reduce using rule 11 (command_wrapper)


State 31

   12 command_wrapper: create_index_stmt •

    $default  reduce using rule 12 (command_wrapper)


State 32

   13 command_wrapper: drop_index_stmt •

    $default  reduce using rule 13 (command_wrapper)


State 33

    7 command_wrapper: create_table_stmt •

    $default  reduce using rule 7 (command_wrapper)


State 34

    4 command_wrapper: insert_stmt •

    $default  reduce using rule 4 (command_wrapper)


State 35

    6 command_wrapper: delete_stmt •

    $default  reduce using rule 6 (command_wrapper)


State 36

    5 command_wrapper: update_stmt •

    $default  reduce using rule 5 (command_wrapper)


State 37

    3 command_wrapper: select_stmt •

    $default  reduce using rule 3 (command_wrapper)


State 38

    2 command_wrapper: calc_stmt •

    $default  reduce using rule 2 (command_wrapper)


State 39

   18 command_wrapper: load_data_stmt •

    $default  reduce using rule 18 (command_wrapper)


State 40

   19 command_wrapper: explain_stmt •

    $default  reduce using rule 19 (command_wrapper)


State 41

   20 command_wrapper: set_variable_stmt •

    $default  reduce using rule 20 (command_wrapper)


State 42

   42 create_table_stmt: CREATE TABLE • ID as_marker select_stmt
   43                  | CREATE TABLE • ID LBRACE attr_def attr_def_list RBRACE as_marker select_stmt
   44                  | CREATE TABLE • ID LBRACE attr_def attr_def_list RBRACE

    ID  shift, and go to state 94


State 43

   34 unique_marker: UNIQUE •

    $default  reduce using rule 34 (unique_marker)


State 44

   35 create_index_stmt: CREATE unique_marker • INDEX ID ON ID LBRACE ID rel_list RBRACE

    INDEX  shift, and go to state 95


State 45

   29 drop_table_stmt: DROP TABLE • ID

    ID  shift, and go to state 96


State 46

   36 drop_index_stmt: DROP INDEX • ID ON ID

    ID  shift, and go to state 97


State 47

<<<<<<< HEAD
   92 expression: LBRACE • expression RBRACE
=======
   90 expression: LBRACE • expression RBRACE
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 98


State 48

   66 value: NULL_T •

    $default  reduce using rule 66 (value)


State 49

   67 value: NUMBER •

    $default  reduce using rule 67 (value)


State 50

   68 value: FLOAT •

    $default  reduce using rule 68 (value)


State 51

   69 value: DATE •

    $default  reduce using rule 69 (value)


State 52

   70 value: SSS •

    $default  reduce using rule 70 (value)


State 53

<<<<<<< HEAD
   94 expression: '-' • expression
=======
   92 expression: '-' • expression
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 99


State 54

<<<<<<< HEAD
   93 expression: value •

    $default  reduce using rule 93 (expression)
=======
   91 expression: value •

    $default  reduce using rule 91 (expression)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 55

<<<<<<< HEAD
   85 calc_stmt: CALC expression_list •

    $default  reduce using rule 85 (calc_stmt)
=======
   83 calc_stmt: CALC expression_list •

    $default  reduce using rule 83 (calc_stmt)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 56

<<<<<<< HEAD
   86 expression_list: expression •  [$end, SEMICOLON]
   87                | expression • COMMA expression_list
   88 expression: expression • '+' expression
   89           | expression • '-' expression
   90           | expression • '*' expression
   91           | expression • '/' expression
=======
   84 expression_list: expression •  [$end, SEMICOLON]
   85                | expression • COMMA expression_list
   86 expression: expression • '+' expression
   87           | expression • '-' expression
   88           | expression • '*' expression
   89           | expression • '/' expression
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    COMMA  shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    '*'    shift, and go to state 103
    '/'    shift, and go to state 104

<<<<<<< HEAD
    $default  reduce using rule 86 (expression_list)
=======
    $default  reduce using rule 84 (expression_list)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 57

<<<<<<< HEAD
  133 func_name: AGG_MAX •
=======
  132 func_name: AGG_MAX •

    $default  reduce using rule 132 (func_name)


State 58

  133 func_name: AGG_MIN •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 133 (func_name)


<<<<<<< HEAD
State 58

  134 func_name: AGG_MIN •
=======
State 59

  134 func_name: AGG_COUNT •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 134 (func_name)


<<<<<<< HEAD
State 59

  135 func_name: AGG_COUNT •
=======
State 60

  135 func_name: AGG_AVG •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 135 (func_name)


<<<<<<< HEAD
State 60

  136 func_name: AGG_AVG •
=======
State 61

  136 func_name: AGG_SUM •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 136 (func_name)


<<<<<<< HEAD
State 61

  137 func_name: AGG_SUM •

    $default  reduce using rule 137 (func_name)


State 62

  121 c_expr: LBRACE • a_expr RBRACE
  124 value_list_LALR: LBRACE • value_list_LA RBRACE
  125 select_stmt_with_paren: LBRACE • select_stmt RBRACE
=======
State 62

  137 func_name: FUNC_LENGTH •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 137 (func_name)


State 63

<<<<<<< HEAD
  120 a_expr: NOT_EXISTS • LBRACE select_stmt RBRACE
=======
  139 func_name: FUNC_DATE •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 139 (func_name)


State 64

<<<<<<< HEAD
  119 a_expr: EXISTS • LBRACE select_stmt RBRACE
=======
  138 func_name: FUNC_ROUND •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 138 (func_name)


State 65

<<<<<<< HEAD
  138 rel_attr: ID •  [$end, SEMICOLON, DESC, ASC, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  139         | ID • DOT ID
=======
  119 c_expr: LBRACE • a_expr RBRACE alias
  122 value_list_LALR: LBRACE • value_list_LA RBRACE
  123 select_stmt_with_paren: LBRACE • select_stmt RBRACE
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    SELECT       shift, and go to state 4
    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

<<<<<<< HEAD
    $default  reduce using rule 138 (rel_attr)
=======
    value                   go to state 105
    select_stmt             go to state 106
    a_expr                  go to state 107
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    value_list_LA           go to state 108
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 66

<<<<<<< HEAD
  100 a_expr: '+' • a_expr
=======
  118 a_expr: NOT_EXISTS • LBRACE select_stmt RBRACE
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    LBRACE  shift, and go to state 109


State 67

<<<<<<< HEAD
   99 a_expr: '-' • a_expr
=======
  117 a_expr: EXISTS • LBRACE select_stmt RBRACE
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    LBRACE  shift, and go to state 110


State 68

<<<<<<< HEAD
  128 select_attr: '*' • a_expr_list
=======
  140 rel_attr: ID •  [$end, SEMICOLON, DESC, ASC, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  141         | ID • DOT ID
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    DOT  shift, and go to state 111

<<<<<<< HEAD
    $default  reduce using rule 142 (a_expr_list)

    a_expr_list  go to state 112
=======
    $default  reduce using rule 140 (rel_attr)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 69

<<<<<<< HEAD
   95 a_expr: value •

    $default  reduce using rule 95 (a_expr)
=======
   98 a_expr: '+' • a_expr

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 112
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 70

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr
  129 select_attr: a_expr • a_expr_list
=======
   97 a_expr: '-' • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

<<<<<<< HEAD
    $default  reduce using rule 142 (a_expr_list)

    a_expr_list  go to state 131
=======
    value                   go to state 72
    a_expr                  go to state 113
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 71

<<<<<<< HEAD
   98 a_expr: c_expr •

    $default  reduce using rule 98 (a_expr)
=======
  126 select_attr: '*' • a_expr_list

    COMMA  shift, and go to state 114

    $default  reduce using rule 144 (a_expr_list)

    a_expr_list  go to state 115
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 72

<<<<<<< HEAD
  123 c_expr: value_list_LALR •

    $default  reduce using rule 123 (c_expr)


State 73

   97 a_expr: select_stmt_with_paren •
=======
   93 a_expr: value •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 97 (a_expr)


State 73

   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr
  127 select_attr: a_expr • a_expr_list

    COMMA     shift, and go to state 114
    OR        shift, and go to state 116
    AND       shift, and go to state 117
    EQ        shift, and go to state 118
    LT        shift, and go to state 119
    GT        shift, and go to state 120
    LE        shift, and go to state 121
    GE        shift, and go to state 122
    NE        shift, and go to state 123
    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    IS        shift, and go to state 126
    IS_NOT    shift, and go to state 127
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 144 (a_expr_list)

    a_expr_list  go to state 134


State 74

<<<<<<< HEAD
   78 select_stmt: SELECT select_attr • FROM ID rel_list where order group_by having
   79            | SELECT select_attr • FROM join where order group_by having
=======
   96 a_expr: c_expr •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 96 (a_expr)


State 75

<<<<<<< HEAD
  122 c_expr: function •

    $default  reduce using rule 122 (c_expr)
=======
  121 c_expr: value_list_LALR •

    $default  reduce using rule 121 (c_expr)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 76

<<<<<<< HEAD
  130 function: func_LA • a_expr RBRACE
  131         | func_LA • '*' RBRACE
=======
   95 a_expr: select_stmt_with_paren •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 95 (a_expr)


State 77

<<<<<<< HEAD
  132 func_LA: func_name • LBRACE
=======
   76 select_stmt: SELECT select_attr • FROM ID alias rel_list_with_alias where order group_by having
   77            | SELECT select_attr • FROM join where order group_by having
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    FROM  shift, and go to state 135


State 78

<<<<<<< HEAD
   96 a_expr: rel_attr •

    $default  reduce using rule 96 (a_expr)
=======
  120 c_expr: function •

    $default  reduce using rule 120 (c_expr)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 79

  128 function: func_LA • a_expr RBRACE
  129         | func_LA • '*' RBRACE
  130         | func_LA • rel_attr COMMA value_with_MINUS RBRACE

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70
    '*'          shift, and go to state 136

    value                   go to state 72
    a_expr                  go to state 137
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 138


State 80

  131 func_LA: func_name • LBRACE

    LBRACE  shift, and go to state 139


State 81

   94 a_expr: rel_attr •

    $default  reduce using rule 94 (a_expr)


State 82

   32 desc_table_stmt: DESC ID •

    $default  reduce using rule 32 (desc_table_stmt)


State 83

   30 show_tables_stmt: SHOW TABLES •

    $default  reduce using rule 30 (show_tables_stmt)


State 84

   31 show_index_stmt: SHOW INDEX • FROM ID

<<<<<<< HEAD
    FROM  shift, and go to state 136


State 82

   55 insert_stmt: INSERT INTO • ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

    ID  shift, and go to state 137


State 83

   71 delete_stmt: DELETE FROM • ID where

    ID  shift, and go to state 138


State 84

   72 update_stmt: UPDATE ID • SET update_expr where

    SET  shift, and go to state 139
=======
    FROM  shift, and go to state 140
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 85

<<<<<<< HEAD
  161 set_variable_stmt: SET ID • EQ value
=======
   51 insert_stmt: INSERT INTO • ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    ID  shift, and go to state 141


State 86

<<<<<<< HEAD
  159 load_data_stmt: LOAD DATA • INFILE SSS INTO TABLE ID
=======
   67 delete_stmt: DELETE FROM • ID where
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    ID  shift, and go to state 142


State 87

<<<<<<< HEAD
  160 explain_stmt: EXPLAIN command_wrapper •

    $default  reduce using rule 160 (explain_stmt)
=======
   68 update_stmt: UPDATE ID • SET update_expr where

    SET  shift, and go to state 143
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 88

  165 set_variable_stmt: SET ID • EQ value

    EQ  shift, and go to state 144


State 89

  163 load_data_stmt: LOAD DATA • INFILE SSS INTO TABLE ID

    INFILE  shift, and go to state 145


State 90

  164 explain_stmt: EXPLAIN command_wrapper •

    $default  reduce using rule 164 (explain_stmt)


State 91

    0 $accept: commands $end •

    $default  accept


State 92

<<<<<<< HEAD
  163 opt_semicolon: SEMICOLON •

    $default  reduce using rule 163 (opt_semicolon)
=======
  167 opt_semicolon: SEMICOLON •

    $default  reduce using rule 167 (opt_semicolon)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 93

    1 commands: command_wrapper opt_semicolon •

    $default  reduce using rule 1 (commands)


State 94

   42 create_table_stmt: CREATE TABLE ID • as_marker select_stmt
   43                  | CREATE TABLE ID • LBRACE attr_def attr_def_list RBRACE as_marker select_stmt
   44                  | CREATE TABLE ID • LBRACE attr_def attr_def_list RBRACE

<<<<<<< HEAD
    AS      shift, and go to state 142
    LBRACE  shift, and go to state 143

    $default  reduce using rule 40 (as_marker)

    as_marker  go to state 144
=======
    LBRACE  shift, and go to state 146
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 95

   35 create_index_stmt: CREATE unique_marker INDEX • ID ON ID LBRACE ID rel_list RBRACE

<<<<<<< HEAD
    ID  shift, and go to state 145
=======
    ID  shift, and go to state 147
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 96

   29 drop_table_stmt: DROP TABLE ID •

    $default  reduce using rule 29 (drop_table_stmt)


State 97

   36 drop_index_stmt: DROP INDEX ID • ON ID

<<<<<<< HEAD
    ON  shift, and go to state 146
=======
    ON  shift, and go to state 148
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 98

<<<<<<< HEAD
   88 expression: expression • '+' expression
   89           | expression • '-' expression
   90           | expression • '*' expression
   91           | expression • '/' expression
   92           | LBRACE expression • RBRACE

    RBRACE  shift, and go to state 147
    '+'     shift, and go to state 98
    '-'     shift, and go to state 99
    '*'     shift, and go to state 100
    '/'     shift, and go to state 101
=======
   86 expression: expression • '+' expression
   87           | expression • '-' expression
   88           | expression • '*' expression
   89           | expression • '/' expression
   90           | LBRACE expression • RBRACE

    RBRACE  shift, and go to state 149
    '+'     shift, and go to state 101
    '-'     shift, and go to state 102
    '*'     shift, and go to state 103
    '/'     shift, and go to state 104
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 99

<<<<<<< HEAD
   88 expression: expression • '+' expression
   89           | expression • '-' expression
   90           | expression • '*' expression
   91           | expression • '/' expression
   94           | '-' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']

    $default  reduce using rule 94 (expression)

    Conflict between rule 94 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 94 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 94 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 94 and token '/' resolved as reduce ('/' < UMINUS).
=======
   86 expression: expression • '+' expression
   87           | expression • '-' expression
   88           | expression • '*' expression
   89           | expression • '/' expression
   92           | '-' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']

    $default  reduce using rule 92 (expression)

    Conflict between rule 92 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 92 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 92 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 92 and token '/' resolved as reduce ('/' < UMINUS).
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 100

<<<<<<< HEAD
   87 expression_list: expression COMMA • expression_list
=======
   85 expression_list: expression COMMA • expression_list
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value            go to state 54
<<<<<<< HEAD
    expression_list  go to state 148
    expression       go to state 56


State 98

   88 expression: expression '+' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 149


State 99

   89 expression: expression '-' • expression
=======
    expression_list  go to state 150
    expression       go to state 56


State 101

   86 expression: expression '+' • expression
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 151


State 100

   90 expression: expression '*' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 151


State 101

   91 expression: expression '/' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 152


State 102

<<<<<<< HEAD
   95 a_expr: value •  [RBRACE, OR, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, NOT_IN, IN, '+', '-', '*', '/']
  127 value_list_LA: value • COMMA value

    COMMA  shift, and go to state 153

    $default  reduce using rule 95 (a_expr)
=======
   87 expression: expression '-' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 152
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 103

<<<<<<< HEAD
  125 select_stmt_with_paren: LBRACE select_stmt • RBRACE

    RBRACE  shift, and go to state 154
=======
   88 expression: expression '*' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 153
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 104

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr
  121 c_expr: LBRACE a_expr • RBRACE

    RBRACE    shift, and go to state 155
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130
=======
   89 expression: expression '/' • expression

    LBRACE  shift, and go to state 47
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52
    '-'     shift, and go to state 53

    value       go to state 54
    expression  go to state 154
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 105

<<<<<<< HEAD
  124 value_list_LALR: LBRACE value_list_LA • RBRACE
  126 value_list_LA: value_list_LA • COMMA value

    RBRACE  shift, and go to state 156
    COMMA   shift, and go to state 157
=======
   93 a_expr: value •  [RBRACE, OR, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, NOT_IN, IN, '+', '-', '*', '/']
  125 value_list_LA: value • COMMA value

    COMMA  shift, and go to state 155

    $default  reduce using rule 93 (a_expr)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 106

<<<<<<< HEAD
  120 a_expr: NOT_EXISTS LBRACE • select_stmt RBRACE

    SELECT  shift, and go to state 4

    select_stmt  go to state 158
=======
  123 select_stmt_with_paren: LBRACE select_stmt • RBRACE

    RBRACE  shift, and go to state 156
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 107

<<<<<<< HEAD
  119 a_expr: EXISTS LBRACE • select_stmt RBRACE

    SELECT  shift, and go to state 4

    select_stmt  go to state 159
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr
  119 c_expr: LBRACE a_expr • RBRACE alias

    RBRACE    shift, and go to state 157
    OR        shift, and go to state 116
    AND       shift, and go to state 117
    EQ        shift, and go to state 118
    LT        shift, and go to state 119
    GT        shift, and go to state 120
    LE        shift, and go to state 121
    GE        shift, and go to state 122
    NE        shift, and go to state 123
    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    IS        shift, and go to state 126
    IS_NOT    shift, and go to state 127
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 108

<<<<<<< HEAD
  139 rel_attr: ID DOT • ID

    ID  shift, and go to state 160
=======
  122 value_list_LALR: LBRACE value_list_LA • RBRACE
  124 value_list_LA: value_list_LA • COMMA value

    RBRACE  shift, and go to state 158
    COMMA   shift, and go to state 159
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 109

<<<<<<< HEAD
  100 a_expr: '+' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  101       | a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    $default  reduce using rule 100 (a_expr)

    Conflict between rule 100 and token OR resolved as reduce (OR < UMINUS).
    Conflict between rule 100 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 100 and token EQ resolved as reduce (EQ < UMINUS).
    Conflict between rule 100 and token LT resolved as reduce (LT < UMINUS).
    Conflict between rule 100 and token GT resolved as reduce (GT < UMINUS).
    Conflict between rule 100 and token LE resolved as reduce (LE < UMINUS).
    Conflict between rule 100 and token GE resolved as reduce (GE < UMINUS).
    Conflict between rule 100 and token NE resolved as reduce (NE < UMINUS).
    Conflict between rule 100 and token LIKE resolved as reduce (LIKE < UMINUS).
    Conflict between rule 100 and token NOT_LIKE resolved as reduce (NOT_LIKE < UMINUS).
    Conflict between rule 100 and token IS resolved as reduce (IS < UMINUS).
    Conflict between rule 100 and token IS_NOT resolved as reduce (IS_NOT < UMINUS).
    Conflict between rule 100 and token NOT_IN resolved as reduce (NOT_IN < UMINUS).
    Conflict between rule 100 and token IN resolved as reduce (IN < UMINUS).
    Conflict between rule 100 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 100 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 100 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 100 and token '/' resolved as reduce ('/' < UMINUS).
=======
  118 a_expr: NOT_EXISTS LBRACE • select_stmt RBRACE

    SELECT  shift, and go to state 4

    select_stmt  go to state 160
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 110

<<<<<<< HEAD
   99 a_expr: '-' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  101       | a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    $default  reduce using rule 99 (a_expr)

    Conflict between rule 99 and token OR resolved as reduce (OR < UMINUS).
    Conflict between rule 99 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 99 and token EQ resolved as reduce (EQ < UMINUS).
    Conflict between rule 99 and token LT resolved as reduce (LT < UMINUS).
    Conflict between rule 99 and token GT resolved as reduce (GT < UMINUS).
    Conflict between rule 99 and token LE resolved as reduce (LE < UMINUS).
    Conflict between rule 99 and token GE resolved as reduce (GE < UMINUS).
    Conflict between rule 99 and token NE resolved as reduce (NE < UMINUS).
    Conflict between rule 99 and token LIKE resolved as reduce (LIKE < UMINUS).
    Conflict between rule 99 and token NOT_LIKE resolved as reduce (NOT_LIKE < UMINUS).
    Conflict between rule 99 and token IS resolved as reduce (IS < UMINUS).
    Conflict between rule 99 and token IS_NOT resolved as reduce (IS_NOT < UMINUS).
    Conflict between rule 99 and token NOT_IN resolved as reduce (NOT_IN < UMINUS).
    Conflict between rule 99 and token IN resolved as reduce (IN < UMINUS).
    Conflict between rule 99 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 99 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 99 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 99 and token '/' resolved as reduce ('/' < UMINUS).
=======
  117 a_expr: EXISTS LBRACE • select_stmt RBRACE

    SELECT  shift, and go to state 4

    select_stmt  go to state 161
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 111

<<<<<<< HEAD
  143 a_expr_list: COMMA • a_expr a_expr_list
=======
  141 rel_attr: ID DOT • ID

    ID  shift, and go to state 162


State 112

   98 a_expr: '+' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
   99       | a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    $default  reduce using rule 98 (a_expr)

    Conflict between rule 98 and token OR resolved as reduce (OR < UMINUS).
    Conflict between rule 98 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 98 and token EQ resolved as reduce (EQ < UMINUS).
    Conflict between rule 98 and token LT resolved as reduce (LT < UMINUS).
    Conflict between rule 98 and token GT resolved as reduce (GT < UMINUS).
    Conflict between rule 98 and token LE resolved as reduce (LE < UMINUS).
    Conflict between rule 98 and token GE resolved as reduce (GE < UMINUS).
    Conflict between rule 98 and token NE resolved as reduce (NE < UMINUS).
    Conflict between rule 98 and token LIKE resolved as reduce (LIKE < UMINUS).
    Conflict between rule 98 and token NOT_LIKE resolved as reduce (NOT_LIKE < UMINUS).
    Conflict between rule 98 and token IS resolved as reduce (IS < UMINUS).
    Conflict between rule 98 and token IS_NOT resolved as reduce (IS_NOT < UMINUS).
    Conflict between rule 98 and token NOT_IN resolved as reduce (NOT_IN < UMINUS).
    Conflict between rule 98 and token IN resolved as reduce (IN < UMINUS).
    Conflict between rule 98 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 98 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 98 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 98 and token '/' resolved as reduce ('/' < UMINUS).


State 113

   97 a_expr: '-' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
   99       | a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    $default  reduce using rule 97 (a_expr)

    Conflict between rule 97 and token OR resolved as reduce (OR < UMINUS).
    Conflict between rule 97 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 97 and token EQ resolved as reduce (EQ < UMINUS).
    Conflict between rule 97 and token LT resolved as reduce (LT < UMINUS).
    Conflict between rule 97 and token GT resolved as reduce (GT < UMINUS).
    Conflict between rule 97 and token LE resolved as reduce (LE < UMINUS).
    Conflict between rule 97 and token GE resolved as reduce (GE < UMINUS).
    Conflict between rule 97 and token NE resolved as reduce (NE < UMINUS).
    Conflict between rule 97 and token LIKE resolved as reduce (LIKE < UMINUS).
    Conflict between rule 97 and token NOT_LIKE resolved as reduce (NOT_LIKE < UMINUS).
    Conflict between rule 97 and token IS resolved as reduce (IS < UMINUS).
    Conflict between rule 97 and token IS_NOT resolved as reduce (IS_NOT < UMINUS).
    Conflict between rule 97 and token NOT_IN resolved as reduce (NOT_IN < UMINUS).
    Conflict between rule 97 and token IN resolved as reduce (IN < UMINUS).
    Conflict between rule 97 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 97 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 97 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 97 and token '/' resolved as reduce ('/' < UMINUS).


State 114

  145 a_expr_list: COMMA • a_expr a_expr_list
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 163
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 112

<<<<<<< HEAD
  128 select_attr: '*' a_expr_list •

    $default  reduce using rule 128 (select_attr)


State 113

  106 a_expr: a_expr OR • a_expr
=======
  126 select_attr: '*' a_expr_list •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 126 (select_attr)


State 114

<<<<<<< HEAD
  105 a_expr: a_expr AND • a_expr
=======
  104 a_expr: a_expr OR • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 164
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 115

<<<<<<< HEAD
  107 a_expr: a_expr EQ • a_expr
=======
  103 a_expr: a_expr AND • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 165
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 116

<<<<<<< HEAD
  108 a_expr: a_expr LT • a_expr
=======
  105 a_expr: a_expr EQ • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 166
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 117

<<<<<<< HEAD
  109 a_expr: a_expr GT • a_expr
=======
  106 a_expr: a_expr LT • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 167
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 118

<<<<<<< HEAD
  110 a_expr: a_expr LE • a_expr
=======
  107 a_expr: a_expr GT • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 168
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 119

<<<<<<< HEAD
  111 a_expr: a_expr GE • a_expr
=======
  108 a_expr: a_expr LE • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 169
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 120

<<<<<<< HEAD
  112 a_expr: a_expr NE • a_expr
=======
  109 a_expr: a_expr GE • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 170
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 121

<<<<<<< HEAD
  113 a_expr: a_expr LIKE • a_expr
=======
  110 a_expr: a_expr NE • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 171
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 122

<<<<<<< HEAD
  114 a_expr: a_expr NOT_LIKE • a_expr
=======
  111 a_expr: a_expr LIKE • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 172
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 123

<<<<<<< HEAD
  116 a_expr: a_expr IS • a_expr
=======
  112 a_expr: a_expr NOT_LIKE • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 173
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 124

<<<<<<< HEAD
  115 a_expr: a_expr IS_NOT • a_expr
=======
  114 a_expr: a_expr IS • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 174
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 125

<<<<<<< HEAD
  117 a_expr: a_expr NOT_IN • a_expr
=======
  113 a_expr: a_expr IS_NOT • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 175
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 126

<<<<<<< HEAD
  118 a_expr: a_expr IN • a_expr
=======
  115 a_expr: a_expr NOT_IN • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 176
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 127

<<<<<<< HEAD
  101 a_expr: a_expr '+' • a_expr
=======
  116 a_expr: a_expr IN • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 177
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 128

<<<<<<< HEAD
  102 a_expr: a_expr '-' • a_expr
=======
   99 a_expr: a_expr '+' • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 178
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 129

  103 a_expr: a_expr '*' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 178
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 130

  104 a_expr: a_expr '/' • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 179
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 131

<<<<<<< HEAD
  129 select_attr: a_expr a_expr_list •

    $default  reduce using rule 129 (select_attr)
=======
  100 a_expr: a_expr '-' • a_expr

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 179
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 132

<<<<<<< HEAD
   78 select_stmt: SELECT select_attr FROM • ID rel_list where order group_by having
   79            | SELECT select_attr FROM • join where order group_by having

    ID  shift, and go to state 180

    join  go to state 181
=======
  101 a_expr: a_expr '*' • a_expr

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 180
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 133

<<<<<<< HEAD
  131 function: func_LA '*' • RBRACE

    RBRACE  shift, and go to state 182
=======
  102 a_expr: a_expr '/' • a_expr

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 181
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 134

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr
  130 function: func_LA a_expr • RBRACE

    RBRACE    shift, and go to state 183
    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130
=======
  127 select_attr: a_expr a_expr_list •

    $default  reduce using rule 127 (select_attr)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 135

<<<<<<< HEAD
  132 func_LA: func_name LBRACE •

    $default  reduce using rule 132 (func_LA)
=======
   76 select_stmt: SELECT select_attr FROM • ID alias rel_list_with_alias where order group_by having
   77            | SELECT select_attr FROM • join where order group_by having

    ID  shift, and go to state 182

    join  go to state 183
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 136

  129 function: func_LA '*' • RBRACE

<<<<<<< HEAD
    ID  shift, and go to state 184
=======
    RBRACE  shift, and go to state 184
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 137

<<<<<<< HEAD
   55 insert_stmt: INSERT INTO ID • VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

    VALUES  shift, and go to state 185
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr
  128 function: func_LA a_expr • RBRACE

    RBRACE    shift, and go to state 185
    OR        shift, and go to state 116
    AND       shift, and go to state 117
    EQ        shift, and go to state 118
    LT        shift, and go to state 119
    GT        shift, and go to state 120
    LE        shift, and go to state 121
    GE        shift, and go to state 122
    NE        shift, and go to state 123
    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    IS        shift, and go to state 126
    IS_NOT    shift, and go to state 127
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 138

<<<<<<< HEAD
   71 delete_stmt: DELETE FROM ID • where

    WHERE  shift, and go to state 186

    $default  reduce using rule 157 (where)

    where  go to state 187
=======
   94 a_expr: rel_attr •  [RBRACE, OR, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, NOT_IN, IN, '+', '-', '*', '/']
  130 function: func_LA rel_attr • COMMA value_with_MINUS RBRACE

    COMMA  shift, and go to state 186

    $default  reduce using rule 94 (a_expr)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 139

<<<<<<< HEAD
   72 update_stmt: UPDATE ID SET • update_expr where

    ID  shift, and go to state 188

    update_expr  go to state 189
=======
  131 func_LA: func_name LBRACE •

    $default  reduce using rule 131 (func_LA)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 140

<<<<<<< HEAD
  161 set_variable_stmt: SET ID EQ • value

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 190
=======
   31 show_index_stmt: SHOW INDEX FROM • ID

    ID  shift, and go to state 187
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 141

<<<<<<< HEAD
  159 load_data_stmt: LOAD DATA INFILE • SSS INTO TABLE ID

    SSS  shift, and go to state 191
=======
   51 insert_stmt: INSERT INTO ID • VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

    VALUES  shift, and go to state 188
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 142

<<<<<<< HEAD
   41 as_marker: AS •

    $default  reduce using rule 41 (as_marker)
=======
   67 delete_stmt: DELETE FROM ID • where

    WHERE  shift, and go to state 189

    $default  reduce using rule 161 (where)

    where  go to state 190
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 143

<<<<<<< HEAD
   43 create_table_stmt: CREATE TABLE ID LBRACE • attr_def attr_def_list RBRACE as_marker select_stmt
   44                  | CREATE TABLE ID LBRACE • attr_def attr_def_list RBRACE

    ID  shift, and go to state 192

    attr_def  go to state 193
=======
   68 update_stmt: UPDATE ID SET • update_expr where

    ID  shift, and go to state 191

    update_expr  go to state 192
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 144

<<<<<<< HEAD
   42 create_table_stmt: CREATE TABLE ID as_marker • select_stmt

    SELECT  shift, and go to state 4

    select_stmt  go to state 194
=======
  165 set_variable_stmt: SET ID EQ • value

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 193
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 145

<<<<<<< HEAD
   35 create_index_stmt: CREATE unique_marker INDEX ID • ON ID LBRACE ID rel_list RBRACE

    ON  shift, and go to state 195
=======
  163 load_data_stmt: LOAD DATA INFILE • SSS INTO TABLE ID

    SSS  shift, and go to state 194
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 146

<<<<<<< HEAD
   36 drop_index_stmt: DROP INDEX ID ON • ID

    ID  shift, and go to state 196
=======
   40 create_table_stmt: CREATE TABLE ID LBRACE • attr_def attr_def_list RBRACE

    ID  shift, and go to state 195

    attr_def  go to state 196
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 147

<<<<<<< HEAD
   92 expression: LBRACE expression RBRACE •

    $default  reduce using rule 92 (expression)
=======
   35 create_index_stmt: CREATE unique_marker INDEX ID • ON ID LBRACE ID rel_list RBRACE

    ON  shift, and go to state 197
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 148

<<<<<<< HEAD
   87 expression_list: expression COMMA expression_list •

    $default  reduce using rule 87 (expression_list)
=======
   36 drop_index_stmt: DROP INDEX ID ON • ID

    ID  shift, and go to state 198
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 149

<<<<<<< HEAD
   88 expression: expression • '+' expression
   88           | expression '+' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-']
   89           | expression • '-' expression
   90           | expression • '*' expression
   91           | expression • '/' expression

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 88 (expression)

    Conflict between rule 88 and token '+' resolved as reduce (%left '+').
    Conflict between rule 88 and token '-' resolved as reduce (%left '-').
    Conflict between rule 88 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 88 and token '/' resolved as shift ('+' < '/').
=======
   90 expression: LBRACE expression RBRACE •

    $default  reduce using rule 90 (expression)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 150

<<<<<<< HEAD
   88 expression: expression • '+' expression
   89           | expression • '-' expression
   89           | expression '-' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-']
   90           | expression • '*' expression
   91           | expression • '/' expression

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 89 (expression)

    Conflict between rule 89 and token '+' resolved as reduce (%left '+').
    Conflict between rule 89 and token '-' resolved as reduce (%left '-').
    Conflict between rule 89 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 89 and token '/' resolved as shift ('-' < '/').
=======
   85 expression_list: expression COMMA expression_list •

    $default  reduce using rule 85 (expression_list)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 151

<<<<<<< HEAD
   88 expression: expression • '+' expression
   89           | expression • '-' expression
   90           | expression • '*' expression
   90           | expression '*' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']
   91           | expression • '/' expression

    $default  reduce using rule 90 (expression)

    Conflict between rule 90 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 90 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 90 and token '*' resolved as reduce (%left '*').
    Conflict between rule 90 and token '/' resolved as reduce (%left '/').
=======
   86 expression: expression • '+' expression
   86           | expression '+' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-']
   87           | expression • '-' expression
   88           | expression • '*' expression
   89           | expression • '/' expression

    '*'  shift, and go to state 103
    '/'  shift, and go to state 104

    $default  reduce using rule 86 (expression)

    Conflict between rule 86 and token '+' resolved as reduce (%left '+').
    Conflict between rule 86 and token '-' resolved as reduce (%left '-').
    Conflict between rule 86 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 86 and token '/' resolved as shift ('+' < '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 152

<<<<<<< HEAD
   88 expression: expression • '+' expression
   89           | expression • '-' expression
   90           | expression • '*' expression
   91           | expression • '/' expression
   91           | expression '/' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']

    $default  reduce using rule 91 (expression)

    Conflict between rule 91 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 91 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 91 and token '*' resolved as reduce (%left '*').
    Conflict between rule 91 and token '/' resolved as reduce (%left '/').
=======
   86 expression: expression • '+' expression
   87           | expression • '-' expression
   87           | expression '-' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-']
   88           | expression • '*' expression
   89           | expression • '/' expression

    '*'  shift, and go to state 103
    '/'  shift, and go to state 104

    $default  reduce using rule 87 (expression)

    Conflict between rule 87 and token '+' resolved as reduce (%left '+').
    Conflict between rule 87 and token '-' resolved as reduce (%left '-').
    Conflict between rule 87 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 87 and token '/' resolved as shift ('-' < '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 153

<<<<<<< HEAD
  127 value_list_LA: value COMMA • value
=======
   86 expression: expression • '+' expression
   87           | expression • '-' expression
   88           | expression • '*' expression
   88           | expression '*' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']
   89           | expression • '/' expression

    $default  reduce using rule 88 (expression)

    Conflict between rule 88 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 88 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 88 and token '*' resolved as reduce (%left '*').
    Conflict between rule 88 and token '/' resolved as reduce (%left '/').


State 154

   86 expression: expression • '+' expression
   87           | expression • '-' expression
   88           | expression • '*' expression
   89           | expression • '/' expression
   89           | expression '/' expression •  [$end, SEMICOLON, RBRACE, COMMA, '+', '-', '*', '/']

    $default  reduce using rule 89 (expression)

    Conflict between rule 89 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 89 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 89 and token '*' resolved as reduce (%left '*').
    Conflict between rule 89 and token '/' resolved as reduce (%left '/').


State 155

  125 value_list_LA: value COMMA • value
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

<<<<<<< HEAD
    value  go to state 197


State 154

  125 select_stmt_with_paren: LBRACE select_stmt RBRACE •

    $default  reduce using rule 125 (select_stmt_with_paren)


State 155

  121 c_expr: LBRACE a_expr RBRACE •

    $default  reduce using rule 121 (c_expr)
=======
    value  go to state 199
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 156

<<<<<<< HEAD
  124 value_list_LALR: LBRACE value_list_LA RBRACE •

    $default  reduce using rule 124 (value_list_LALR)
=======
  123 select_stmt_with_paren: LBRACE select_stmt RBRACE •

    $default  reduce using rule 123 (select_stmt_with_paren)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 157

<<<<<<< HEAD
  126 value_list_LA: value_list_LA COMMA • value

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 198
=======
  119 c_expr: LBRACE a_expr RBRACE • alias

    AS  shift, and go to state 200

    $default  reduce using rule 74 (alias)

    alias  go to state 201
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 158

<<<<<<< HEAD
  120 a_expr: NOT_EXISTS LBRACE select_stmt • RBRACE

    RBRACE  shift, and go to state 199
=======
  122 value_list_LALR: LBRACE value_list_LA RBRACE •

    $default  reduce using rule 122 (value_list_LALR)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 159

<<<<<<< HEAD
  119 a_expr: EXISTS LBRACE select_stmt • RBRACE

    RBRACE  shift, and go to state 200


State 160

  139 rel_attr: ID DOT ID •

    $default  reduce using rule 139 (rel_attr)


State 161

  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr
  143 a_expr_list: COMMA a_expr • a_expr_list
=======
  124 value_list_LA: value_list_LA COMMA • value
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

<<<<<<< HEAD
    $default  reduce using rule 142 (a_expr_list)

    a_expr_list  go to state 201
=======
    value  go to state 202
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 162

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  106       | a_expr OR a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, INNER_JOIN, ORDER_BY]
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 106 (a_expr)

    Conflict between rule 106 and token OR resolved as reduce (%left OR).
    Conflict between rule 106 and token AND resolved as shift (OR < AND).
    Conflict between rule 106 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 106 and token LT resolved as shift (OR < LT).
    Conflict between rule 106 and token GT resolved as shift (OR < GT).
    Conflict between rule 106 and token LE resolved as shift (OR < LE).
    Conflict between rule 106 and token GE resolved as shift (OR < GE).
    Conflict between rule 106 and token NE resolved as shift (OR < NE).
    Conflict between rule 106 and token LIKE resolved as shift (OR < LIKE).
    Conflict between rule 106 and token NOT_LIKE resolved as shift (OR < NOT_LIKE).
    Conflict between rule 106 and token IS resolved as shift (OR < IS).
    Conflict between rule 106 and token IS_NOT resolved as shift (OR < IS_NOT).
    Conflict between rule 106 and token NOT_IN resolved as shift (OR < NOT_IN).
    Conflict between rule 106 and token IN resolved as shift (OR < IN).
    Conflict between rule 106 and token '+' resolved as shift (OR < '+').
    Conflict between rule 106 and token '-' resolved as shift (OR < '-').
    Conflict between rule 106 and token '*' resolved as shift (OR < '*').
    Conflict between rule 106 and token '/' resolved as shift (OR < '/').
=======
  118 a_expr: NOT_EXISTS LBRACE select_stmt • RBRACE

    RBRACE  shift, and go to state 203
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 163

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  105       | a_expr AND a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, INNER_JOIN, ORDER_BY]
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 105 (a_expr)

    Conflict between rule 105 and token OR resolved as reduce (OR < AND).
    Conflict between rule 105 and token AND resolved as reduce (%left AND).
    Conflict between rule 105 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 105 and token LT resolved as shift (AND < LT).
    Conflict between rule 105 and token GT resolved as shift (AND < GT).
    Conflict between rule 105 and token LE resolved as shift (AND < LE).
    Conflict between rule 105 and token GE resolved as shift (AND < GE).
    Conflict between rule 105 and token NE resolved as shift (AND < NE).
    Conflict between rule 105 and token LIKE resolved as shift (AND < LIKE).
    Conflict between rule 105 and token NOT_LIKE resolved as shift (AND < NOT_LIKE).
    Conflict between rule 105 and token IS resolved as shift (AND < IS).
    Conflict between rule 105 and token IS_NOT resolved as shift (AND < IS_NOT).
    Conflict between rule 105 and token NOT_IN resolved as shift (AND < NOT_IN).
    Conflict between rule 105 and token IN resolved as shift (AND < IN).
    Conflict between rule 105 and token '+' resolved as shift (AND < '+').
    Conflict between rule 105 and token '-' resolved as shift (AND < '-').
    Conflict between rule 105 and token '*' resolved as shift (AND < '*').
    Conflict between rule 105 and token '/' resolved as shift (AND < '/').
=======
  117 a_expr: EXISTS LBRACE select_stmt • RBRACE

    RBRACE  shift, and go to state 204


State 162

  141 rel_attr: ID DOT ID •

    $default  reduce using rule 141 (rel_attr)


State 163

   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr
  145 a_expr_list: COMMA a_expr • a_expr_list

    COMMA     shift, and go to state 114
    OR        shift, and go to state 116
    AND       shift, and go to state 117
    EQ        shift, and go to state 118
    LT        shift, and go to state 119
    GT        shift, and go to state 120
    LE        shift, and go to state 121
    GE        shift, and go to state 122
    NE        shift, and go to state 123
    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    IS        shift, and go to state 126
    IS_NOT    shift, and go to state 127
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 144 (a_expr_list)

    a_expr_list  go to state 205
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 164

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  107       | a_expr EQ a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  104       | a_expr OR a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, INNER_JOIN, ORDER_BY]
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    AND       shift, and go to state 117
    EQ        shift, and go to state 118
    LT        shift, and go to state 119
    GT        shift, and go to state 120
    LE        shift, and go to state 121
    GE        shift, and go to state 122
    NE        shift, and go to state 123
    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    IS        shift, and go to state 126
    IS_NOT    shift, and go to state 127
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 104 (a_expr)

    Conflict between rule 104 and token OR resolved as reduce (%left OR).
    Conflict between rule 104 and token AND resolved as shift (OR < AND).
    Conflict between rule 104 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 104 and token LT resolved as shift (OR < LT).
    Conflict between rule 104 and token GT resolved as shift (OR < GT).
    Conflict between rule 104 and token LE resolved as shift (OR < LE).
    Conflict between rule 104 and token GE resolved as shift (OR < GE).
    Conflict between rule 104 and token NE resolved as shift (OR < NE).
    Conflict between rule 104 and token LIKE resolved as shift (OR < LIKE).
    Conflict between rule 104 and token NOT_LIKE resolved as shift (OR < NOT_LIKE).
    Conflict between rule 104 and token IS resolved as shift (OR < IS).
    Conflict between rule 104 and token IS_NOT resolved as shift (OR < IS_NOT).
    Conflict between rule 104 and token NOT_IN resolved as shift (OR < NOT_IN).
    Conflict between rule 104 and token IN resolved as shift (OR < IN).
    Conflict between rule 104 and token '+' resolved as shift (OR < '+').
    Conflict between rule 104 and token '-' resolved as shift (OR < '-').
    Conflict between rule 104 and token '*' resolved as shift (OR < '*').
    Conflict between rule 104 and token '/' resolved as shift (OR < '/').


State 165

   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  103       | a_expr AND a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, INNER_JOIN, ORDER_BY]
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    EQ        shift, and go to state 118
    LT        shift, and go to state 119
    GT        shift, and go to state 120
    LE        shift, and go to state 121
    GE        shift, and go to state 122
    NE        shift, and go to state 123
    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    IS        shift, and go to state 126
    IS_NOT    shift, and go to state 127
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 103 (a_expr)

    Conflict between rule 103 and token OR resolved as reduce (OR < AND).
    Conflict between rule 103 and token AND resolved as reduce (%left AND).
    Conflict between rule 103 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 103 and token LT resolved as shift (AND < LT).
    Conflict between rule 103 and token GT resolved as shift (AND < GT).
    Conflict between rule 103 and token LE resolved as shift (AND < LE).
    Conflict between rule 103 and token GE resolved as shift (AND < GE).
    Conflict between rule 103 and token NE resolved as shift (AND < NE).
    Conflict between rule 103 and token LIKE resolved as shift (AND < LIKE).
    Conflict between rule 103 and token NOT_LIKE resolved as shift (AND < NOT_LIKE).
    Conflict between rule 103 and token IS resolved as shift (AND < IS).
    Conflict between rule 103 and token IS_NOT resolved as shift (AND < IS_NOT).
    Conflict between rule 103 and token NOT_IN resolved as shift (AND < NOT_IN).
    Conflict between rule 103 and token IN resolved as shift (AND < IN).
    Conflict between rule 103 and token '+' resolved as shift (AND < '+').
    Conflict between rule 103 and token '-' resolved as shift (AND < '-').
    Conflict between rule 103 and token '*' resolved as shift (AND < '*').
    Conflict between rule 103 and token '/' resolved as shift (AND < '/').


State 166

   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  105       | a_expr EQ a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 105 (a_expr)

    Conflict between rule 105 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 105 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 105 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 105 and token LT resolved as reduce (%left LT).
    Conflict between rule 105 and token GT resolved as reduce (%left GT).
    Conflict between rule 105 and token LE resolved as reduce (%left LE).
    Conflict between rule 105 and token GE resolved as reduce (%left GE).
    Conflict between rule 105 and token NE resolved as reduce (%left NE).
    Conflict between rule 105 and token LIKE resolved as shift (EQ < LIKE).
    Conflict between rule 105 and token NOT_LIKE resolved as shift (EQ < NOT_LIKE).
    Conflict between rule 105 and token IS resolved as reduce (IS < EQ).
    Conflict between rule 105 and token IS_NOT resolved as reduce (IS_NOT < EQ).
    Conflict between rule 105 and token NOT_IN resolved as shift (EQ < NOT_IN).
    Conflict between rule 105 and token IN resolved as shift (EQ < IN).
    Conflict between rule 105 and token '+' resolved as shift (EQ < '+').
    Conflict between rule 105 and token '-' resolved as shift (EQ < '-').
    Conflict between rule 105 and token '*' resolved as shift (EQ < '*').
    Conflict between rule 105 and token '/' resolved as shift (EQ < '/').


State 167

   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  106       | a_expr LT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 106 (a_expr)

    Conflict between rule 106 and token OR resolved as reduce (OR < LT).
    Conflict between rule 106 and token AND resolved as reduce (AND < LT).
    Conflict between rule 106 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 106 and token LT resolved as reduce (%left LT).
    Conflict between rule 106 and token GT resolved as reduce (%left GT).
    Conflict between rule 106 and token LE resolved as reduce (%left LE).
    Conflict between rule 106 and token GE resolved as reduce (%left GE).
    Conflict between rule 106 and token NE resolved as reduce (%left NE).
    Conflict between rule 106 and token LIKE resolved as shift (LT < LIKE).
    Conflict between rule 106 and token NOT_LIKE resolved as shift (LT < NOT_LIKE).
    Conflict between rule 106 and token IS resolved as reduce (IS < LT).
    Conflict between rule 106 and token IS_NOT resolved as reduce (IS_NOT < LT).
    Conflict between rule 106 and token NOT_IN resolved as shift (LT < NOT_IN).
    Conflict between rule 106 and token IN resolved as shift (LT < IN).
    Conflict between rule 106 and token '+' resolved as shift (LT < '+').
    Conflict between rule 106 and token '-' resolved as shift (LT < '-').
    Conflict between rule 106 and token '*' resolved as shift (LT < '*').
    Conflict between rule 106 and token '/' resolved as shift (LT < '/').


State 168

   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  107       | a_expr GT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 107 (a_expr)

<<<<<<< HEAD
    Conflict between rule 107 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 107 and token AND resolved as reduce (AND < EQ).
=======
    Conflict between rule 107 and token OR resolved as reduce (OR < GT).
    Conflict between rule 107 and token AND resolved as reduce (AND < GT).
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273
    Conflict between rule 107 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 107 and token LT resolved as reduce (%left LT).
    Conflict between rule 107 and token GT resolved as reduce (%left GT).
    Conflict between rule 107 and token LE resolved as reduce (%left LE).
    Conflict between rule 107 and token GE resolved as reduce (%left GE).
    Conflict between rule 107 and token NE resolved as reduce (%left NE).
<<<<<<< HEAD
    Conflict between rule 107 and token LIKE resolved as shift (EQ < LIKE).
    Conflict between rule 107 and token NOT_LIKE resolved as shift (EQ < NOT_LIKE).
    Conflict between rule 107 and token IS resolved as reduce (IS < EQ).
    Conflict between rule 107 and token IS_NOT resolved as reduce (IS_NOT < EQ).
    Conflict between rule 107 and token NOT_IN resolved as shift (EQ < NOT_IN).
    Conflict between rule 107 and token IN resolved as shift (EQ < IN).
    Conflict between rule 107 and token '+' resolved as shift (EQ < '+').
    Conflict between rule 107 and token '-' resolved as shift (EQ < '-').
    Conflict between rule 107 and token '*' resolved as shift (EQ < '*').
    Conflict between rule 107 and token '/' resolved as shift (EQ < '/').


State 165

  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  108       | a_expr LT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr
=======
    Conflict between rule 107 and token LIKE resolved as shift (GT < LIKE).
    Conflict between rule 107 and token NOT_LIKE resolved as shift (GT < NOT_LIKE).
    Conflict between rule 107 and token IS resolved as reduce (IS < GT).
    Conflict between rule 107 and token IS_NOT resolved as reduce (IS_NOT < GT).
    Conflict between rule 107 and token NOT_IN resolved as shift (GT < NOT_IN).
    Conflict between rule 107 and token IN resolved as shift (GT < IN).
    Conflict between rule 107 and token '+' resolved as shift (GT < '+').
    Conflict between rule 107 and token '-' resolved as shift (GT < '-').
    Conflict between rule 107 and token '*' resolved as shift (GT < '*').
    Conflict between rule 107 and token '/' resolved as shift (GT < '/').


State 169

   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  108       | a_expr LE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 108 (a_expr)

<<<<<<< HEAD
    Conflict between rule 108 and token OR resolved as reduce (OR < LT).
    Conflict between rule 108 and token AND resolved as reduce (AND < LT).
=======
    Conflict between rule 108 and token OR resolved as reduce (OR < LE).
    Conflict between rule 108 and token AND resolved as reduce (AND < LE).
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273
    Conflict between rule 108 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 108 and token LT resolved as reduce (%left LT).
    Conflict between rule 108 and token GT resolved as reduce (%left GT).
    Conflict between rule 108 and token LE resolved as reduce (%left LE).
    Conflict between rule 108 and token GE resolved as reduce (%left GE).
    Conflict between rule 108 and token NE resolved as reduce (%left NE).
<<<<<<< HEAD
    Conflict between rule 108 and token LIKE resolved as shift (LT < LIKE).
    Conflict between rule 108 and token NOT_LIKE resolved as shift (LT < NOT_LIKE).
    Conflict between rule 108 and token IS resolved as reduce (IS < LT).
    Conflict between rule 108 and token IS_NOT resolved as reduce (IS_NOT < LT).
    Conflict between rule 108 and token NOT_IN resolved as shift (LT < NOT_IN).
    Conflict between rule 108 and token IN resolved as shift (LT < IN).
    Conflict between rule 108 and token '+' resolved as shift (LT < '+').
    Conflict between rule 108 and token '-' resolved as shift (LT < '-').
    Conflict between rule 108 and token '*' resolved as shift (LT < '*').
    Conflict between rule 108 and token '/' resolved as shift (LT < '/').


State 166

  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  109       | a_expr GT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 109 (a_expr)

    Conflict between rule 109 and token OR resolved as reduce (OR < GT).
    Conflict between rule 109 and token AND resolved as reduce (AND < GT).
=======
    Conflict between rule 108 and token LIKE resolved as shift (LE < LIKE).
    Conflict between rule 108 and token NOT_LIKE resolved as shift (LE < NOT_LIKE).
    Conflict between rule 108 and token IS resolved as reduce (IS < LE).
    Conflict between rule 108 and token IS_NOT resolved as reduce (IS_NOT < LE).
    Conflict between rule 108 and token NOT_IN resolved as shift (LE < NOT_IN).
    Conflict between rule 108 and token IN resolved as shift (LE < IN).
    Conflict between rule 108 and token '+' resolved as shift (LE < '+').
    Conflict between rule 108 and token '-' resolved as shift (LE < '-').
    Conflict between rule 108 and token '*' resolved as shift (LE < '*').
    Conflict between rule 108 and token '/' resolved as shift (LE < '/').


State 170

   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  109       | a_expr GE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 109 (a_expr)

    Conflict between rule 109 and token OR resolved as reduce (OR < GE).
    Conflict between rule 109 and token AND resolved as reduce (AND < GE).
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273
    Conflict between rule 109 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 109 and token LT resolved as reduce (%left LT).
    Conflict between rule 109 and token GT resolved as reduce (%left GT).
    Conflict between rule 109 and token LE resolved as reduce (%left LE).
    Conflict between rule 109 and token GE resolved as reduce (%left GE).
    Conflict between rule 109 and token NE resolved as reduce (%left NE).
<<<<<<< HEAD
    Conflict between rule 109 and token LIKE resolved as shift (GT < LIKE).
    Conflict between rule 109 and token NOT_LIKE resolved as shift (GT < NOT_LIKE).
    Conflict between rule 109 and token IS resolved as reduce (IS < GT).
    Conflict between rule 109 and token IS_NOT resolved as reduce (IS_NOT < GT).
    Conflict between rule 109 and token NOT_IN resolved as shift (GT < NOT_IN).
    Conflict between rule 109 and token IN resolved as shift (GT < IN).
    Conflict between rule 109 and token '+' resolved as shift (GT < '+').
    Conflict between rule 109 and token '-' resolved as shift (GT < '-').
    Conflict between rule 109 and token '*' resolved as shift (GT < '*').
    Conflict between rule 109 and token '/' resolved as shift (GT < '/').
=======
    Conflict between rule 109 and token LIKE resolved as shift (GE < LIKE).
    Conflict between rule 109 and token NOT_LIKE resolved as shift (GE < NOT_LIKE).
    Conflict between rule 109 and token IS resolved as reduce (IS < GE).
    Conflict between rule 109 and token IS_NOT resolved as reduce (IS_NOT < GE).
    Conflict between rule 109 and token NOT_IN resolved as shift (GE < NOT_IN).
    Conflict between rule 109 and token IN resolved as shift (GE < IN).
    Conflict between rule 109 and token '+' resolved as shift (GE < '+').
    Conflict between rule 109 and token '-' resolved as shift (GE < '-').
    Conflict between rule 109 and token '*' resolved as shift (GE < '*').
    Conflict between rule 109 and token '/' resolved as shift (GE < '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 167

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  110       | a_expr LE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 110 (a_expr)

    Conflict between rule 110 and token OR resolved as reduce (OR < LE).
    Conflict between rule 110 and token AND resolved as reduce (AND < LE).
    Conflict between rule 110 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 110 and token LT resolved as reduce (%left LT).
    Conflict between rule 110 and token GT resolved as reduce (%left GT).
    Conflict between rule 110 and token LE resolved as reduce (%left LE).
    Conflict between rule 110 and token GE resolved as reduce (%left GE).
    Conflict between rule 110 and token NE resolved as reduce (%left NE).
    Conflict between rule 110 and token LIKE resolved as shift (LE < LIKE).
    Conflict between rule 110 and token NOT_LIKE resolved as shift (LE < NOT_LIKE).
    Conflict between rule 110 and token IS resolved as reduce (IS < LE).
    Conflict between rule 110 and token IS_NOT resolved as reduce (IS_NOT < LE).
    Conflict between rule 110 and token NOT_IN resolved as shift (LE < NOT_IN).
    Conflict between rule 110 and token IN resolved as shift (LE < IN).
    Conflict between rule 110 and token '+' resolved as shift (LE < '+').
    Conflict between rule 110 and token '-' resolved as shift (LE < '-').
    Conflict between rule 110 and token '*' resolved as shift (LE < '*').
    Conflict between rule 110 and token '/' resolved as shift (LE < '/').


State 168

  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  111       | a_expr GE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  110       | a_expr NE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 110 (a_expr)

<<<<<<< HEAD
    Conflict between rule 111 and token OR resolved as reduce (OR < GE).
    Conflict between rule 111 and token AND resolved as reduce (AND < GE).
    Conflict between rule 111 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 111 and token LT resolved as reduce (%left LT).
    Conflict between rule 111 and token GT resolved as reduce (%left GT).
    Conflict between rule 111 and token LE resolved as reduce (%left LE).
    Conflict between rule 111 and token GE resolved as reduce (%left GE).
    Conflict between rule 111 and token NE resolved as reduce (%left NE).
    Conflict between rule 111 and token LIKE resolved as shift (GE < LIKE).
    Conflict between rule 111 and token NOT_LIKE resolved as shift (GE < NOT_LIKE).
    Conflict between rule 111 and token IS resolved as reduce (IS < GE).
    Conflict between rule 111 and token IS_NOT resolved as reduce (IS_NOT < GE).
    Conflict between rule 111 and token NOT_IN resolved as shift (GE < NOT_IN).
    Conflict between rule 111 and token IN resolved as shift (GE < IN).
    Conflict between rule 111 and token '+' resolved as shift (GE < '+').
    Conflict between rule 111 and token '-' resolved as shift (GE < '-').
    Conflict between rule 111 and token '*' resolved as shift (GE < '*').
    Conflict between rule 111 and token '/' resolved as shift (GE < '/').


State 169

  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  112       | a_expr NE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 112 (a_expr)

    Conflict between rule 112 and token OR resolved as reduce (OR < NE).
    Conflict between rule 112 and token AND resolved as reduce (AND < NE).
    Conflict between rule 112 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 112 and token LT resolved as reduce (%left LT).
    Conflict between rule 112 and token GT resolved as reduce (%left GT).
    Conflict between rule 112 and token LE resolved as reduce (%left LE).
    Conflict between rule 112 and token GE resolved as reduce (%left GE).
    Conflict between rule 112 and token NE resolved as reduce (%left NE).
    Conflict between rule 112 and token LIKE resolved as shift (NE < LIKE).
    Conflict between rule 112 and token NOT_LIKE resolved as shift (NE < NOT_LIKE).
    Conflict between rule 112 and token IS resolved as reduce (IS < NE).
    Conflict between rule 112 and token IS_NOT resolved as reduce (IS_NOT < NE).
    Conflict between rule 112 and token NOT_IN resolved as shift (NE < NOT_IN).
    Conflict between rule 112 and token IN resolved as shift (NE < IN).
    Conflict between rule 112 and token '+' resolved as shift (NE < '+').
    Conflict between rule 112 and token '-' resolved as shift (NE < '-').
    Conflict between rule 112 and token '*' resolved as shift (NE < '*').
    Conflict between rule 112 and token '/' resolved as shift (NE < '/').


State 170

  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  113       | a_expr LIKE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 113 (a_expr)

    Conflict between rule 113 and token OR resolved as reduce (OR < LIKE).
    Conflict between rule 113 and token AND resolved as reduce (AND < LIKE).
    Conflict between rule 113 and token EQ resolved as reduce (EQ < LIKE).
    Conflict between rule 113 and token LT resolved as reduce (LT < LIKE).
    Conflict between rule 113 and token GT resolved as reduce (GT < LIKE).
    Conflict between rule 113 and token LE resolved as reduce (LE < LIKE).
    Conflict between rule 113 and token GE resolved as reduce (GE < LIKE).
    Conflict between rule 113 and token NE resolved as reduce (NE < LIKE).
    Conflict between rule 113 and token LIKE resolved as reduce (%left LIKE).
    Conflict between rule 113 and token NOT_LIKE resolved as reduce (%left NOT_LIKE).
    Conflict between rule 113 and token IS resolved as reduce (IS < LIKE).
    Conflict between rule 113 and token IS_NOT resolved as reduce (IS_NOT < LIKE).
    Conflict between rule 113 and token NOT_IN resolved as reduce (NOT_IN < LIKE).
    Conflict between rule 113 and token IN resolved as reduce (IN < LIKE).
    Conflict between rule 113 and token '+' resolved as shift (LIKE < '+').
    Conflict between rule 113 and token '-' resolved as shift (LIKE < '-').
    Conflict between rule 113 and token '*' resolved as shift (LIKE < '*').
    Conflict between rule 113 and token '/' resolved as shift (LIKE < '/').


State 171

  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  114       | a_expr NOT_LIKE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 114 (a_expr)

    Conflict between rule 114 and token OR resolved as reduce (OR < NOT_LIKE).
    Conflict between rule 114 and token AND resolved as reduce (AND < NOT_LIKE).
    Conflict between rule 114 and token EQ resolved as reduce (EQ < NOT_LIKE).
    Conflict between rule 114 and token LT resolved as reduce (LT < NOT_LIKE).
    Conflict between rule 114 and token GT resolved as reduce (GT < NOT_LIKE).
    Conflict between rule 114 and token LE resolved as reduce (LE < NOT_LIKE).
    Conflict between rule 114 and token GE resolved as reduce (GE < NOT_LIKE).
    Conflict between rule 114 and token NE resolved as reduce (NE < NOT_LIKE).
    Conflict between rule 114 and token LIKE resolved as reduce (%left LIKE).
    Conflict between rule 114 and token NOT_LIKE resolved as reduce (%left NOT_LIKE).
    Conflict between rule 114 and token IS resolved as reduce (IS < NOT_LIKE).
    Conflict between rule 114 and token IS_NOT resolved as reduce (IS_NOT < NOT_LIKE).
    Conflict between rule 114 and token NOT_IN resolved as reduce (NOT_IN < NOT_LIKE).
    Conflict between rule 114 and token IN resolved as reduce (IN < NOT_LIKE).
    Conflict between rule 114 and token '+' resolved as shift (NOT_LIKE < '+').
    Conflict between rule 114 and token '-' resolved as shift (NOT_LIKE < '-').
    Conflict between rule 114 and token '*' resolved as shift (NOT_LIKE < '*').
    Conflict between rule 114 and token '/' resolved as shift (NOT_LIKE < '/').
=======
    Conflict between rule 110 and token OR resolved as reduce (OR < NE).
    Conflict between rule 110 and token AND resolved as reduce (AND < NE).
    Conflict between rule 110 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 110 and token LT resolved as reduce (%left LT).
    Conflict between rule 110 and token GT resolved as reduce (%left GT).
    Conflict between rule 110 and token LE resolved as reduce (%left LE).
    Conflict between rule 110 and token GE resolved as reduce (%left GE).
    Conflict between rule 110 and token NE resolved as reduce (%left NE).
    Conflict between rule 110 and token LIKE resolved as shift (NE < LIKE).
    Conflict between rule 110 and token NOT_LIKE resolved as shift (NE < NOT_LIKE).
    Conflict between rule 110 and token IS resolved as reduce (IS < NE).
    Conflict between rule 110 and token IS_NOT resolved as reduce (IS_NOT < NE).
    Conflict between rule 110 and token NOT_IN resolved as shift (NE < NOT_IN).
    Conflict between rule 110 and token IN resolved as shift (NE < IN).
    Conflict between rule 110 and token '+' resolved as shift (NE < '+').
    Conflict between rule 110 and token '-' resolved as shift (NE < '-').
    Conflict between rule 110 and token '*' resolved as shift (NE < '*').
    Conflict between rule 110 and token '/' resolved as shift (NE < '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 172

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  116       | a_expr IS a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 116 (a_expr)

    Conflict between rule 116 and token OR resolved as reduce (OR < IS).
    Conflict between rule 116 and token AND resolved as reduce (AND < IS).
    Conflict between rule 116 and token EQ resolved as shift (IS < EQ).
    Conflict between rule 116 and token LT resolved as shift (IS < LT).
    Conflict between rule 116 and token GT resolved as shift (IS < GT).
    Conflict between rule 116 and token LE resolved as shift (IS < LE).
    Conflict between rule 116 and token GE resolved as shift (IS < GE).
    Conflict between rule 116 and token NE resolved as shift (IS < NE).
    Conflict between rule 116 and token LIKE resolved as shift (IS < LIKE).
    Conflict between rule 116 and token NOT_LIKE resolved as shift (IS < NOT_LIKE).
    Conflict between rule 116 and token IS resolved as reduce (%left IS).
    Conflict between rule 116 and token IS_NOT resolved as reduce (%left IS_NOT).
    Conflict between rule 116 and token NOT_IN resolved as shift (IS < NOT_IN).
    Conflict between rule 116 and token IN resolved as shift (IS < IN).
    Conflict between rule 116 and token '+' resolved as shift (IS < '+').
    Conflict between rule 116 and token '-' resolved as shift (IS < '-').
    Conflict between rule 116 and token '*' resolved as shift (IS < '*').
    Conflict between rule 116 and token '/' resolved as shift (IS < '/').
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  111       | a_expr LIKE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133

    $default  reduce using rule 111 (a_expr)

    Conflict between rule 111 and token OR resolved as reduce (OR < LIKE).
    Conflict between rule 111 and token AND resolved as reduce (AND < LIKE).
    Conflict between rule 111 and token EQ resolved as reduce (EQ < LIKE).
    Conflict between rule 111 and token LT resolved as reduce (LT < LIKE).
    Conflict between rule 111 and token GT resolved as reduce (GT < LIKE).
    Conflict between rule 111 and token LE resolved as reduce (LE < LIKE).
    Conflict between rule 111 and token GE resolved as reduce (GE < LIKE).
    Conflict between rule 111 and token NE resolved as reduce (NE < LIKE).
    Conflict between rule 111 and token LIKE resolved as reduce (%left LIKE).
    Conflict between rule 111 and token NOT_LIKE resolved as reduce (%left NOT_LIKE).
    Conflict between rule 111 and token IS resolved as reduce (IS < LIKE).
    Conflict between rule 111 and token IS_NOT resolved as reduce (IS_NOT < LIKE).
    Conflict between rule 111 and token NOT_IN resolved as reduce (NOT_IN < LIKE).
    Conflict between rule 111 and token IN resolved as reduce (IN < LIKE).
    Conflict between rule 111 and token '+' resolved as shift (LIKE < '+').
    Conflict between rule 111 and token '-' resolved as shift (LIKE < '-').
    Conflict between rule 111 and token '*' resolved as shift (LIKE < '*').
    Conflict between rule 111 and token '/' resolved as shift (LIKE < '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 173

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  115       | a_expr IS_NOT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 115 (a_expr)

    Conflict between rule 115 and token OR resolved as reduce (OR < IS_NOT).
    Conflict between rule 115 and token AND resolved as reduce (AND < IS_NOT).
    Conflict between rule 115 and token EQ resolved as shift (IS_NOT < EQ).
    Conflict between rule 115 and token LT resolved as shift (IS_NOT < LT).
    Conflict between rule 115 and token GT resolved as shift (IS_NOT < GT).
    Conflict between rule 115 and token LE resolved as shift (IS_NOT < LE).
    Conflict between rule 115 and token GE resolved as shift (IS_NOT < GE).
    Conflict between rule 115 and token NE resolved as shift (IS_NOT < NE).
    Conflict between rule 115 and token LIKE resolved as shift (IS_NOT < LIKE).
    Conflict between rule 115 and token NOT_LIKE resolved as shift (IS_NOT < NOT_LIKE).
    Conflict between rule 115 and token IS resolved as reduce (%left IS).
    Conflict between rule 115 and token IS_NOT resolved as reduce (%left IS_NOT).
    Conflict between rule 115 and token NOT_IN resolved as shift (IS_NOT < NOT_IN).
    Conflict between rule 115 and token IN resolved as shift (IS_NOT < IN).
    Conflict between rule 115 and token '+' resolved as shift (IS_NOT < '+').
    Conflict between rule 115 and token '-' resolved as shift (IS_NOT < '-').
    Conflict between rule 115 and token '*' resolved as shift (IS_NOT < '*').
    Conflict between rule 115 and token '/' resolved as shift (IS_NOT < '/').


State 174

  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  117       | a_expr NOT_IN a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  118       | a_expr • IN a_expr
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  112       | a_expr NOT_LIKE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133

<<<<<<< HEAD
    $default  reduce using rule 117 (a_expr)

    Conflict between rule 117 and token OR resolved as reduce (OR < NOT_IN).
    Conflict between rule 117 and token AND resolved as reduce (AND < NOT_IN).
    Conflict between rule 117 and token EQ resolved as reduce (EQ < NOT_IN).
    Conflict between rule 117 and token LT resolved as reduce (LT < NOT_IN).
    Conflict between rule 117 and token GT resolved as reduce (GT < NOT_IN).
    Conflict between rule 117 and token LE resolved as reduce (LE < NOT_IN).
    Conflict between rule 117 and token GE resolved as reduce (GE < NOT_IN).
    Conflict between rule 117 and token NE resolved as reduce (NE < NOT_IN).
    Conflict between rule 117 and token LIKE resolved as shift (NOT_IN < LIKE).
    Conflict between rule 117 and token NOT_LIKE resolved as shift (NOT_IN < NOT_LIKE).
    Conflict between rule 117 and token IS resolved as reduce (IS < NOT_IN).
    Conflict between rule 117 and token IS_NOT resolved as reduce (IS_NOT < NOT_IN).
    Conflict between rule 117 and token NOT_IN resolved as reduce (%left NOT_IN).
    Conflict between rule 117 and token IN resolved as reduce (%left IN).
    Conflict between rule 117 and token '+' resolved as shift (NOT_IN < '+').
    Conflict between rule 117 and token '-' resolved as shift (NOT_IN < '-').
    Conflict between rule 117 and token '*' resolved as shift (NOT_IN < '*').
    Conflict between rule 117 and token '/' resolved as shift (NOT_IN < '/').
=======
    $default  reduce using rule 112 (a_expr)

    Conflict between rule 112 and token OR resolved as reduce (OR < NOT_LIKE).
    Conflict between rule 112 and token AND resolved as reduce (AND < NOT_LIKE).
    Conflict between rule 112 and token EQ resolved as reduce (EQ < NOT_LIKE).
    Conflict between rule 112 and token LT resolved as reduce (LT < NOT_LIKE).
    Conflict between rule 112 and token GT resolved as reduce (GT < NOT_LIKE).
    Conflict between rule 112 and token LE resolved as reduce (LE < NOT_LIKE).
    Conflict between rule 112 and token GE resolved as reduce (GE < NOT_LIKE).
    Conflict between rule 112 and token NE resolved as reduce (NE < NOT_LIKE).
    Conflict between rule 112 and token LIKE resolved as reduce (%left LIKE).
    Conflict between rule 112 and token NOT_LIKE resolved as reduce (%left NOT_LIKE).
    Conflict between rule 112 and token IS resolved as reduce (IS < NOT_LIKE).
    Conflict between rule 112 and token IS_NOT resolved as reduce (IS_NOT < NOT_LIKE).
    Conflict between rule 112 and token NOT_IN resolved as reduce (NOT_IN < NOT_LIKE).
    Conflict between rule 112 and token IN resolved as reduce (IN < NOT_LIKE).
    Conflict between rule 112 and token '+' resolved as shift (NOT_LIKE < '+').
    Conflict between rule 112 and token '-' resolved as shift (NOT_LIKE < '-').
    Conflict between rule 112 and token '*' resolved as shift (NOT_LIKE < '*').
    Conflict between rule 112 and token '/' resolved as shift (NOT_LIKE < '/').


State 174

   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  114       | a_expr IS a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    EQ        shift, and go to state 118
    LT        shift, and go to state 119
    GT        shift, and go to state 120
    LE        shift, and go to state 121
    GE        shift, and go to state 122
    NE        shift, and go to state 123
    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 114 (a_expr)

    Conflict between rule 114 and token OR resolved as reduce (OR < IS).
    Conflict between rule 114 and token AND resolved as reduce (AND < IS).
    Conflict between rule 114 and token EQ resolved as shift (IS < EQ).
    Conflict between rule 114 and token LT resolved as shift (IS < LT).
    Conflict between rule 114 and token GT resolved as shift (IS < GT).
    Conflict between rule 114 and token LE resolved as shift (IS < LE).
    Conflict between rule 114 and token GE resolved as shift (IS < GE).
    Conflict between rule 114 and token NE resolved as shift (IS < NE).
    Conflict between rule 114 and token LIKE resolved as shift (IS < LIKE).
    Conflict between rule 114 and token NOT_LIKE resolved as shift (IS < NOT_LIKE).
    Conflict between rule 114 and token IS resolved as reduce (%left IS).
    Conflict between rule 114 and token IS_NOT resolved as reduce (%left IS_NOT).
    Conflict between rule 114 and token NOT_IN resolved as shift (IS < NOT_IN).
    Conflict between rule 114 and token IN resolved as shift (IS < IN).
    Conflict between rule 114 and token '+' resolved as shift (IS < '+').
    Conflict between rule 114 and token '-' resolved as shift (IS < '-').
    Conflict between rule 114 and token '*' resolved as shift (IS < '*').
    Conflict between rule 114 and token '/' resolved as shift (IS < '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 175

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr
  118       | a_expr IN a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]

    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 118 (a_expr)

    Conflict between rule 118 and token OR resolved as reduce (OR < IN).
    Conflict between rule 118 and token AND resolved as reduce (AND < IN).
    Conflict between rule 118 and token EQ resolved as reduce (EQ < IN).
    Conflict between rule 118 and token LT resolved as reduce (LT < IN).
    Conflict between rule 118 and token GT resolved as reduce (GT < IN).
    Conflict between rule 118 and token LE resolved as reduce (LE < IN).
    Conflict between rule 118 and token GE resolved as reduce (GE < IN).
    Conflict between rule 118 and token NE resolved as reduce (NE < IN).
    Conflict between rule 118 and token LIKE resolved as shift (IN < LIKE).
    Conflict between rule 118 and token NOT_LIKE resolved as shift (IN < NOT_LIKE).
    Conflict between rule 118 and token IS resolved as reduce (IS < IN).
    Conflict between rule 118 and token IS_NOT resolved as reduce (IS_NOT < IN).
    Conflict between rule 118 and token NOT_IN resolved as reduce (%left NOT_IN).
    Conflict between rule 118 and token IN resolved as reduce (%left IN).
    Conflict between rule 118 and token '+' resolved as shift (IN < '+').
    Conflict between rule 118 and token '-' resolved as shift (IN < '-').
    Conflict between rule 118 and token '*' resolved as shift (IN < '*').
    Conflict between rule 118 and token '/' resolved as shift (IN < '/').
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  113       | a_expr IS_NOT a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, IS, IS_NOT, INNER_JOIN, ORDER_BY]
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    EQ        shift, and go to state 118
    LT        shift, and go to state 119
    GT        shift, and go to state 120
    LE        shift, and go to state 121
    GE        shift, and go to state 122
    NE        shift, and go to state 123
    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 113 (a_expr)

    Conflict between rule 113 and token OR resolved as reduce (OR < IS_NOT).
    Conflict between rule 113 and token AND resolved as reduce (AND < IS_NOT).
    Conflict between rule 113 and token EQ resolved as shift (IS_NOT < EQ).
    Conflict between rule 113 and token LT resolved as shift (IS_NOT < LT).
    Conflict between rule 113 and token GT resolved as shift (IS_NOT < GT).
    Conflict between rule 113 and token LE resolved as shift (IS_NOT < LE).
    Conflict between rule 113 and token GE resolved as shift (IS_NOT < GE).
    Conflict between rule 113 and token NE resolved as shift (IS_NOT < NE).
    Conflict between rule 113 and token LIKE resolved as shift (IS_NOT < LIKE).
    Conflict between rule 113 and token NOT_LIKE resolved as shift (IS_NOT < NOT_LIKE).
    Conflict between rule 113 and token IS resolved as reduce (%left IS).
    Conflict between rule 113 and token IS_NOT resolved as reduce (%left IS_NOT).
    Conflict between rule 113 and token NOT_IN resolved as shift (IS_NOT < NOT_IN).
    Conflict between rule 113 and token IN resolved as shift (IS_NOT < IN).
    Conflict between rule 113 and token '+' resolved as shift (IS_NOT < '+').
    Conflict between rule 113 and token '-' resolved as shift (IS_NOT < '-').
    Conflict between rule 113 and token '*' resolved as shift (IS_NOT < '*').
    Conflict between rule 113 and token '/' resolved as shift (IS_NOT < '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 176

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  101       | a_expr '+' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-']
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 101 (a_expr)

    Conflict between rule 101 and token OR resolved as reduce (OR < '+').
    Conflict between rule 101 and token AND resolved as reduce (AND < '+').
    Conflict between rule 101 and token EQ resolved as reduce (EQ < '+').
    Conflict between rule 101 and token LT resolved as reduce (LT < '+').
    Conflict between rule 101 and token GT resolved as reduce (GT < '+').
    Conflict between rule 101 and token LE resolved as reduce (LE < '+').
    Conflict between rule 101 and token GE resolved as reduce (GE < '+').
    Conflict between rule 101 and token NE resolved as reduce (NE < '+').
    Conflict between rule 101 and token LIKE resolved as reduce (LIKE < '+').
    Conflict between rule 101 and token NOT_LIKE resolved as reduce (NOT_LIKE < '+').
    Conflict between rule 101 and token IS resolved as reduce (IS < '+').
    Conflict between rule 101 and token IS_NOT resolved as reduce (IS_NOT < '+').
    Conflict between rule 101 and token NOT_IN resolved as reduce (NOT_IN < '+').
    Conflict between rule 101 and token IN resolved as reduce (IN < '+').
    Conflict between rule 101 and token '+' resolved as reduce (%left '+').
    Conflict between rule 101 and token '-' resolved as reduce (%left '-').
    Conflict between rule 101 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 101 and token '/' resolved as shift ('+' < '/').
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  115       | a_expr NOT_IN a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]
  116       | a_expr • IN a_expr

    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 115 (a_expr)

    Conflict between rule 115 and token OR resolved as reduce (OR < NOT_IN).
    Conflict between rule 115 and token AND resolved as reduce (AND < NOT_IN).
    Conflict between rule 115 and token EQ resolved as reduce (EQ < NOT_IN).
    Conflict between rule 115 and token LT resolved as reduce (LT < NOT_IN).
    Conflict between rule 115 and token GT resolved as reduce (GT < NOT_IN).
    Conflict between rule 115 and token LE resolved as reduce (LE < NOT_IN).
    Conflict between rule 115 and token GE resolved as reduce (GE < NOT_IN).
    Conflict between rule 115 and token NE resolved as reduce (NE < NOT_IN).
    Conflict between rule 115 and token LIKE resolved as shift (NOT_IN < LIKE).
    Conflict between rule 115 and token NOT_LIKE resolved as shift (NOT_IN < NOT_LIKE).
    Conflict between rule 115 and token IS resolved as reduce (IS < NOT_IN).
    Conflict between rule 115 and token IS_NOT resolved as reduce (IS_NOT < NOT_IN).
    Conflict between rule 115 and token NOT_IN resolved as reduce (%left NOT_IN).
    Conflict between rule 115 and token IN resolved as reduce (%left IN).
    Conflict between rule 115 and token '+' resolved as shift (NOT_IN < '+').
    Conflict between rule 115 and token '-' resolved as shift (NOT_IN < '-').
    Conflict between rule 115 and token '*' resolved as shift (NOT_IN < '*').
    Conflict between rule 115 and token '/' resolved as shift (NOT_IN < '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 177

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  102       | a_expr '-' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-']
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 102 (a_expr)

    Conflict between rule 102 and token OR resolved as reduce (OR < '-').
    Conflict between rule 102 and token AND resolved as reduce (AND < '-').
    Conflict between rule 102 and token EQ resolved as reduce (EQ < '-').
    Conflict between rule 102 and token LT resolved as reduce (LT < '-').
    Conflict between rule 102 and token GT resolved as reduce (GT < '-').
    Conflict between rule 102 and token LE resolved as reduce (LE < '-').
    Conflict between rule 102 and token GE resolved as reduce (GE < '-').
    Conflict between rule 102 and token NE resolved as reduce (NE < '-').
    Conflict between rule 102 and token LIKE resolved as reduce (LIKE < '-').
    Conflict between rule 102 and token NOT_LIKE resolved as reduce (NOT_LIKE < '-').
    Conflict between rule 102 and token IS resolved as reduce (IS < '-').
    Conflict between rule 102 and token IS_NOT resolved as reduce (IS_NOT < '-').
    Conflict between rule 102 and token NOT_IN resolved as reduce (NOT_IN < '-').
    Conflict between rule 102 and token IN resolved as reduce (IN < '-').
    Conflict between rule 102 and token '+' resolved as reduce (%left '+').
    Conflict between rule 102 and token '-' resolved as reduce (%left '-').
    Conflict between rule 102 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 102 and token '/' resolved as shift ('-' < '/').
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr
  116       | a_expr IN a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY]

    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 116 (a_expr)

    Conflict between rule 116 and token OR resolved as reduce (OR < IN).
    Conflict between rule 116 and token AND resolved as reduce (AND < IN).
    Conflict between rule 116 and token EQ resolved as reduce (EQ < IN).
    Conflict between rule 116 and token LT resolved as reduce (LT < IN).
    Conflict between rule 116 and token GT resolved as reduce (GT < IN).
    Conflict between rule 116 and token LE resolved as reduce (LE < IN).
    Conflict between rule 116 and token GE resolved as reduce (GE < IN).
    Conflict between rule 116 and token NE resolved as reduce (NE < IN).
    Conflict between rule 116 and token LIKE resolved as shift (IN < LIKE).
    Conflict between rule 116 and token NOT_LIKE resolved as shift (IN < NOT_LIKE).
    Conflict between rule 116 and token IS resolved as reduce (IS < IN).
    Conflict between rule 116 and token IS_NOT resolved as reduce (IS_NOT < IN).
    Conflict between rule 116 and token NOT_IN resolved as reduce (%left NOT_IN).
    Conflict between rule 116 and token IN resolved as reduce (%left IN).
    Conflict between rule 116 and token '+' resolved as shift (IN < '+').
    Conflict between rule 116 and token '-' resolved as shift (IN < '-').
    Conflict between rule 116 and token '*' resolved as shift (IN < '*').
    Conflict between rule 116 and token '/' resolved as shift (IN < '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 178

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  103       | a_expr '*' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    $default  reduce using rule 103 (a_expr)

    Conflict between rule 103 and token OR resolved as reduce (OR < '*').
    Conflict between rule 103 and token AND resolved as reduce (AND < '*').
    Conflict between rule 103 and token EQ resolved as reduce (EQ < '*').
    Conflict between rule 103 and token LT resolved as reduce (LT < '*').
    Conflict between rule 103 and token GT resolved as reduce (GT < '*').
    Conflict between rule 103 and token LE resolved as reduce (LE < '*').
    Conflict between rule 103 and token GE resolved as reduce (GE < '*').
    Conflict between rule 103 and token NE resolved as reduce (NE < '*').
    Conflict between rule 103 and token LIKE resolved as reduce (LIKE < '*').
    Conflict between rule 103 and token NOT_LIKE resolved as reduce (NOT_LIKE < '*').
    Conflict between rule 103 and token IS resolved as reduce (IS < '*').
    Conflict between rule 103 and token IS_NOT resolved as reduce (IS_NOT < '*').
    Conflict between rule 103 and token NOT_IN resolved as reduce (NOT_IN < '*').
    Conflict between rule 103 and token IN resolved as reduce (IN < '*').
    Conflict between rule 103 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 103 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 103 and token '*' resolved as reduce (%left '*').
    Conflict between rule 103 and token '/' resolved as reduce (%left '/').
=======
   99 a_expr: a_expr • '+' a_expr
   99       | a_expr '+' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-']
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    '*'  shift, and go to state 132
    '/'  shift, and go to state 133

    $default  reduce using rule 99 (a_expr)

    Conflict between rule 99 and token OR resolved as reduce (OR < '+').
    Conflict between rule 99 and token AND resolved as reduce (AND < '+').
    Conflict between rule 99 and token EQ resolved as reduce (EQ < '+').
    Conflict between rule 99 and token LT resolved as reduce (LT < '+').
    Conflict between rule 99 and token GT resolved as reduce (GT < '+').
    Conflict between rule 99 and token LE resolved as reduce (LE < '+').
    Conflict between rule 99 and token GE resolved as reduce (GE < '+').
    Conflict between rule 99 and token NE resolved as reduce (NE < '+').
    Conflict between rule 99 and token LIKE resolved as reduce (LIKE < '+').
    Conflict between rule 99 and token NOT_LIKE resolved as reduce (NOT_LIKE < '+').
    Conflict between rule 99 and token IS resolved as reduce (IS < '+').
    Conflict between rule 99 and token IS_NOT resolved as reduce (IS_NOT < '+').
    Conflict between rule 99 and token NOT_IN resolved as reduce (NOT_IN < '+').
    Conflict between rule 99 and token IN resolved as reduce (IN < '+').
    Conflict between rule 99 and token '+' resolved as reduce (%left '+').
    Conflict between rule 99 and token '-' resolved as reduce (%left '-').
    Conflict between rule 99 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 99 and token '/' resolved as shift ('+' < '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 179

<<<<<<< HEAD
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  104       | a_expr '/' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    $default  reduce using rule 104 (a_expr)

    Conflict between rule 104 and token OR resolved as reduce (OR < '/').
    Conflict between rule 104 and token AND resolved as reduce (AND < '/').
    Conflict between rule 104 and token EQ resolved as reduce (EQ < '/').
    Conflict between rule 104 and token LT resolved as reduce (LT < '/').
    Conflict between rule 104 and token GT resolved as reduce (GT < '/').
    Conflict between rule 104 and token LE resolved as reduce (LE < '/').
    Conflict between rule 104 and token GE resolved as reduce (GE < '/').
    Conflict between rule 104 and token NE resolved as reduce (NE < '/').
    Conflict between rule 104 and token LIKE resolved as reduce (LIKE < '/').
    Conflict between rule 104 and token NOT_LIKE resolved as reduce (NOT_LIKE < '/').
    Conflict between rule 104 and token IS resolved as reduce (IS < '/').
    Conflict between rule 104 and token IS_NOT resolved as reduce (IS_NOT < '/').
    Conflict between rule 104 and token NOT_IN resolved as reduce (NOT_IN < '/').
    Conflict between rule 104 and token IN resolved as reduce (IN < '/').
    Conflict between rule 104 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 104 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 104 and token '*' resolved as reduce (%left '*').
    Conflict between rule 104 and token '/' resolved as reduce (%left '/').
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  100       | a_expr '-' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-']
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    '*'  shift, and go to state 132
    '/'  shift, and go to state 133

    $default  reduce using rule 100 (a_expr)

    Conflict between rule 100 and token OR resolved as reduce (OR < '-').
    Conflict between rule 100 and token AND resolved as reduce (AND < '-').
    Conflict between rule 100 and token EQ resolved as reduce (EQ < '-').
    Conflict between rule 100 and token LT resolved as reduce (LT < '-').
    Conflict between rule 100 and token GT resolved as reduce (GT < '-').
    Conflict between rule 100 and token LE resolved as reduce (LE < '-').
    Conflict between rule 100 and token GE resolved as reduce (GE < '-').
    Conflict between rule 100 and token NE resolved as reduce (NE < '-').
    Conflict between rule 100 and token LIKE resolved as reduce (LIKE < '-').
    Conflict between rule 100 and token NOT_LIKE resolved as reduce (NOT_LIKE < '-').
    Conflict between rule 100 and token IS resolved as reduce (IS < '-').
    Conflict between rule 100 and token IS_NOT resolved as reduce (IS_NOT < '-').
    Conflict between rule 100 and token NOT_IN resolved as reduce (NOT_IN < '-').
    Conflict between rule 100 and token IN resolved as reduce (IN < '-').
    Conflict between rule 100 and token '+' resolved as reduce (%left '+').
    Conflict between rule 100 and token '-' resolved as reduce (%left '-').
    Conflict between rule 100 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 100 and token '/' resolved as shift ('-' < '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 180

<<<<<<< HEAD
   78 select_stmt: SELECT select_attr FROM ID • rel_list where order group_by having
   80 join: ID • INNER_JOIN ID join_equal join_list

    COMMA       shift, and go to state 202
    INNER_JOIN  shift, and go to state 203

    $default  reduce using rule 144 (rel_list)

    rel_list  go to state 204
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  101       | a_expr '*' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    $default  reduce using rule 101 (a_expr)

    Conflict between rule 101 and token OR resolved as reduce (OR < '*').
    Conflict between rule 101 and token AND resolved as reduce (AND < '*').
    Conflict between rule 101 and token EQ resolved as reduce (EQ < '*').
    Conflict between rule 101 and token LT resolved as reduce (LT < '*').
    Conflict between rule 101 and token GT resolved as reduce (GT < '*').
    Conflict between rule 101 and token LE resolved as reduce (LE < '*').
    Conflict between rule 101 and token GE resolved as reduce (GE < '*').
    Conflict between rule 101 and token NE resolved as reduce (NE < '*').
    Conflict between rule 101 and token LIKE resolved as reduce (LIKE < '*').
    Conflict between rule 101 and token NOT_LIKE resolved as reduce (NOT_LIKE < '*').
    Conflict between rule 101 and token IS resolved as reduce (IS < '*').
    Conflict between rule 101 and token IS_NOT resolved as reduce (IS_NOT < '*').
    Conflict between rule 101 and token NOT_IN resolved as reduce (NOT_IN < '*').
    Conflict between rule 101 and token IN resolved as reduce (IN < '*').
    Conflict between rule 101 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 101 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 101 and token '*' resolved as reduce (%left '*').
    Conflict between rule 101 and token '/' resolved as reduce (%left '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 181

<<<<<<< HEAD
   79 select_stmt: SELECT select_attr FROM join • where order group_by having

    WHERE  shift, and go to state 186

    $default  reduce using rule 157 (where)

    where  go to state 205
=======
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  102       | a_expr '/' a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, COMMA, FROM, WHERE, OR, HAVING, AND, EQ, LT, GT, LE, GE, NE, LIKE, NOT_LIKE, IS, IS_NOT, INNER_JOIN, NOT_IN, IN, ORDER_BY, '+', '-', '*', '/']
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    $default  reduce using rule 102 (a_expr)

    Conflict between rule 102 and token OR resolved as reduce (OR < '/').
    Conflict between rule 102 and token AND resolved as reduce (AND < '/').
    Conflict between rule 102 and token EQ resolved as reduce (EQ < '/').
    Conflict between rule 102 and token LT resolved as reduce (LT < '/').
    Conflict between rule 102 and token GT resolved as reduce (GT < '/').
    Conflict between rule 102 and token LE resolved as reduce (LE < '/').
    Conflict between rule 102 and token GE resolved as reduce (GE < '/').
    Conflict between rule 102 and token NE resolved as reduce (NE < '/').
    Conflict between rule 102 and token LIKE resolved as reduce (LIKE < '/').
    Conflict between rule 102 and token NOT_LIKE resolved as reduce (NOT_LIKE < '/').
    Conflict between rule 102 and token IS resolved as reduce (IS < '/').
    Conflict between rule 102 and token IS_NOT resolved as reduce (IS_NOT < '/').
    Conflict between rule 102 and token NOT_IN resolved as reduce (NOT_IN < '/').
    Conflict between rule 102 and token IN resolved as reduce (IN < '/').
    Conflict between rule 102 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 102 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 102 and token '*' resolved as reduce (%left '*').
    Conflict between rule 102 and token '/' resolved as reduce (%left '/').
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 182

<<<<<<< HEAD
  131 function: func_LA '*' RBRACE •

    $default  reduce using rule 131 (function)
=======
   76 select_stmt: SELECT select_attr FROM ID • alias rel_list_with_alias where order group_by having
   78 join: ID • alias INNER_JOIN ID alias join_equal join_list

    AS  shift, and go to state 200

    $default  reduce using rule 74 (alias)

    alias  go to state 206
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 183

<<<<<<< HEAD
  130 function: func_LA a_expr RBRACE •

    $default  reduce using rule 130 (function)
=======
   77 select_stmt: SELECT select_attr FROM join • where order group_by having

    WHERE  shift, and go to state 189

    $default  reduce using rule 161 (where)

    where  go to state 207
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 184

<<<<<<< HEAD
=======
  129 function: func_LA '*' RBRACE •

    $default  reduce using rule 129 (function)


State 185

  128 function: func_LA a_expr RBRACE •

    $default  reduce using rule 128 (function)


State 186

  130 function: func_LA rel_attr COMMA • value_with_MINUS RBRACE

    NULL_T  shift, and go to state 208
    NUMBER  shift, and go to state 209
    FLOAT   shift, and go to state 210
    DATE    shift, and go to state 211
    SSS     shift, and go to state 212
    '-'     shift, and go to state 213

    value_with_MINUS  go to state 214


State 187

>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273
   31 show_index_stmt: SHOW INDEX FROM ID •

    $default  reduce using rule 31 (show_index_stmt)


<<<<<<< HEAD
State 185
=======
State 188
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

   55 insert_stmt: INSERT INTO ID VALUES • LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

<<<<<<< HEAD
    LBRACE  shift, and go to state 206


State 186

  158 where: WHERE • a_expr
=======
    LBRACE  shift, and go to state 215


State 189

  162 where: WHERE • a_expr
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

<<<<<<< HEAD
    value                   go to state 69
    a_expr                  go to state 207
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 187

   71 delete_stmt: DELETE FROM ID where •

    $default  reduce using rule 71 (delete_stmt)


State 188

   73 update_expr: ID • EQ LBRACE select_stmt RBRACE update_expr_list
   74            | ID • EQ value update_expr_list

    EQ  shift, and go to state 208


State 189

   72 update_stmt: UPDATE ID SET update_expr • where

    WHERE  shift, and go to state 186

    $default  reduce using rule 157 (where)

    where  go to state 209


State 190

  161 set_variable_stmt: SET ID EQ value •

    $default  reduce using rule 161 (set_variable_stmt)
=======
    value                   go to state 72
    a_expr                  go to state 216
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 190

   67 delete_stmt: DELETE FROM ID where •

    $default  reduce using rule 67 (delete_stmt)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 191

<<<<<<< HEAD
  159 load_data_stmt: LOAD DATA INFILE SSS • INTO TABLE ID

    INTO  shift, and go to state 210
=======
   69 update_expr: ID • EQ LBRACE select_stmt RBRACE update_expr_list
   70            | ID • EQ value update_expr_list

    EQ  shift, and go to state 217
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 192

<<<<<<< HEAD
   47 attr_def: ID • type LBRACE number RBRACE nullable_marker
   48         | ID • type nullable_marker

    INT_T     shift, and go to state 211
    STRING_T  shift, and go to state 212
    FLOAT_T   shift, and go to state 213
    DATE_T    shift, and go to state 214
    TEXT_T    shift, and go to state 215

    type  go to state 216
=======
   68 update_stmt: UPDATE ID SET update_expr • where

    WHERE  shift, and go to state 189

    $default  reduce using rule 161 (where)

    where  go to state 218
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 193

<<<<<<< HEAD
   43 create_table_stmt: CREATE TABLE ID LBRACE attr_def • attr_def_list RBRACE as_marker select_stmt
   44                  | CREATE TABLE ID LBRACE attr_def • attr_def_list RBRACE

    COMMA  shift, and go to state 217

    $default  reduce using rule 45 (attr_def_list)

    attr_def_list  go to state 218
=======
  165 set_variable_stmt: SET ID EQ value •

    $default  reduce using rule 165 (set_variable_stmt)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 194

<<<<<<< HEAD
   42 create_table_stmt: CREATE TABLE ID as_marker select_stmt •

    $default  reduce using rule 42 (create_table_stmt)
=======
  163 load_data_stmt: LOAD DATA INFILE SSS • INTO TABLE ID

    INTO  shift, and go to state 219
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 195

<<<<<<< HEAD
   35 create_index_stmt: CREATE unique_marker INDEX ID ON • ID LBRACE ID rel_list RBRACE

    ID  shift, and go to state 219
=======
   43 attr_def: ID • type LBRACE number RBRACE nullable_marker
   44         | ID • type nullable_marker

    INT_T     shift, and go to state 220
    STRING_T  shift, and go to state 221
    FLOAT_T   shift, and go to state 222
    DATE_T    shift, and go to state 223
    TEXT_T    shift, and go to state 224

    type  go to state 225
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 196

<<<<<<< HEAD
=======
   40 create_table_stmt: CREATE TABLE ID LBRACE attr_def • attr_def_list RBRACE

    COMMA  shift, and go to state 226

    $default  reduce using rule 41 (attr_def_list)

    attr_def_list  go to state 227


State 197

   35 create_index_stmt: CREATE unique_marker INDEX ID ON • ID LBRACE ID rel_list RBRACE

    ID  shift, and go to state 228


State 198

>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273
   36 drop_index_stmt: DROP INDEX ID ON ID •

    $default  reduce using rule 36 (drop_index_stmt)


<<<<<<< HEAD
State 197

  127 value_list_LA: value COMMA value •

    $default  reduce using rule 127 (value_list_LA)


State 198

  126 value_list_LA: value_list_LA COMMA value •

    $default  reduce using rule 126 (value_list_LA)


State 199

  120 a_expr: NOT_EXISTS LBRACE select_stmt RBRACE •

    $default  reduce using rule 120 (a_expr)
=======
State 199

  125 value_list_LA: value COMMA value •

    $default  reduce using rule 125 (value_list_LA)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 200

<<<<<<< HEAD
  119 a_expr: EXISTS LBRACE select_stmt RBRACE •

    $default  reduce using rule 119 (a_expr)
=======
   75 alias: AS • ID

    ID  shift, and go to state 229
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 201

<<<<<<< HEAD
  143 a_expr_list: COMMA a_expr a_expr_list •

    $default  reduce using rule 143 (a_expr_list)
=======
  119 c_expr: LBRACE a_expr RBRACE alias •

    $default  reduce using rule 119 (c_expr)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 202

<<<<<<< HEAD
  145 rel_list: COMMA • ID rel_list

    ID  shift, and go to state 220
=======
  124 value_list_LA: value_list_LA COMMA value •

    $default  reduce using rule 124 (value_list_LA)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 203

<<<<<<< HEAD
   80 join: ID INNER_JOIN • ID join_equal join_list

    ID  shift, and go to state 221
=======
  118 a_expr: NOT_EXISTS LBRACE select_stmt RBRACE •

    $default  reduce using rule 118 (a_expr)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 204

<<<<<<< HEAD
   78 select_stmt: SELECT select_attr FROM ID rel_list • where order group_by having

    WHERE  shift, and go to state 186

    $default  reduce using rule 157 (where)

    where  go to state 222


State 205

   79 select_stmt: SELECT select_attr FROM join where • order group_by having

    ORDER_BY  shift, and go to state 223

    $default  reduce using rule 150 (order)

    order  go to state 224


State 206

   55 insert_stmt: INSERT INTO ID VALUES LBRACE • value_with_MINUS value_list_with_MINUS RBRACE insert_list

    NULL_T  shift, and go to state 225
    NUMBER  shift, and go to state 226
    FLOAT   shift, and go to state 227
    DATE    shift, and go to state 228
    SSS     shift, and go to state 229
    '-'     shift, and go to state 230

    value_with_MINUS  go to state 231


State 207

  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr
  158 where: WHERE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, HAVING, ORDER_BY]

    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 158 (where)
=======
  117 a_expr: EXISTS LBRACE select_stmt RBRACE •

    $default  reduce using rule 117 (a_expr)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 208

<<<<<<< HEAD
   73 update_expr: ID EQ • LBRACE select_stmt RBRACE update_expr_list
   74            | ID EQ • value update_expr_list

    LBRACE  shift, and go to state 232
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 233


State 209

   72 update_stmt: UPDATE ID SET update_expr where •

    $default  reduce using rule 72 (update_stmt)


State 210

  159 load_data_stmt: LOAD DATA INFILE SSS INTO • TABLE ID

    TABLE  shift, and go to state 234


State 211

   50 type: INT_T •

    $default  reduce using rule 50 (type)


State 212

   51 type: STRING_T •

    $default  reduce using rule 51 (type)


State 213

   53 type: FLOAT_T •

    $default  reduce using rule 53 (type)


State 214

   54 type: DATE_T •

    $default  reduce using rule 54 (type)


State 215

   52 type: TEXT_T •

    $default  reduce using rule 52 (type)


State 216

   47 attr_def: ID type • LBRACE number RBRACE nullable_marker
   48         | ID type • nullable_marker

    UNNULLABLE  shift, and go to state 235
    LBRACE      shift, and go to state 236
    NULL_T      shift, and go to state 237

    $default  reduce using rule 37 (nullable_marker)

    nullable_marker  go to state 238


State 217

   46 attr_def_list: COMMA • attr_def attr_def_list

    ID  shift, and go to state 192

    attr_def  go to state 239


State 218

   43 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list • RBRACE as_marker select_stmt
   44                  | CREATE TABLE ID LBRACE attr_def attr_def_list • RBRACE

    RBRACE  shift, and go to state 240


State 219

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID • LBRACE ID rel_list RBRACE

    LBRACE  shift, and go to state 241


State 220

  145 rel_list: COMMA ID • rel_list

    COMMA  shift, and go to state 202

    $default  reduce using rule 144 (rel_list)

    rel_list  go to state 242


State 221

   80 join: ID INNER_JOIN ID • join_equal join_list

    ON  shift, and go to state 243

    $default  reduce using rule 83 (join_equal)

    join_equal  go to state 244


State 222

   78 select_stmt: SELECT select_attr FROM ID rel_list where • order group_by having
=======
  145 a_expr_list: COMMA a_expr a_expr_list •

    $default  reduce using rule 145 (a_expr_list)


State 206

   76 select_stmt: SELECT select_attr FROM ID alias • rel_list_with_alias where order group_by having
   78 join: ID alias • INNER_JOIN ID alias join_equal join_list

    COMMA       shift, and go to state 230
    INNER_JOIN  shift, and go to state 231

    $default  reduce using rule 146 (rel_list_with_alias)

    rel_list_with_alias  go to state 232


State 207

   77 select_stmt: SELECT select_attr FROM join where • order group_by having

    ORDER_BY  shift, and go to state 233

    $default  reduce using rule 154 (order)

    order  go to state 234


State 208

   56 value_with_MINUS: NULL_T •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    ORDER_BY  shift, and go to state 223

    $default  reduce using rule 150 (order)

    order  go to state 245


State 209

  151 order: ORDER_BY • rel_attr asc_or_desc order_list

    ID  shift, and go to state 65

    rel_attr  go to state 246


State 210

   79 select_stmt: SELECT select_attr FROM join where order • group_by having

    GROUP_BY  shift, and go to state 247

    $default  reduce using rule 146 (group_by)

    group_by  go to state 248


State 211

   60 value_with_MINUS: NULL_T •

    $default  reduce using rule 60 (value_with_MINUS)


State 212

   61 value_with_MINUS: NUMBER •

    $default  reduce using rule 61 (value_with_MINUS)


State 213

   63 value_with_MINUS: FLOAT •

<<<<<<< HEAD
    $default  reduce using rule 63 (value_with_MINUS)
=======
    NUMBER  shift, and go to state 235
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 214

<<<<<<< HEAD
   64 value_with_MINUS: DATE •

    $default  reduce using rule 64 (value_with_MINUS)
=======
  130 function: func_LA rel_attr COMMA value_with_MINUS • RBRACE

    RBRACE  shift, and go to state 236


State 215
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

   51 insert_stmt: INSERT INTO ID VALUES LBRACE • value_with_MINUS value_list_with_MINUS RBRACE insert_list

    NULL_T  shift, and go to state 208
    NUMBER  shift, and go to state 209
    FLOAT   shift, and go to state 210
    DATE    shift, and go to state 211
    SSS     shift, and go to state 212
    '-'     shift, and go to state 213

<<<<<<< HEAD
   65 value_with_MINUS: SSS •

    $default  reduce using rule 65 (value_with_MINUS)
=======
    value_with_MINUS  go to state 237


State 216
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr
  162 where: WHERE a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, HAVING, ORDER_BY]

    OR        shift, and go to state 116
    AND       shift, and go to state 117
    EQ        shift, and go to state 118
    LT        shift, and go to state 119
    GT        shift, and go to state 120
    LE        shift, and go to state 121
    GE        shift, and go to state 122
    NE        shift, and go to state 123
    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    IS        shift, and go to state 126
    IS_NOT    shift, and go to state 127
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

<<<<<<< HEAD
   62 value_with_MINUS: '-' • NUMBER

    NUMBER  shift, and go to state 249


State 231

   55 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS • value_list_with_MINUS RBRACE insert_list

    COMMA  shift, and go to state 250

    $default  reduce using rule 58 (value_list_with_MINUS)

    value_list_with_MINUS  go to state 251


State 232

   73 update_expr: ID EQ LBRACE • select_stmt RBRACE update_expr_list

    SELECT  shift, and go to state 4

    select_stmt  go to state 252


State 233

   74 update_expr: ID EQ value • update_expr_list

    COMMA  shift, and go to state 253

    $default  reduce using rule 75 (update_expr_list)

    update_expr_list  go to state 254


State 234

  159 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE • ID

    ID  shift, and go to state 255


State 235

   38 nullable_marker: UNNULLABLE •

    $default  reduce using rule 38 (nullable_marker)


State 236

   47 attr_def: ID type LBRACE • number RBRACE nullable_marker

    NUMBER  shift, and go to state 256

    number  go to state 257


State 237

   39 nullable_marker: NULL_T •

    $default  reduce using rule 39 (nullable_marker)


State 238

   48 attr_def: ID type nullable_marker •

    $default  reduce using rule 48 (attr_def)


State 239

   46 attr_def_list: COMMA attr_def • attr_def_list

    COMMA  shift, and go to state 217

    $default  reduce using rule 45 (attr_def_list)

    attr_def_list  go to state 258


State 240

   43 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE • as_marker select_stmt
   44                  | CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE •  [$end, SEMICOLON]

    AS  shift, and go to state 142

    SELECT    reduce using rule 40 (as_marker)
    $default  reduce using rule 44 (create_table_stmt)

    as_marker  go to state 259


State 241

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE • ID rel_list RBRACE

    ID  shift, and go to state 260


State 242

  145 rel_list: COMMA ID rel_list •

    $default  reduce using rule 145 (rel_list)


State 243

   84 join_equal: ON • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 261
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 244

   80 join: ID INNER_JOIN ID join_equal • join_list

    INNER_JOIN  shift, and go to state 262

    $default  reduce using rule 82 (join_list)

    join_list  go to state 263


State 245

   78 select_stmt: SELECT select_attr FROM ID rel_list where order • group_by having

    GROUP_BY  shift, and go to state 247

    $default  reduce using rule 146 (group_by)

    group_by  go to state 264


State 246

  151 order: ORDER_BY rel_attr • asc_or_desc order_list

    DESC  shift, and go to state 265
    ASC   shift, and go to state 266

    $default  reduce using rule 154 (asc_or_desc)

    asc_or_desc  go to state 267


State 247

  147 group_by: GROUP_BY • rel_attr attr_list

    ID  shift, and go to state 65

    rel_attr  go to state 268


State 248

   79 select_stmt: SELECT select_attr FROM join where order group_by • having

    HAVING  shift, and go to state 269

    $default  reduce using rule 148 (having)

    having  go to state 270


State 249

   62 value_with_MINUS: '-' NUMBER •

    $default  reduce using rule 62 (value_with_MINUS)


State 250

   59 value_list_with_MINUS: COMMA • value_with_MINUS value_list_with_MINUS

    NULL_T  shift, and go to state 225
    NUMBER  shift, and go to state 226
    FLOAT   shift, and go to state 227
    DATE    shift, and go to state 228
    SSS     shift, and go to state 229
    '-'     shift, and go to state 230

    value_with_MINUS  go to state 271


State 251

   55 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS • RBRACE insert_list

    RBRACE  shift, and go to state 272


State 252

   73 update_expr: ID EQ LBRACE select_stmt • RBRACE update_expr_list

    RBRACE  shift, and go to state 273


State 253

   76 update_expr_list: COMMA • ID EQ LBRACE select_stmt RBRACE update_expr_list
   77                 | COMMA • ID EQ value update_expr_list

    ID  shift, and go to state 274


State 254

   74 update_expr: ID EQ value update_expr_list •

    $default  reduce using rule 74 (update_expr)


State 255

  159 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE ID •

    $default  reduce using rule 159 (load_data_stmt)


State 256

   49 number: NUMBER •

    $default  reduce using rule 49 (number)


State 257

   47 attr_def: ID type LBRACE number • RBRACE nullable_marker

    RBRACE  shift, and go to state 275


State 258

   46 attr_def_list: COMMA attr_def attr_def_list •

    $default  reduce using rule 46 (attr_def_list)


State 259

   43 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE as_marker • select_stmt

    SELECT  shift, and go to state 4

    select_stmt  go to state 276


State 260

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID • rel_list RBRACE

    COMMA  shift, and go to state 202

    $default  reduce using rule 144 (rel_list)

    rel_list  go to state 277


State 261

   84 join_equal: ON a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, WHERE, HAVING, INNER_JOIN, ORDER_BY]
  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr

    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 84 (join_equal)


State 262

   81 join_list: INNER_JOIN • ID join_equal join_list

    ID  shift, and go to state 278


State 263

   80 join: ID INNER_JOIN ID join_equal join_list •

    $default  reduce using rule 80 (join)


State 264

   78 select_stmt: SELECT select_attr FROM ID rel_list where order group_by • having

    HAVING  shift, and go to state 269

    $default  reduce using rule 148 (having)

    having  go to state 279


State 265

  156 asc_or_desc: DESC •

    $default  reduce using rule 156 (asc_or_desc)


State 266

  155 asc_or_desc: ASC •

    $default  reduce using rule 155 (asc_or_desc)


State 267

  151 order: ORDER_BY rel_attr asc_or_desc • order_list

    COMMA  shift, and go to state 280

    $default  reduce using rule 152 (order_list)

    order_list  go to state 281


State 268

  147 group_by: GROUP_BY rel_attr • attr_list

    COMMA  shift, and go to state 282

    $default  reduce using rule 140 (attr_list)

    attr_list  go to state 283


State 269

  149 having: HAVING • a_expr

    AGG_MAX     shift, and go to state 57
    AGG_MIN     shift, and go to state 58
    AGG_COUNT   shift, and go to state 59
    AGG_AVG     shift, and go to state 60
    AGG_SUM     shift, and go to state 61
    LBRACE      shift, and go to state 62
    NULL_T      shift, and go to state 48
    NOT_EXISTS  shift, and go to state 63
    EXISTS      shift, and go to state 64
    NUMBER      shift, and go to state 49
    FLOAT       shift, and go to state 50
    DATE        shift, and go to state 51
    ID          shift, and go to state 65
    SSS         shift, and go to state 52
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    value                   go to state 69
    a_expr                  go to state 284
    c_expr                  go to state 71
    value_list_LALR         go to state 72
    select_stmt_with_paren  go to state 73
    function                go to state 75
    func_LA                 go to state 76
    func_name               go to state 77
    rel_attr                go to state 78


State 270

   79 select_stmt: SELECT select_attr FROM join where order group_by having •

    $default  reduce using rule 79 (select_stmt)


State 271

   59 value_list_with_MINUS: COMMA value_with_MINUS • value_list_with_MINUS

    COMMA  shift, and go to state 250

    $default  reduce using rule 58 (value_list_with_MINUS)

    value_list_with_MINUS  go to state 285


State 272

   55 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE • insert_list

    COMMA  shift, and go to state 286

    $default  reduce using rule 56 (insert_list)

    insert_list  go to state 287


State 273

   73 update_expr: ID EQ LBRACE select_stmt RBRACE • update_expr_list

    COMMA  shift, and go to state 253

    $default  reduce using rule 75 (update_expr_list)

    update_expr_list  go to state 288


State 274

   76 update_expr_list: COMMA ID • EQ LBRACE select_stmt RBRACE update_expr_list
   77                 | COMMA ID • EQ value update_expr_list

    EQ  shift, and go to state 289


State 275

   47 attr_def: ID type LBRACE number RBRACE • nullable_marker

    UNNULLABLE  shift, and go to state 235
    NULL_T      shift, and go to state 237

    $default  reduce using rule 37 (nullable_marker)

    nullable_marker  go to state 290


State 276

   43 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE as_marker select_stmt •

    $default  reduce using rule 43 (create_table_stmt)


State 277

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID rel_list • RBRACE

    RBRACE  shift, and go to state 291


State 278

   81 join_list: INNER_JOIN ID • join_equal join_list

    ON  shift, and go to state 243

    $default  reduce using rule 83 (join_equal)

    join_equal  go to state 292


State 279

   78 select_stmt: SELECT select_attr FROM ID rel_list where order group_by having •

    $default  reduce using rule 78 (select_stmt)


State 280

  153 order_list: COMMA • rel_attr asc_or_desc order_list

    ID  shift, and go to state 65

    rel_attr  go to state 293


State 281

  151 order: ORDER_BY rel_attr asc_or_desc order_list •

    $default  reduce using rule 151 (order)


State 282

  141 attr_list: COMMA • rel_attr attr_list

    ID  shift, and go to state 65

    rel_attr  go to state 294


State 283

  147 group_by: GROUP_BY rel_attr attr_list •

    $default  reduce using rule 147 (group_by)


State 284

  101 a_expr: a_expr • '+' a_expr
  102       | a_expr • '-' a_expr
  103       | a_expr • '*' a_expr
  104       | a_expr • '/' a_expr
  105       | a_expr • AND a_expr
  106       | a_expr • OR a_expr
  107       | a_expr • EQ a_expr
  108       | a_expr • LT a_expr
  109       | a_expr • GT a_expr
  110       | a_expr • LE a_expr
  111       | a_expr • GE a_expr
  112       | a_expr • NE a_expr
  113       | a_expr • LIKE a_expr
  114       | a_expr • NOT_LIKE a_expr
  115       | a_expr • IS_NOT a_expr
  116       | a_expr • IS a_expr
  117       | a_expr • NOT_IN a_expr
  118       | a_expr • IN a_expr
  149 having: HAVING a_expr •  [$end, SEMICOLON, RBRACE]

    OR        shift, and go to state 113
    AND       shift, and go to state 114
    EQ        shift, and go to state 115
    LT        shift, and go to state 116
    GT        shift, and go to state 117
    LE        shift, and go to state 118
    GE        shift, and go to state 119
    NE        shift, and go to state 120
    LIKE      shift, and go to state 121
    NOT_LIKE  shift, and go to state 122
    IS        shift, and go to state 123
    IS_NOT    shift, and go to state 124
    NOT_IN    shift, and go to state 125
    IN        shift, and go to state 126
    '+'       shift, and go to state 127
    '-'       shift, and go to state 128
    '*'       shift, and go to state 129
    '/'       shift, and go to state 130

    $default  reduce using rule 149 (having)


State 285

   59 value_list_with_MINUS: COMMA value_with_MINUS value_list_with_MINUS •

    $default  reduce using rule 59 (value_list_with_MINUS)


State 286

   57 insert_list: COMMA • LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

    LBRACE  shift, and go to state 295


State 287

   55 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list •

    $default  reduce using rule 55 (insert_stmt)


State 288

   73 update_expr: ID EQ LBRACE select_stmt RBRACE update_expr_list •

    $default  reduce using rule 73 (update_expr)


State 289

   76 update_expr_list: COMMA ID EQ • LBRACE select_stmt RBRACE update_expr_list
   77                 | COMMA ID EQ • value update_expr_list

    LBRACE  shift, and go to state 296
=======
    $default  reduce using rule 162 (where)


State 217

   69 update_expr: ID EQ • LBRACE select_stmt RBRACE update_expr_list
   70            | ID EQ • value update_expr_list

    LBRACE  shift, and go to state 238
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

<<<<<<< HEAD
    value  go to state 297
=======
    value  go to state 239


State 218

   68 update_stmt: UPDATE ID SET update_expr where •

    $default  reduce using rule 68 (update_stmt)


State 219

  163 load_data_stmt: LOAD DATA INFILE SSS INTO • TABLE ID

    TABLE  shift, and go to state 240


State 220

   46 type: INT_T •

    $default  reduce using rule 46 (type)


State 221

   47 type: STRING_T •

    $default  reduce using rule 47 (type)


State 222

   49 type: FLOAT_T •

    $default  reduce using rule 49 (type)


State 223

   50 type: DATE_T •

    $default  reduce using rule 50 (type)


State 224

   48 type: TEXT_T •

    $default  reduce using rule 48 (type)


State 225

   43 attr_def: ID type • LBRACE number RBRACE nullable_marker
   44         | ID type • nullable_marker

    UNNULLABLE  shift, and go to state 241
    LBRACE      shift, and go to state 242
    NULL_T      shift, and go to state 243

    $default  reduce using rule 37 (nullable_marker)

    nullable_marker  go to state 244


State 226

   42 attr_def_list: COMMA • attr_def attr_def_list

    ID  shift, and go to state 195

    attr_def  go to state 245


State 227

   40 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list • RBRACE

    RBRACE  shift, and go to state 246


State 228

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID • LBRACE ID rel_list RBRACE

    LBRACE  shift, and go to state 247


State 229

   75 alias: AS ID •

    $default  reduce using rule 75 (alias)


State 230

  147 rel_list_with_alias: COMMA • ID alias rel_list_with_alias

    ID  shift, and go to state 248


State 231

   78 join: ID alias INNER_JOIN • ID alias join_equal join_list

    ID  shift, and go to state 249


State 232

   76 select_stmt: SELECT select_attr FROM ID alias rel_list_with_alias • where order group_by having

    WHERE  shift, and go to state 189

    $default  reduce using rule 161 (where)

    where  go to state 250


State 233

  155 order: ORDER_BY • rel_attr asc_or_desc order_list

    ID  shift, and go to state 68

    rel_attr  go to state 251


State 234

   77 select_stmt: SELECT select_attr FROM join where order • group_by having

    GROUP_BY  shift, and go to state 252

    $default  reduce using rule 150 (group_by)

    group_by  go to state 253


State 235

   58 value_with_MINUS: '-' NUMBER •

    $default  reduce using rule 58 (value_with_MINUS)


State 236

  130 function: func_LA rel_attr COMMA value_with_MINUS RBRACE •

    $default  reduce using rule 130 (function)


State 237

   51 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS • value_list_with_MINUS RBRACE insert_list

    COMMA  shift, and go to state 254

    $default  reduce using rule 54 (value_list_with_MINUS)

    value_list_with_MINUS  go to state 255


State 238

   69 update_expr: ID EQ LBRACE • select_stmt RBRACE update_expr_list

    SELECT  shift, and go to state 4

    select_stmt  go to state 256


State 239

   70 update_expr: ID EQ value • update_expr_list

    COMMA  shift, and go to state 257

    $default  reduce using rule 71 (update_expr_list)

    update_expr_list  go to state 258


State 240

  163 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE • ID

    ID  shift, and go to state 259


State 241

   38 nullable_marker: UNNULLABLE •

    $default  reduce using rule 38 (nullable_marker)


State 242

   43 attr_def: ID type LBRACE • number RBRACE nullable_marker

    NUMBER  shift, and go to state 260

    number  go to state 261


State 243

   39 nullable_marker: NULL_T •

    $default  reduce using rule 39 (nullable_marker)


State 244

   44 attr_def: ID type nullable_marker •

    $default  reduce using rule 44 (attr_def)


State 245

   42 attr_def_list: COMMA attr_def • attr_def_list

    COMMA  shift, and go to state 226

    $default  reduce using rule 41 (attr_def_list)

    attr_def_list  go to state 262


State 246

   40 create_table_stmt: CREATE TABLE ID LBRACE attr_def attr_def_list RBRACE •

    $default  reduce using rule 40 (create_table_stmt)


State 247

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE • ID rel_list RBRACE

    ID  shift, and go to state 263


State 248

  147 rel_list_with_alias: COMMA ID • alias rel_list_with_alias

    AS  shift, and go to state 200

    $default  reduce using rule 74 (alias)

    alias  go to state 264


State 249

   78 join: ID alias INNER_JOIN ID • alias join_equal join_list

    AS  shift, and go to state 200

    $default  reduce using rule 74 (alias)

    alias  go to state 265


State 250

   76 select_stmt: SELECT select_attr FROM ID alias rel_list_with_alias where • order group_by having

    ORDER_BY  shift, and go to state 233

    $default  reduce using rule 154 (order)

    order  go to state 266


State 251

  155 order: ORDER_BY rel_attr • asc_or_desc order_list

    DESC  shift, and go to state 267
    ASC   shift, and go to state 268

    $default  reduce using rule 158 (asc_or_desc)

    asc_or_desc  go to state 269


State 252

  151 group_by: GROUP_BY • rel_attr attr_list

    ID  shift, and go to state 68

    rel_attr  go to state 270


State 253

   77 select_stmt: SELECT select_attr FROM join where order group_by • having

    HAVING  shift, and go to state 271

    $default  reduce using rule 152 (having)

    having  go to state 272


State 254

   55 value_list_with_MINUS: COMMA • value_with_MINUS value_list_with_MINUS

    NULL_T  shift, and go to state 208
    NUMBER  shift, and go to state 209
    FLOAT   shift, and go to state 210
    DATE    shift, and go to state 211
    SSS     shift, and go to state 212
    '-'     shift, and go to state 213

    value_with_MINUS  go to state 273


State 255

   51 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS • RBRACE insert_list

    RBRACE  shift, and go to state 274


State 256

   69 update_expr: ID EQ LBRACE select_stmt • RBRACE update_expr_list

    RBRACE  shift, and go to state 275


State 257

   72 update_expr_list: COMMA • ID EQ LBRACE select_stmt RBRACE update_expr_list
   73                 | COMMA • ID EQ value update_expr_list

    ID  shift, and go to state 276


State 258

   70 update_expr: ID EQ value update_expr_list •

    $default  reduce using rule 70 (update_expr)


State 259

  163 load_data_stmt: LOAD DATA INFILE SSS INTO TABLE ID •

    $default  reduce using rule 163 (load_data_stmt)


State 260

   45 number: NUMBER •

    $default  reduce using rule 45 (number)


State 261

   43 attr_def: ID type LBRACE number • RBRACE nullable_marker

    RBRACE  shift, and go to state 277


State 262

   42 attr_def_list: COMMA attr_def attr_def_list •

    $default  reduce using rule 42 (attr_def_list)


State 263

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID • rel_list RBRACE

    COMMA  shift, and go to state 278

    $default  reduce using rule 148 (rel_list)

    rel_list  go to state 279


State 264

  147 rel_list_with_alias: COMMA ID alias • rel_list_with_alias

    COMMA  shift, and go to state 230

    $default  reduce using rule 146 (rel_list_with_alias)

    rel_list_with_alias  go to state 280


State 265

   78 join: ID alias INNER_JOIN ID alias • join_equal join_list

    ON  shift, and go to state 281

    $default  reduce using rule 81 (join_equal)

    join_equal  go to state 282


State 266

   76 select_stmt: SELECT select_attr FROM ID alias rel_list_with_alias where order • group_by having

    GROUP_BY  shift, and go to state 252

    $default  reduce using rule 150 (group_by)

    group_by  go to state 283


State 267

  160 asc_or_desc: DESC •

    $default  reduce using rule 160 (asc_or_desc)


State 268

  159 asc_or_desc: ASC •

    $default  reduce using rule 159 (asc_or_desc)


State 269

  155 order: ORDER_BY rel_attr asc_or_desc • order_list

    COMMA  shift, and go to state 284

    $default  reduce using rule 156 (order_list)

    order_list  go to state 285


State 270

  151 group_by: GROUP_BY rel_attr • attr_list

    COMMA  shift, and go to state 286

    $default  reduce using rule 142 (attr_list)

    attr_list  go to state 287


State 271

  153 having: HAVING • a_expr

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 288
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 272

   77 select_stmt: SELECT select_attr FROM join where order group_by having •

    $default  reduce using rule 77 (select_stmt)


State 273

   55 value_list_with_MINUS: COMMA value_with_MINUS • value_list_with_MINUS

    COMMA  shift, and go to state 254

    $default  reduce using rule 54 (value_list_with_MINUS)

    value_list_with_MINUS  go to state 289


State 274

   51 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE • insert_list

    COMMA  shift, and go to state 290

    $default  reduce using rule 52 (insert_list)

    insert_list  go to state 291


State 275

   69 update_expr: ID EQ LBRACE select_stmt RBRACE • update_expr_list

    COMMA  shift, and go to state 257

    $default  reduce using rule 71 (update_expr_list)

    update_expr_list  go to state 292


State 276

   72 update_expr_list: COMMA ID • EQ LBRACE select_stmt RBRACE update_expr_list
   73                 | COMMA ID • EQ value update_expr_list

    EQ  shift, and go to state 293


State 277

   43 attr_def: ID type LBRACE number RBRACE • nullable_marker

    UNNULLABLE  shift, and go to state 241
    NULL_T      shift, and go to state 243

    $default  reduce using rule 37 (nullable_marker)

    nullable_marker  go to state 294


State 278

  149 rel_list: COMMA • ID rel_list

    ID  shift, and go to state 295


State 279

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID rel_list • RBRACE

    RBRACE  shift, and go to state 296


State 280

  147 rel_list_with_alias: COMMA ID alias rel_list_with_alias •

    $default  reduce using rule 147 (rel_list_with_alias)


State 281

   82 join_equal: ON • a_expr

    AGG_MAX      shift, and go to state 57
    AGG_MIN      shift, and go to state 58
    AGG_COUNT    shift, and go to state 59
    AGG_AVG      shift, and go to state 60
    AGG_SUM      shift, and go to state 61
    FUNC_LENGTH  shift, and go to state 62
    FUNC_DATE    shift, and go to state 63
    FUNC_ROUND   shift, and go to state 64
    LBRACE       shift, and go to state 65
    NULL_T       shift, and go to state 48
    NOT_EXISTS   shift, and go to state 66
    EXISTS       shift, and go to state 67
    NUMBER       shift, and go to state 49
    FLOAT        shift, and go to state 50
    DATE         shift, and go to state 51
    ID           shift, and go to state 68
    SSS          shift, and go to state 52
    '+'          shift, and go to state 69
    '-'          shift, and go to state 70

    value                   go to state 72
    a_expr                  go to state 297
    c_expr                  go to state 74
    value_list_LALR         go to state 75
    select_stmt_with_paren  go to state 76
    function                go to state 78
    func_LA                 go to state 79
    func_name               go to state 80
    rel_attr                go to state 81


State 282

   78 join: ID alias INNER_JOIN ID alias join_equal • join_list

    INNER_JOIN  shift, and go to state 298

    $default  reduce using rule 80 (join_list)

    join_list  go to state 299


State 283

   76 select_stmt: SELECT select_attr FROM ID alias rel_list_with_alias where order group_by • having

    HAVING  shift, and go to state 271

    $default  reduce using rule 152 (having)

    having  go to state 300


State 284

  157 order_list: COMMA • rel_attr asc_or_desc order_list

    ID  shift, and go to state 68

    rel_attr  go to state 301
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 290

<<<<<<< HEAD
   47 attr_def: ID type LBRACE number RBRACE nullable_marker •
=======
  155 order: ORDER_BY rel_attr asc_or_desc order_list •

    $default  reduce using rule 155 (order)


State 286

  143 attr_list: COMMA • rel_attr attr_list

    ID  shift, and go to state 68

    rel_attr  go to state 302


State 287

  151 group_by: GROUP_BY rel_attr attr_list •

    $default  reduce using rule 151 (group_by)


State 288

   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr
  153 having: HAVING a_expr •  [$end, SEMICOLON, RBRACE]

    OR        shift, and go to state 116
    AND       shift, and go to state 117
    EQ        shift, and go to state 118
    LT        shift, and go to state 119
    GT        shift, and go to state 120
    LE        shift, and go to state 121
    GE        shift, and go to state 122
    NE        shift, and go to state 123
    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    IS        shift, and go to state 126
    IS_NOT    shift, and go to state 127
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 153 (having)


State 289

   55 value_list_with_MINUS: COMMA value_with_MINUS value_list_with_MINUS •

    $default  reduce using rule 55 (value_list_with_MINUS)


State 290

   53 insert_list: COMMA • LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list

    LBRACE  shift, and go to state 303


State 291

   51 insert_stmt: INSERT INTO ID VALUES LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list •

    $default  reduce using rule 51 (insert_stmt)


State 292

   69 update_expr: ID EQ LBRACE select_stmt RBRACE update_expr_list •

    $default  reduce using rule 69 (update_expr)


State 293

   72 update_expr_list: COMMA ID EQ • LBRACE select_stmt RBRACE update_expr_list
   73                 | COMMA ID EQ • value update_expr_list

    LBRACE  shift, and go to state 304
    NULL_T  shift, and go to state 48
    NUMBER  shift, and go to state 49
    FLOAT   shift, and go to state 50
    DATE    shift, and go to state 51
    SSS     shift, and go to state 52

    value  go to state 305


State 294

   43 attr_def: ID type LBRACE number RBRACE nullable_marker •
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 47 (attr_def)


<<<<<<< HEAD
State 291
=======
State 295

  149 rel_list: COMMA ID • rel_list

    COMMA  shift, and go to state 278

    $default  reduce using rule 148 (rel_list)

    rel_list  go to state 306


State 296
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

   35 create_index_stmt: CREATE unique_marker INDEX ID ON ID LBRACE ID rel_list RBRACE •

    $default  reduce using rule 35 (create_index_stmt)


<<<<<<< HEAD
State 292
=======
State 297

   82 join_equal: ON a_expr •  [$end, SEMICOLON, GROUP_BY, RBRACE, WHERE, HAVING, INNER_JOIN, ORDER_BY]
   99 a_expr: a_expr • '+' a_expr
  100       | a_expr • '-' a_expr
  101       | a_expr • '*' a_expr
  102       | a_expr • '/' a_expr
  103       | a_expr • AND a_expr
  104       | a_expr • OR a_expr
  105       | a_expr • EQ a_expr
  106       | a_expr • LT a_expr
  107       | a_expr • GT a_expr
  108       | a_expr • LE a_expr
  109       | a_expr • GE a_expr
  110       | a_expr • NE a_expr
  111       | a_expr • LIKE a_expr
  112       | a_expr • NOT_LIKE a_expr
  113       | a_expr • IS_NOT a_expr
  114       | a_expr • IS a_expr
  115       | a_expr • NOT_IN a_expr
  116       | a_expr • IN a_expr

    OR        shift, and go to state 116
    AND       shift, and go to state 117
    EQ        shift, and go to state 118
    LT        shift, and go to state 119
    GT        shift, and go to state 120
    LE        shift, and go to state 121
    GE        shift, and go to state 122
    NE        shift, and go to state 123
    LIKE      shift, and go to state 124
    NOT_LIKE  shift, and go to state 125
    IS        shift, and go to state 126
    IS_NOT    shift, and go to state 127
    NOT_IN    shift, and go to state 128
    IN        shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133

    $default  reduce using rule 82 (join_equal)


State 298

   79 join_list: INNER_JOIN • ID alias join_equal join_list

    ID  shift, and go to state 307


State 299

   78 join: ID alias INNER_JOIN ID alias join_equal join_list •

    $default  reduce using rule 78 (join)


State 300

   76 select_stmt: SELECT select_attr FROM ID alias rel_list_with_alias where order group_by having •

    $default  reduce using rule 76 (select_stmt)


State 301

  157 order_list: COMMA rel_attr • asc_or_desc order_list

    DESC  shift, and go to state 267
    ASC   shift, and go to state 268

    $default  reduce using rule 158 (asc_or_desc)

    asc_or_desc  go to state 308


State 302

  143 attr_list: COMMA rel_attr • attr_list

    COMMA  shift, and go to state 286

    $default  reduce using rule 142 (attr_list)

    attr_list  go to state 309


State 303

   53 insert_list: COMMA LBRACE • value_with_MINUS value_list_with_MINUS RBRACE insert_list

    NULL_T  shift, and go to state 208
    NUMBER  shift, and go to state 209
    FLOAT   shift, and go to state 210
    DATE    shift, and go to state 211
    SSS     shift, and go to state 212
    '-'     shift, and go to state 213

    value_with_MINUS  go to state 310


State 304

   72 update_expr_list: COMMA ID EQ LBRACE • select_stmt RBRACE update_expr_list

    SELECT  shift, and go to state 4

    select_stmt  go to state 311


State 305
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

   81 join_list: INNER_JOIN ID join_equal • join_list

<<<<<<< HEAD
    INNER_JOIN  shift, and go to state 262
=======
    COMMA  shift, and go to state 257
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    $default  reduce using rule 82 (join_list)

<<<<<<< HEAD
    join_list  go to state 298
=======
    update_expr_list  go to state 312
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 306

<<<<<<< HEAD
  153 order_list: COMMA rel_attr • asc_or_desc order_list

    DESC  shift, and go to state 265
    ASC   shift, and go to state 266

    $default  reduce using rule 154 (asc_or_desc)

    asc_or_desc  go to state 299
=======
  149 rel_list: COMMA ID rel_list •

    $default  reduce using rule 149 (rel_list)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 307

<<<<<<< HEAD
  141 attr_list: COMMA rel_attr • attr_list

    COMMA  shift, and go to state 282

    $default  reduce using rule 140 (attr_list)

    attr_list  go to state 300
=======
   79 join_list: INNER_JOIN ID • alias join_equal join_list

    AS  shift, and go to state 200

    $default  reduce using rule 74 (alias)

    alias  go to state 313
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 308

<<<<<<< HEAD
   57 insert_list: COMMA LBRACE • value_with_MINUS value_list_with_MINUS RBRACE insert_list

    NULL_T  shift, and go to state 225
    NUMBER  shift, and go to state 226
    FLOAT   shift, and go to state 227
    DATE    shift, and go to state 228
    SSS     shift, and go to state 229
    '-'     shift, and go to state 230

    value_with_MINUS  go to state 301
=======
  157 order_list: COMMA rel_attr asc_or_desc • order_list

    COMMA  shift, and go to state 284

    $default  reduce using rule 156 (order_list)

    order_list  go to state 314
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 309

  143 attr_list: COMMA rel_attr attr_list •

    $default  reduce using rule 143 (attr_list)


State 310

   76 update_expr_list: COMMA ID EQ LBRACE • select_stmt RBRACE update_expr_list

<<<<<<< HEAD
    SELECT  shift, and go to state 4

    select_stmt  go to state 302
=======
    COMMA  shift, and go to state 254

    $default  reduce using rule 54 (value_list_with_MINUS)

    value_list_with_MINUS  go to state 315
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 311

   77 update_expr_list: COMMA ID EQ value • update_expr_list

<<<<<<< HEAD
    COMMA  shift, and go to state 253

    $default  reduce using rule 75 (update_expr_list)
=======
    RBRACE  shift, and go to state 316


State 312

   73 update_expr_list: COMMA ID EQ value update_expr_list •

    $default  reduce using rule 73 (update_expr_list)


State 313

   79 join_list: INNER_JOIN ID alias • join_equal join_list

    ON  shift, and go to state 281

    $default  reduce using rule 81 (join_equal)

    join_equal  go to state 317


State 314

  157 order_list: COMMA rel_attr asc_or_desc order_list •

    $default  reduce using rule 157 (order_list)


State 315

   53 insert_list: COMMA LBRACE value_with_MINUS value_list_with_MINUS • RBRACE insert_list

    RBRACE  shift, and go to state 318


State 316

   72 update_expr_list: COMMA ID EQ LBRACE select_stmt RBRACE • update_expr_list

    COMMA  shift, and go to state 257

    $default  reduce using rule 71 (update_expr_list)
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

    update_expr_list  go to state 319


<<<<<<< HEAD
State 298

   81 join_list: INNER_JOIN ID join_equal join_list •

    $default  reduce using rule 81 (join_list)


State 299

  153 order_list: COMMA rel_attr asc_or_desc • order_list

    COMMA  shift, and go to state 280

    $default  reduce using rule 152 (order_list)

    order_list  go to state 304


State 300

  141 attr_list: COMMA rel_attr attr_list •

    $default  reduce using rule 141 (attr_list)


State 301

   57 insert_list: COMMA LBRACE value_with_MINUS • value_list_with_MINUS RBRACE insert_list

    COMMA  shift, and go to state 250

    $default  reduce using rule 58 (value_list_with_MINUS)

    value_list_with_MINUS  go to state 305


State 302
=======
State 317

   79 join_list: INNER_JOIN ID alias join_equal • join_list

    INNER_JOIN  shift, and go to state 298

    $default  reduce using rule 80 (join_list)

    join_list  go to state 320


State 318
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273

   76 update_expr_list: COMMA ID EQ LBRACE select_stmt • RBRACE update_expr_list

<<<<<<< HEAD
    RBRACE  shift, and go to state 306
=======
    COMMA  shift, and go to state 290

    $default  reduce using rule 52 (insert_list)

    insert_list  go to state 321
>>>>>>> 142db6579478ed2fa0fa1b2ff8a94dedf0941273


State 319

   77 update_expr_list: COMMA ID EQ value update_expr_list •

    $default  reduce using rule 77 (update_expr_list)


State 320

   79 join_list: INNER_JOIN ID alias join_equal join_list •

    $default  reduce using rule 79 (join_list)


State 321

  153 order_list: COMMA rel_attr asc_or_desc order_list •

    $default  reduce using rule 153 (order_list)


State 305

   57 insert_list: COMMA LBRACE value_with_MINUS value_list_with_MINUS • RBRACE insert_list

    RBRACE  shift, and go to state 307


State 306

   76 update_expr_list: COMMA ID EQ LBRACE select_stmt RBRACE • update_expr_list

    COMMA  shift, and go to state 253

    $default  reduce using rule 75 (update_expr_list)

    update_expr_list  go to state 308


State 307

   57 insert_list: COMMA LBRACE value_with_MINUS value_list_with_MINUS RBRACE • insert_list

    COMMA  shift, and go to state 286

    $default  reduce using rule 56 (insert_list)

    insert_list  go to state 309


State 308

   76 update_expr_list: COMMA ID EQ LBRACE select_stmt RBRACE update_expr_list •

    $default  reduce using rule 76 (update_expr_list)


State 309

   57 insert_list: COMMA LBRACE value_with_MINUS value_list_with_MINUS RBRACE insert_list •

    $default  reduce using rule 57 (insert_list)
